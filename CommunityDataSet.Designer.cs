//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MCKJ {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ComDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ComDataSet : global::System.Data.DataSet {
        
        private usp_HallBooking_SearchDataTable tableusp_HallBooking_Search;
        
        private usp_SEL_DDL_USERDataTable tableusp_SEL_DDL_USER;
        
        private usp_SEL_tblPermissionDataTable tableusp_SEL_tblPermission;
        
        private usp_SEL_FAMILYDataTable tableusp_SEL_FAMILY;
        
        private usp_SEL_tblNukhDataTable tableusp_SEL_tblNukh;
        
        private usp_SEL_tblOrakhDataTable tableusp_SEL_tblOrakh;
        
        private usp_SEL_tblCityDataTable tableusp_SEL_tblCity;
        
        private usp_SEL_tblVillageDataTable tableusp_SEL_tblVillage;
        
        private usp_SEL_tblFamilyMemberDataTable tableusp_SEL_tblFamilyMember;
        
        private usp_SEL_tblBloodGroupDataTable tableusp_SEL_tblBloodGroup;
        
        private usp_SEL_tblAreaDataTable tableusp_SEL_tblArea;
        
        private usp_SEL_EngagementDataTable tableusp_SEL_Engagement;
        
        private usp_Male_tblFamilyMemberDataTable tableusp_Male_tblFamilyMember;
        
        private usp_Female_tblFamilyMemberDataTable tableusp_Female_tblFamilyMember;
        
        private usp_SEL_MarriageDataTable tableusp_SEL_Marriage;
        
        private usp_SEL_tblWorkTypeDataTable tableusp_SEL_tblWorkType;
        
        private usp_rpt_MembersDataTable tableusp_rpt_Members;
        
        private tblTransactionsDataTable tabletblTransactions;
        
        private tblVouchersDataTable tabletblVouchers;
        
        private tblLedgerDataTable tabletblLedger;
        
        private usp_HallBooking_Search_DataTable tableusp_HallBooking_Search_;
        
        private usp_SEL_BirthDataTable tableusp_SEL_Birth;
        
        private usp_SEL_DeathDataTable tableusp_SEL_Death;
        
        private usp_SEL_RenewalDataTable tableusp_SEL_Renewal;
        
        private tblAccountsDataTable tabletblAccounts;
        
        private usp_SEL_TSF_tblFamilyMemberDataTable tableusp_SEL_TSF_tblFamilyMember;
        
        private tblMembersDataTable tabletblMembers;
        
        private tblTrialBalanceDataTable tabletblTrialBalance;
        
        private tblSecurityDataTable tabletblSecurity;
        
        private tblSecurityLevelDataTable tabletblSecurityLevel;
        
        private tblLogingDataTable tabletblLoging;
        
        private usp_SEL_DonationDataTable tableusp_SEL_Donation;
        
        private tblUserGroupDataTable tabletblUserGroup;
        
        private tblHelpDataTable tabletblHelp;
        
        private tblDailyTransactionsDataTable tabletblDailyTransactions;
        
        private tblAdvance1DataTable tabletblAdvance1;
        
        private tblAdvanceDataTable tabletblAdvance;
        
        private tblNICFormDataTable tabletblNICForm;
        
        private tblAidsDataTable tabletblAids;
        
        private usp_SEL_CancelledEventsDataTable tableusp_SEL_CancelledEvents;
        
        private usp_RPT_DailyTransactionsDataTable tableusp_RPT_DailyTransactions;
        
        private usp_DailyTransactions_ReportDataTable tableusp_DailyTransactions_Report;
        
        private usp_GetHallBookingDataTable tableusp_GetHallBooking;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ComDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ComDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["usp_HallBooking_Search"] != null)) {
                    base.Tables.Add(new usp_HallBooking_SearchDataTable(ds.Tables["usp_HallBooking_Search"]));
                }
                if ((ds.Tables["usp_SEL_DDL_USER"] != null)) {
                    base.Tables.Add(new usp_SEL_DDL_USERDataTable(ds.Tables["usp_SEL_DDL_USER"]));
                }
                if ((ds.Tables["usp_SEL_tblPermission"] != null)) {
                    base.Tables.Add(new usp_SEL_tblPermissionDataTable(ds.Tables["usp_SEL_tblPermission"]));
                }
                if ((ds.Tables["usp_SEL_FAMILY"] != null)) {
                    base.Tables.Add(new usp_SEL_FAMILYDataTable(ds.Tables["usp_SEL_FAMILY"]));
                }
                if ((ds.Tables["usp_SEL_tblNukh"] != null)) {
                    base.Tables.Add(new usp_SEL_tblNukhDataTable(ds.Tables["usp_SEL_tblNukh"]));
                }
                if ((ds.Tables["usp_SEL_tblOrakh"] != null)) {
                    base.Tables.Add(new usp_SEL_tblOrakhDataTable(ds.Tables["usp_SEL_tblOrakh"]));
                }
                if ((ds.Tables["usp_SEL_tblCity"] != null)) {
                    base.Tables.Add(new usp_SEL_tblCityDataTable(ds.Tables["usp_SEL_tblCity"]));
                }
                if ((ds.Tables["usp_SEL_tblVillage"] != null)) {
                    base.Tables.Add(new usp_SEL_tblVillageDataTable(ds.Tables["usp_SEL_tblVillage"]));
                }
                if ((ds.Tables["usp_SEL_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_SEL_tblFamilyMemberDataTable(ds.Tables["usp_SEL_tblFamilyMember"]));
                }
                if ((ds.Tables["usp_SEL_tblBloodGroup"] != null)) {
                    base.Tables.Add(new usp_SEL_tblBloodGroupDataTable(ds.Tables["usp_SEL_tblBloodGroup"]));
                }
                if ((ds.Tables["usp_SEL_tblArea"] != null)) {
                    base.Tables.Add(new usp_SEL_tblAreaDataTable(ds.Tables["usp_SEL_tblArea"]));
                }
                if ((ds.Tables["usp_SEL_Engagement"] != null)) {
                    base.Tables.Add(new usp_SEL_EngagementDataTable(ds.Tables["usp_SEL_Engagement"]));
                }
                if ((ds.Tables["usp_Male_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_Male_tblFamilyMemberDataTable(ds.Tables["usp_Male_tblFamilyMember"]));
                }
                if ((ds.Tables["usp_Female_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_Female_tblFamilyMemberDataTable(ds.Tables["usp_Female_tblFamilyMember"]));
                }
                if ((ds.Tables["usp_SEL_Marriage"] != null)) {
                    base.Tables.Add(new usp_SEL_MarriageDataTable(ds.Tables["usp_SEL_Marriage"]));
                }
                if ((ds.Tables["usp_SEL_tblWorkType"] != null)) {
                    base.Tables.Add(new usp_SEL_tblWorkTypeDataTable(ds.Tables["usp_SEL_tblWorkType"]));
                }
                if ((ds.Tables["usp_rpt_Members"] != null)) {
                    base.Tables.Add(new usp_rpt_MembersDataTable(ds.Tables["usp_rpt_Members"]));
                }
                if ((ds.Tables["tblTransactions"] != null)) {
                    base.Tables.Add(new tblTransactionsDataTable(ds.Tables["tblTransactions"]));
                }
                if ((ds.Tables["tblVouchers"] != null)) {
                    base.Tables.Add(new tblVouchersDataTable(ds.Tables["tblVouchers"]));
                }
                if ((ds.Tables["tblLedger"] != null)) {
                    base.Tables.Add(new tblLedgerDataTable(ds.Tables["tblLedger"]));
                }
                if ((ds.Tables["usp_HallBooking_Search_"] != null)) {
                    base.Tables.Add(new usp_HallBooking_Search_DataTable(ds.Tables["usp_HallBooking_Search_"]));
                }
                if ((ds.Tables["usp_SEL_Birth"] != null)) {
                    base.Tables.Add(new usp_SEL_BirthDataTable(ds.Tables["usp_SEL_Birth"]));
                }
                if ((ds.Tables["usp_SEL_Death"] != null)) {
                    base.Tables.Add(new usp_SEL_DeathDataTable(ds.Tables["usp_SEL_Death"]));
                }
                if ((ds.Tables["usp_SEL_Renewal"] != null)) {
                    base.Tables.Add(new usp_SEL_RenewalDataTable(ds.Tables["usp_SEL_Renewal"]));
                }
                if ((ds.Tables["tblAccounts"] != null)) {
                    base.Tables.Add(new tblAccountsDataTable(ds.Tables["tblAccounts"]));
                }
                if ((ds.Tables["usp_SEL_TSF_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_SEL_TSF_tblFamilyMemberDataTable(ds.Tables["usp_SEL_TSF_tblFamilyMember"]));
                }
                if ((ds.Tables["tblMembers"] != null)) {
                    base.Tables.Add(new tblMembersDataTable(ds.Tables["tblMembers"]));
                }
                if ((ds.Tables["tblTrialBalance"] != null)) {
                    base.Tables.Add(new tblTrialBalanceDataTable(ds.Tables["tblTrialBalance"]));
                }
                if ((ds.Tables["tblSecurity"] != null)) {
                    base.Tables.Add(new tblSecurityDataTable(ds.Tables["tblSecurity"]));
                }
                if ((ds.Tables["tblSecurityLevel"] != null)) {
                    base.Tables.Add(new tblSecurityLevelDataTable(ds.Tables["tblSecurityLevel"]));
                }
                if ((ds.Tables["tblLoging"] != null)) {
                    base.Tables.Add(new tblLogingDataTable(ds.Tables["tblLoging"]));
                }
                if ((ds.Tables["usp_SEL_Donation"] != null)) {
                    base.Tables.Add(new usp_SEL_DonationDataTable(ds.Tables["usp_SEL_Donation"]));
                }
                if ((ds.Tables["tblUserGroup"] != null)) {
                    base.Tables.Add(new tblUserGroupDataTable(ds.Tables["tblUserGroup"]));
                }
                if ((ds.Tables["tblHelp"] != null)) {
                    base.Tables.Add(new tblHelpDataTable(ds.Tables["tblHelp"]));
                }
                if ((ds.Tables["tblDailyTransactions"] != null)) {
                    base.Tables.Add(new tblDailyTransactionsDataTable(ds.Tables["tblDailyTransactions"]));
                }
                if ((ds.Tables["tblAdvance1"] != null)) {
                    base.Tables.Add(new tblAdvance1DataTable(ds.Tables["tblAdvance1"]));
                }
                if ((ds.Tables["tblAdvance"] != null)) {
                    base.Tables.Add(new tblAdvanceDataTable(ds.Tables["tblAdvance"]));
                }
                if ((ds.Tables["tblNICForm"] != null)) {
                    base.Tables.Add(new tblNICFormDataTable(ds.Tables["tblNICForm"]));
                }
                if ((ds.Tables["tblAids"] != null)) {
                    base.Tables.Add(new tblAidsDataTable(ds.Tables["tblAids"]));
                }
                if ((ds.Tables["usp_SEL_CancelledEvents"] != null)) {
                    base.Tables.Add(new usp_SEL_CancelledEventsDataTable(ds.Tables["usp_SEL_CancelledEvents"]));
                }
                if ((ds.Tables["usp_RPT_DailyTransactions"] != null)) {
                    base.Tables.Add(new usp_RPT_DailyTransactionsDataTable(ds.Tables["usp_RPT_DailyTransactions"]));
                }
                if ((ds.Tables["usp_DailyTransactions_Report"] != null)) {
                    base.Tables.Add(new usp_DailyTransactions_ReportDataTable(ds.Tables["usp_DailyTransactions_Report"]));
                }
                if ((ds.Tables["usp_GetHallBooking"] != null)) {
                    base.Tables.Add(new usp_GetHallBookingDataTable(ds.Tables["usp_GetHallBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_HallBooking_SearchDataTable usp_HallBooking_Search {
            get {
                return this.tableusp_HallBooking_Search;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_DDL_USERDataTable usp_SEL_DDL_USER {
            get {
                return this.tableusp_SEL_DDL_USER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblPermissionDataTable usp_SEL_tblPermission {
            get {
                return this.tableusp_SEL_tblPermission;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_FAMILYDataTable usp_SEL_FAMILY {
            get {
                return this.tableusp_SEL_FAMILY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblNukhDataTable usp_SEL_tblNukh {
            get {
                return this.tableusp_SEL_tblNukh;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblOrakhDataTable usp_SEL_tblOrakh {
            get {
                return this.tableusp_SEL_tblOrakh;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblCityDataTable usp_SEL_tblCity {
            get {
                return this.tableusp_SEL_tblCity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblVillageDataTable usp_SEL_tblVillage {
            get {
                return this.tableusp_SEL_tblVillage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblFamilyMemberDataTable usp_SEL_tblFamilyMember {
            get {
                return this.tableusp_SEL_tblFamilyMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblBloodGroupDataTable usp_SEL_tblBloodGroup {
            get {
                return this.tableusp_SEL_tblBloodGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblAreaDataTable usp_SEL_tblArea {
            get {
                return this.tableusp_SEL_tblArea;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_EngagementDataTable usp_SEL_Engagement {
            get {
                return this.tableusp_SEL_Engagement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_Male_tblFamilyMemberDataTable usp_Male_tblFamilyMember {
            get {
                return this.tableusp_Male_tblFamilyMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_Female_tblFamilyMemberDataTable usp_Female_tblFamilyMember {
            get {
                return this.tableusp_Female_tblFamilyMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_MarriageDataTable usp_SEL_Marriage {
            get {
                return this.tableusp_SEL_Marriage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_tblWorkTypeDataTable usp_SEL_tblWorkType {
            get {
                return this.tableusp_SEL_tblWorkType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_rpt_MembersDataTable usp_rpt_Members {
            get {
                return this.tableusp_rpt_Members;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblTransactionsDataTable tblTransactions {
            get {
                return this.tabletblTransactions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblVouchersDataTable tblVouchers {
            get {
                return this.tabletblVouchers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblLedgerDataTable tblLedger {
            get {
                return this.tabletblLedger;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_HallBooking_Search_DataTable usp_HallBooking_Search_ {
            get {
                return this.tableusp_HallBooking_Search_;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_BirthDataTable usp_SEL_Birth {
            get {
                return this.tableusp_SEL_Birth;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_DeathDataTable usp_SEL_Death {
            get {
                return this.tableusp_SEL_Death;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_RenewalDataTable usp_SEL_Renewal {
            get {
                return this.tableusp_SEL_Renewal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblAccountsDataTable tblAccounts {
            get {
                return this.tabletblAccounts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_TSF_tblFamilyMemberDataTable usp_SEL_TSF_tblFamilyMember {
            get {
                return this.tableusp_SEL_TSF_tblFamilyMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblMembersDataTable tblMembers {
            get {
                return this.tabletblMembers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblTrialBalanceDataTable tblTrialBalance {
            get {
                return this.tabletblTrialBalance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSecurityDataTable tblSecurity {
            get {
                return this.tabletblSecurity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSecurityLevelDataTable tblSecurityLevel {
            get {
                return this.tabletblSecurityLevel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblLogingDataTable tblLoging {
            get {
                return this.tabletblLoging;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_DonationDataTable usp_SEL_Donation {
            get {
                return this.tableusp_SEL_Donation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblUserGroupDataTable tblUserGroup {
            get {
                return this.tabletblUserGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblHelpDataTable tblHelp {
            get {
                return this.tabletblHelp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblDailyTransactionsDataTable tblDailyTransactions {
            get {
                return this.tabletblDailyTransactions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblAdvance1DataTable tblAdvance1 {
            get {
                return this.tabletblAdvance1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblAdvanceDataTable tblAdvance {
            get {
                return this.tabletblAdvance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblNICFormDataTable tblNICForm {
            get {
                return this.tabletblNICForm;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblAidsDataTable tblAids {
            get {
                return this.tabletblAids;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_SEL_CancelledEventsDataTable usp_SEL_CancelledEvents {
            get {
                return this.tableusp_SEL_CancelledEvents;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_RPT_DailyTransactionsDataTable usp_RPT_DailyTransactions {
            get {
                return this.tableusp_RPT_DailyTransactions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_DailyTransactions_ReportDataTable usp_DailyTransactions_Report {
            get {
                return this.tableusp_DailyTransactions_Report;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_GetHallBookingDataTable usp_GetHallBooking {
            get {
                return this.tableusp_GetHallBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ComDataSet cln = ((ComDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["usp_HallBooking_Search"] != null)) {
                    base.Tables.Add(new usp_HallBooking_SearchDataTable(ds.Tables["usp_HallBooking_Search"]));
                }
                if ((ds.Tables["usp_SEL_DDL_USER"] != null)) {
                    base.Tables.Add(new usp_SEL_DDL_USERDataTable(ds.Tables["usp_SEL_DDL_USER"]));
                }
                if ((ds.Tables["usp_SEL_tblPermission"] != null)) {
                    base.Tables.Add(new usp_SEL_tblPermissionDataTable(ds.Tables["usp_SEL_tblPermission"]));
                }
                if ((ds.Tables["usp_SEL_FAMILY"] != null)) {
                    base.Tables.Add(new usp_SEL_FAMILYDataTable(ds.Tables["usp_SEL_FAMILY"]));
                }
                if ((ds.Tables["usp_SEL_tblNukh"] != null)) {
                    base.Tables.Add(new usp_SEL_tblNukhDataTable(ds.Tables["usp_SEL_tblNukh"]));
                }
                if ((ds.Tables["usp_SEL_tblOrakh"] != null)) {
                    base.Tables.Add(new usp_SEL_tblOrakhDataTable(ds.Tables["usp_SEL_tblOrakh"]));
                }
                if ((ds.Tables["usp_SEL_tblCity"] != null)) {
                    base.Tables.Add(new usp_SEL_tblCityDataTable(ds.Tables["usp_SEL_tblCity"]));
                }
                if ((ds.Tables["usp_SEL_tblVillage"] != null)) {
                    base.Tables.Add(new usp_SEL_tblVillageDataTable(ds.Tables["usp_SEL_tblVillage"]));
                }
                if ((ds.Tables["usp_SEL_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_SEL_tblFamilyMemberDataTable(ds.Tables["usp_SEL_tblFamilyMember"]));
                }
                if ((ds.Tables["usp_SEL_tblBloodGroup"] != null)) {
                    base.Tables.Add(new usp_SEL_tblBloodGroupDataTable(ds.Tables["usp_SEL_tblBloodGroup"]));
                }
                if ((ds.Tables["usp_SEL_tblArea"] != null)) {
                    base.Tables.Add(new usp_SEL_tblAreaDataTable(ds.Tables["usp_SEL_tblArea"]));
                }
                if ((ds.Tables["usp_SEL_Engagement"] != null)) {
                    base.Tables.Add(new usp_SEL_EngagementDataTable(ds.Tables["usp_SEL_Engagement"]));
                }
                if ((ds.Tables["usp_Male_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_Male_tblFamilyMemberDataTable(ds.Tables["usp_Male_tblFamilyMember"]));
                }
                if ((ds.Tables["usp_Female_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_Female_tblFamilyMemberDataTable(ds.Tables["usp_Female_tblFamilyMember"]));
                }
                if ((ds.Tables["usp_SEL_Marriage"] != null)) {
                    base.Tables.Add(new usp_SEL_MarriageDataTable(ds.Tables["usp_SEL_Marriage"]));
                }
                if ((ds.Tables["usp_SEL_tblWorkType"] != null)) {
                    base.Tables.Add(new usp_SEL_tblWorkTypeDataTable(ds.Tables["usp_SEL_tblWorkType"]));
                }
                if ((ds.Tables["usp_rpt_Members"] != null)) {
                    base.Tables.Add(new usp_rpt_MembersDataTable(ds.Tables["usp_rpt_Members"]));
                }
                if ((ds.Tables["tblTransactions"] != null)) {
                    base.Tables.Add(new tblTransactionsDataTable(ds.Tables["tblTransactions"]));
                }
                if ((ds.Tables["tblVouchers"] != null)) {
                    base.Tables.Add(new tblVouchersDataTable(ds.Tables["tblVouchers"]));
                }
                if ((ds.Tables["tblLedger"] != null)) {
                    base.Tables.Add(new tblLedgerDataTable(ds.Tables["tblLedger"]));
                }
                if ((ds.Tables["usp_HallBooking_Search_"] != null)) {
                    base.Tables.Add(new usp_HallBooking_Search_DataTable(ds.Tables["usp_HallBooking_Search_"]));
                }
                if ((ds.Tables["usp_SEL_Birth"] != null)) {
                    base.Tables.Add(new usp_SEL_BirthDataTable(ds.Tables["usp_SEL_Birth"]));
                }
                if ((ds.Tables["usp_SEL_Death"] != null)) {
                    base.Tables.Add(new usp_SEL_DeathDataTable(ds.Tables["usp_SEL_Death"]));
                }
                if ((ds.Tables["usp_SEL_Renewal"] != null)) {
                    base.Tables.Add(new usp_SEL_RenewalDataTable(ds.Tables["usp_SEL_Renewal"]));
                }
                if ((ds.Tables["tblAccounts"] != null)) {
                    base.Tables.Add(new tblAccountsDataTable(ds.Tables["tblAccounts"]));
                }
                if ((ds.Tables["usp_SEL_TSF_tblFamilyMember"] != null)) {
                    base.Tables.Add(new usp_SEL_TSF_tblFamilyMemberDataTable(ds.Tables["usp_SEL_TSF_tblFamilyMember"]));
                }
                if ((ds.Tables["tblMembers"] != null)) {
                    base.Tables.Add(new tblMembersDataTable(ds.Tables["tblMembers"]));
                }
                if ((ds.Tables["tblTrialBalance"] != null)) {
                    base.Tables.Add(new tblTrialBalanceDataTable(ds.Tables["tblTrialBalance"]));
                }
                if ((ds.Tables["tblSecurity"] != null)) {
                    base.Tables.Add(new tblSecurityDataTable(ds.Tables["tblSecurity"]));
                }
                if ((ds.Tables["tblSecurityLevel"] != null)) {
                    base.Tables.Add(new tblSecurityLevelDataTable(ds.Tables["tblSecurityLevel"]));
                }
                if ((ds.Tables["tblLoging"] != null)) {
                    base.Tables.Add(new tblLogingDataTable(ds.Tables["tblLoging"]));
                }
                if ((ds.Tables["usp_SEL_Donation"] != null)) {
                    base.Tables.Add(new usp_SEL_DonationDataTable(ds.Tables["usp_SEL_Donation"]));
                }
                if ((ds.Tables["tblUserGroup"] != null)) {
                    base.Tables.Add(new tblUserGroupDataTable(ds.Tables["tblUserGroup"]));
                }
                if ((ds.Tables["tblHelp"] != null)) {
                    base.Tables.Add(new tblHelpDataTable(ds.Tables["tblHelp"]));
                }
                if ((ds.Tables["tblDailyTransactions"] != null)) {
                    base.Tables.Add(new tblDailyTransactionsDataTable(ds.Tables["tblDailyTransactions"]));
                }
                if ((ds.Tables["tblAdvance1"] != null)) {
                    base.Tables.Add(new tblAdvance1DataTable(ds.Tables["tblAdvance1"]));
                }
                if ((ds.Tables["tblAdvance"] != null)) {
                    base.Tables.Add(new tblAdvanceDataTable(ds.Tables["tblAdvance"]));
                }
                if ((ds.Tables["tblNICForm"] != null)) {
                    base.Tables.Add(new tblNICFormDataTable(ds.Tables["tblNICForm"]));
                }
                if ((ds.Tables["tblAids"] != null)) {
                    base.Tables.Add(new tblAidsDataTable(ds.Tables["tblAids"]));
                }
                if ((ds.Tables["usp_SEL_CancelledEvents"] != null)) {
                    base.Tables.Add(new usp_SEL_CancelledEventsDataTable(ds.Tables["usp_SEL_CancelledEvents"]));
                }
                if ((ds.Tables["usp_RPT_DailyTransactions"] != null)) {
                    base.Tables.Add(new usp_RPT_DailyTransactionsDataTable(ds.Tables["usp_RPT_DailyTransactions"]));
                }
                if ((ds.Tables["usp_DailyTransactions_Report"] != null)) {
                    base.Tables.Add(new usp_DailyTransactions_ReportDataTable(ds.Tables["usp_DailyTransactions_Report"]));
                }
                if ((ds.Tables["usp_GetHallBooking"] != null)) {
                    base.Tables.Add(new usp_GetHallBookingDataTable(ds.Tables["usp_GetHallBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableusp_HallBooking_Search = ((usp_HallBooking_SearchDataTable)(base.Tables["usp_HallBooking_Search"]));
            if ((initTable == true)) {
                if ((this.tableusp_HallBooking_Search != null)) {
                    this.tableusp_HallBooking_Search.InitVars();
                }
            }
            this.tableusp_SEL_DDL_USER = ((usp_SEL_DDL_USERDataTable)(base.Tables["usp_SEL_DDL_USER"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_DDL_USER != null)) {
                    this.tableusp_SEL_DDL_USER.InitVars();
                }
            }
            this.tableusp_SEL_tblPermission = ((usp_SEL_tblPermissionDataTable)(base.Tables["usp_SEL_tblPermission"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblPermission != null)) {
                    this.tableusp_SEL_tblPermission.InitVars();
                }
            }
            this.tableusp_SEL_FAMILY = ((usp_SEL_FAMILYDataTable)(base.Tables["usp_SEL_FAMILY"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_FAMILY != null)) {
                    this.tableusp_SEL_FAMILY.InitVars();
                }
            }
            this.tableusp_SEL_tblNukh = ((usp_SEL_tblNukhDataTable)(base.Tables["usp_SEL_tblNukh"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblNukh != null)) {
                    this.tableusp_SEL_tblNukh.InitVars();
                }
            }
            this.tableusp_SEL_tblOrakh = ((usp_SEL_tblOrakhDataTable)(base.Tables["usp_SEL_tblOrakh"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblOrakh != null)) {
                    this.tableusp_SEL_tblOrakh.InitVars();
                }
            }
            this.tableusp_SEL_tblCity = ((usp_SEL_tblCityDataTable)(base.Tables["usp_SEL_tblCity"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblCity != null)) {
                    this.tableusp_SEL_tblCity.InitVars();
                }
            }
            this.tableusp_SEL_tblVillage = ((usp_SEL_tblVillageDataTable)(base.Tables["usp_SEL_tblVillage"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblVillage != null)) {
                    this.tableusp_SEL_tblVillage.InitVars();
                }
            }
            this.tableusp_SEL_tblFamilyMember = ((usp_SEL_tblFamilyMemberDataTable)(base.Tables["usp_SEL_tblFamilyMember"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblFamilyMember != null)) {
                    this.tableusp_SEL_tblFamilyMember.InitVars();
                }
            }
            this.tableusp_SEL_tblBloodGroup = ((usp_SEL_tblBloodGroupDataTable)(base.Tables["usp_SEL_tblBloodGroup"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblBloodGroup != null)) {
                    this.tableusp_SEL_tblBloodGroup.InitVars();
                }
            }
            this.tableusp_SEL_tblArea = ((usp_SEL_tblAreaDataTable)(base.Tables["usp_SEL_tblArea"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblArea != null)) {
                    this.tableusp_SEL_tblArea.InitVars();
                }
            }
            this.tableusp_SEL_Engagement = ((usp_SEL_EngagementDataTable)(base.Tables["usp_SEL_Engagement"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_Engagement != null)) {
                    this.tableusp_SEL_Engagement.InitVars();
                }
            }
            this.tableusp_Male_tblFamilyMember = ((usp_Male_tblFamilyMemberDataTable)(base.Tables["usp_Male_tblFamilyMember"]));
            if ((initTable == true)) {
                if ((this.tableusp_Male_tblFamilyMember != null)) {
                    this.tableusp_Male_tblFamilyMember.InitVars();
                }
            }
            this.tableusp_Female_tblFamilyMember = ((usp_Female_tblFamilyMemberDataTable)(base.Tables["usp_Female_tblFamilyMember"]));
            if ((initTable == true)) {
                if ((this.tableusp_Female_tblFamilyMember != null)) {
                    this.tableusp_Female_tblFamilyMember.InitVars();
                }
            }
            this.tableusp_SEL_Marriage = ((usp_SEL_MarriageDataTable)(base.Tables["usp_SEL_Marriage"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_Marriage != null)) {
                    this.tableusp_SEL_Marriage.InitVars();
                }
            }
            this.tableusp_SEL_tblWorkType = ((usp_SEL_tblWorkTypeDataTable)(base.Tables["usp_SEL_tblWorkType"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_tblWorkType != null)) {
                    this.tableusp_SEL_tblWorkType.InitVars();
                }
            }
            this.tableusp_rpt_Members = ((usp_rpt_MembersDataTable)(base.Tables["usp_rpt_Members"]));
            if ((initTable == true)) {
                if ((this.tableusp_rpt_Members != null)) {
                    this.tableusp_rpt_Members.InitVars();
                }
            }
            this.tabletblTransactions = ((tblTransactionsDataTable)(base.Tables["tblTransactions"]));
            if ((initTable == true)) {
                if ((this.tabletblTransactions != null)) {
                    this.tabletblTransactions.InitVars();
                }
            }
            this.tabletblVouchers = ((tblVouchersDataTable)(base.Tables["tblVouchers"]));
            if ((initTable == true)) {
                if ((this.tabletblVouchers != null)) {
                    this.tabletblVouchers.InitVars();
                }
            }
            this.tabletblLedger = ((tblLedgerDataTable)(base.Tables["tblLedger"]));
            if ((initTable == true)) {
                if ((this.tabletblLedger != null)) {
                    this.tabletblLedger.InitVars();
                }
            }
            this.tableusp_HallBooking_Search_ = ((usp_HallBooking_Search_DataTable)(base.Tables["usp_HallBooking_Search_"]));
            if ((initTable == true)) {
                if ((this.tableusp_HallBooking_Search_ != null)) {
                    this.tableusp_HallBooking_Search_.InitVars();
                }
            }
            this.tableusp_SEL_Birth = ((usp_SEL_BirthDataTable)(base.Tables["usp_SEL_Birth"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_Birth != null)) {
                    this.tableusp_SEL_Birth.InitVars();
                }
            }
            this.tableusp_SEL_Death = ((usp_SEL_DeathDataTable)(base.Tables["usp_SEL_Death"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_Death != null)) {
                    this.tableusp_SEL_Death.InitVars();
                }
            }
            this.tableusp_SEL_Renewal = ((usp_SEL_RenewalDataTable)(base.Tables["usp_SEL_Renewal"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_Renewal != null)) {
                    this.tableusp_SEL_Renewal.InitVars();
                }
            }
            this.tabletblAccounts = ((tblAccountsDataTable)(base.Tables["tblAccounts"]));
            if ((initTable == true)) {
                if ((this.tabletblAccounts != null)) {
                    this.tabletblAccounts.InitVars();
                }
            }
            this.tableusp_SEL_TSF_tblFamilyMember = ((usp_SEL_TSF_tblFamilyMemberDataTable)(base.Tables["usp_SEL_TSF_tblFamilyMember"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_TSF_tblFamilyMember != null)) {
                    this.tableusp_SEL_TSF_tblFamilyMember.InitVars();
                }
            }
            this.tabletblMembers = ((tblMembersDataTable)(base.Tables["tblMembers"]));
            if ((initTable == true)) {
                if ((this.tabletblMembers != null)) {
                    this.tabletblMembers.InitVars();
                }
            }
            this.tabletblTrialBalance = ((tblTrialBalanceDataTable)(base.Tables["tblTrialBalance"]));
            if ((initTable == true)) {
                if ((this.tabletblTrialBalance != null)) {
                    this.tabletblTrialBalance.InitVars();
                }
            }
            this.tabletblSecurity = ((tblSecurityDataTable)(base.Tables["tblSecurity"]));
            if ((initTable == true)) {
                if ((this.tabletblSecurity != null)) {
                    this.tabletblSecurity.InitVars();
                }
            }
            this.tabletblSecurityLevel = ((tblSecurityLevelDataTable)(base.Tables["tblSecurityLevel"]));
            if ((initTable == true)) {
                if ((this.tabletblSecurityLevel != null)) {
                    this.tabletblSecurityLevel.InitVars();
                }
            }
            this.tabletblLoging = ((tblLogingDataTable)(base.Tables["tblLoging"]));
            if ((initTable == true)) {
                if ((this.tabletblLoging != null)) {
                    this.tabletblLoging.InitVars();
                }
            }
            this.tableusp_SEL_Donation = ((usp_SEL_DonationDataTable)(base.Tables["usp_SEL_Donation"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_Donation != null)) {
                    this.tableusp_SEL_Donation.InitVars();
                }
            }
            this.tabletblUserGroup = ((tblUserGroupDataTable)(base.Tables["tblUserGroup"]));
            if ((initTable == true)) {
                if ((this.tabletblUserGroup != null)) {
                    this.tabletblUserGroup.InitVars();
                }
            }
            this.tabletblHelp = ((tblHelpDataTable)(base.Tables["tblHelp"]));
            if ((initTable == true)) {
                if ((this.tabletblHelp != null)) {
                    this.tabletblHelp.InitVars();
                }
            }
            this.tabletblDailyTransactions = ((tblDailyTransactionsDataTable)(base.Tables["tblDailyTransactions"]));
            if ((initTable == true)) {
                if ((this.tabletblDailyTransactions != null)) {
                    this.tabletblDailyTransactions.InitVars();
                }
            }
            this.tabletblAdvance1 = ((tblAdvance1DataTable)(base.Tables["tblAdvance1"]));
            if ((initTable == true)) {
                if ((this.tabletblAdvance1 != null)) {
                    this.tabletblAdvance1.InitVars();
                }
            }
            this.tabletblAdvance = ((tblAdvanceDataTable)(base.Tables["tblAdvance"]));
            if ((initTable == true)) {
                if ((this.tabletblAdvance != null)) {
                    this.tabletblAdvance.InitVars();
                }
            }
            this.tabletblNICForm = ((tblNICFormDataTable)(base.Tables["tblNICForm"]));
            if ((initTable == true)) {
                if ((this.tabletblNICForm != null)) {
                    this.tabletblNICForm.InitVars();
                }
            }
            this.tabletblAids = ((tblAidsDataTable)(base.Tables["tblAids"]));
            if ((initTable == true)) {
                if ((this.tabletblAids != null)) {
                    this.tabletblAids.InitVars();
                }
            }
            this.tableusp_SEL_CancelledEvents = ((usp_SEL_CancelledEventsDataTable)(base.Tables["usp_SEL_CancelledEvents"]));
            if ((initTable == true)) {
                if ((this.tableusp_SEL_CancelledEvents != null)) {
                    this.tableusp_SEL_CancelledEvents.InitVars();
                }
            }
            this.tableusp_RPT_DailyTransactions = ((usp_RPT_DailyTransactionsDataTable)(base.Tables["usp_RPT_DailyTransactions"]));
            if ((initTable == true)) {
                if ((this.tableusp_RPT_DailyTransactions != null)) {
                    this.tableusp_RPT_DailyTransactions.InitVars();
                }
            }
            this.tableusp_DailyTransactions_Report = ((usp_DailyTransactions_ReportDataTable)(base.Tables["usp_DailyTransactions_Report"]));
            if ((initTable == true)) {
                if ((this.tableusp_DailyTransactions_Report != null)) {
                    this.tableusp_DailyTransactions_Report.InitVars();
                }
            }
            this.tableusp_GetHallBooking = ((usp_GetHallBookingDataTable)(base.Tables["usp_GetHallBooking"]));
            if ((initTable == true)) {
                if ((this.tableusp_GetHallBooking != null)) {
                    this.tableusp_GetHallBooking.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ComDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ComDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableusp_HallBooking_Search = new usp_HallBooking_SearchDataTable();
            base.Tables.Add(this.tableusp_HallBooking_Search);
            this.tableusp_SEL_DDL_USER = new usp_SEL_DDL_USERDataTable();
            base.Tables.Add(this.tableusp_SEL_DDL_USER);
            this.tableusp_SEL_tblPermission = new usp_SEL_tblPermissionDataTable();
            base.Tables.Add(this.tableusp_SEL_tblPermission);
            this.tableusp_SEL_FAMILY = new usp_SEL_FAMILYDataTable();
            base.Tables.Add(this.tableusp_SEL_FAMILY);
            this.tableusp_SEL_tblNukh = new usp_SEL_tblNukhDataTable();
            base.Tables.Add(this.tableusp_SEL_tblNukh);
            this.tableusp_SEL_tblOrakh = new usp_SEL_tblOrakhDataTable();
            base.Tables.Add(this.tableusp_SEL_tblOrakh);
            this.tableusp_SEL_tblCity = new usp_SEL_tblCityDataTable();
            base.Tables.Add(this.tableusp_SEL_tblCity);
            this.tableusp_SEL_tblVillage = new usp_SEL_tblVillageDataTable();
            base.Tables.Add(this.tableusp_SEL_tblVillage);
            this.tableusp_SEL_tblFamilyMember = new usp_SEL_tblFamilyMemberDataTable();
            base.Tables.Add(this.tableusp_SEL_tblFamilyMember);
            this.tableusp_SEL_tblBloodGroup = new usp_SEL_tblBloodGroupDataTable();
            base.Tables.Add(this.tableusp_SEL_tblBloodGroup);
            this.tableusp_SEL_tblArea = new usp_SEL_tblAreaDataTable();
            base.Tables.Add(this.tableusp_SEL_tblArea);
            this.tableusp_SEL_Engagement = new usp_SEL_EngagementDataTable();
            base.Tables.Add(this.tableusp_SEL_Engagement);
            this.tableusp_Male_tblFamilyMember = new usp_Male_tblFamilyMemberDataTable();
            base.Tables.Add(this.tableusp_Male_tblFamilyMember);
            this.tableusp_Female_tblFamilyMember = new usp_Female_tblFamilyMemberDataTable();
            base.Tables.Add(this.tableusp_Female_tblFamilyMember);
            this.tableusp_SEL_Marriage = new usp_SEL_MarriageDataTable();
            base.Tables.Add(this.tableusp_SEL_Marriage);
            this.tableusp_SEL_tblWorkType = new usp_SEL_tblWorkTypeDataTable();
            base.Tables.Add(this.tableusp_SEL_tblWorkType);
            this.tableusp_rpt_Members = new usp_rpt_MembersDataTable();
            base.Tables.Add(this.tableusp_rpt_Members);
            this.tabletblTransactions = new tblTransactionsDataTable();
            base.Tables.Add(this.tabletblTransactions);
            this.tabletblVouchers = new tblVouchersDataTable();
            base.Tables.Add(this.tabletblVouchers);
            this.tabletblLedger = new tblLedgerDataTable();
            base.Tables.Add(this.tabletblLedger);
            this.tableusp_HallBooking_Search_ = new usp_HallBooking_Search_DataTable();
            base.Tables.Add(this.tableusp_HallBooking_Search_);
            this.tableusp_SEL_Birth = new usp_SEL_BirthDataTable();
            base.Tables.Add(this.tableusp_SEL_Birth);
            this.tableusp_SEL_Death = new usp_SEL_DeathDataTable();
            base.Tables.Add(this.tableusp_SEL_Death);
            this.tableusp_SEL_Renewal = new usp_SEL_RenewalDataTable();
            base.Tables.Add(this.tableusp_SEL_Renewal);
            this.tabletblAccounts = new tblAccountsDataTable();
            base.Tables.Add(this.tabletblAccounts);
            this.tableusp_SEL_TSF_tblFamilyMember = new usp_SEL_TSF_tblFamilyMemberDataTable();
            base.Tables.Add(this.tableusp_SEL_TSF_tblFamilyMember);
            this.tabletblMembers = new tblMembersDataTable();
            base.Tables.Add(this.tabletblMembers);
            this.tabletblTrialBalance = new tblTrialBalanceDataTable();
            base.Tables.Add(this.tabletblTrialBalance);
            this.tabletblSecurity = new tblSecurityDataTable();
            base.Tables.Add(this.tabletblSecurity);
            this.tabletblSecurityLevel = new tblSecurityLevelDataTable();
            base.Tables.Add(this.tabletblSecurityLevel);
            this.tabletblLoging = new tblLogingDataTable();
            base.Tables.Add(this.tabletblLoging);
            this.tableusp_SEL_Donation = new usp_SEL_DonationDataTable();
            base.Tables.Add(this.tableusp_SEL_Donation);
            this.tabletblUserGroup = new tblUserGroupDataTable();
            base.Tables.Add(this.tabletblUserGroup);
            this.tabletblHelp = new tblHelpDataTable();
            base.Tables.Add(this.tabletblHelp);
            this.tabletblDailyTransactions = new tblDailyTransactionsDataTable();
            base.Tables.Add(this.tabletblDailyTransactions);
            this.tabletblAdvance1 = new tblAdvance1DataTable();
            base.Tables.Add(this.tabletblAdvance1);
            this.tabletblAdvance = new tblAdvanceDataTable();
            base.Tables.Add(this.tabletblAdvance);
            this.tabletblNICForm = new tblNICFormDataTable();
            base.Tables.Add(this.tabletblNICForm);
            this.tabletblAids = new tblAidsDataTable();
            base.Tables.Add(this.tabletblAids);
            this.tableusp_SEL_CancelledEvents = new usp_SEL_CancelledEventsDataTable();
            base.Tables.Add(this.tableusp_SEL_CancelledEvents);
            this.tableusp_RPT_DailyTransactions = new usp_RPT_DailyTransactionsDataTable();
            base.Tables.Add(this.tableusp_RPT_DailyTransactions);
            this.tableusp_DailyTransactions_Report = new usp_DailyTransactions_ReportDataTable();
            base.Tables.Add(this.tableusp_DailyTransactions_Report);
            this.tableusp_GetHallBooking = new usp_GetHallBookingDataTable();
            base.Tables.Add(this.tableusp_GetHallBooking);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_HallBooking_Search() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_DDL_USER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblPermission() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_FAMILY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblNukh() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblOrakh() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblCity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblVillage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblFamilyMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblBloodGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblArea() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_Engagement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_Male_tblFamilyMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_Female_tblFamilyMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_Marriage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_tblWorkType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_rpt_Members() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblTransactions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblVouchers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblLedger() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_HallBooking_Search_() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_Birth() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_Death() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_Renewal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblAccounts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_TSF_tblFamilyMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblMembers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblTrialBalance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblSecurity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblSecurityLevel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblLoging() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_Donation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblUserGroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblHelp() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblDailyTransactions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblAdvance1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblAdvance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblNICForm() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblAids() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_SEL_CancelledEvents() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_RPT_DailyTransactions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_DailyTransactions_Report() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_GetHallBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ComDataSet ds = new ComDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void usp_HallBooking_SearchRowChangeEventHandler(object sender, usp_HallBooking_SearchRowChangeEvent e);
        
        public delegate void usp_SEL_DDL_USERRowChangeEventHandler(object sender, usp_SEL_DDL_USERRowChangeEvent e);
        
        public delegate void usp_SEL_tblPermissionRowChangeEventHandler(object sender, usp_SEL_tblPermissionRowChangeEvent e);
        
        public delegate void usp_SEL_FAMILYRowChangeEventHandler(object sender, usp_SEL_FAMILYRowChangeEvent e);
        
        public delegate void usp_SEL_tblNukhRowChangeEventHandler(object sender, usp_SEL_tblNukhRowChangeEvent e);
        
        public delegate void usp_SEL_tblOrakhRowChangeEventHandler(object sender, usp_SEL_tblOrakhRowChangeEvent e);
        
        public delegate void usp_SEL_tblCityRowChangeEventHandler(object sender, usp_SEL_tblCityRowChangeEvent e);
        
        public delegate void usp_SEL_tblVillageRowChangeEventHandler(object sender, usp_SEL_tblVillageRowChangeEvent e);
        
        public delegate void usp_SEL_tblFamilyMemberRowChangeEventHandler(object sender, usp_SEL_tblFamilyMemberRowChangeEvent e);
        
        public delegate void usp_SEL_tblBloodGroupRowChangeEventHandler(object sender, usp_SEL_tblBloodGroupRowChangeEvent e);
        
        public delegate void usp_SEL_tblAreaRowChangeEventHandler(object sender, usp_SEL_tblAreaRowChangeEvent e);
        
        public delegate void usp_SEL_EngagementRowChangeEventHandler(object sender, usp_SEL_EngagementRowChangeEvent e);
        
        public delegate void usp_Male_tblFamilyMemberRowChangeEventHandler(object sender, usp_Male_tblFamilyMemberRowChangeEvent e);
        
        public delegate void usp_Female_tblFamilyMemberRowChangeEventHandler(object sender, usp_Female_tblFamilyMemberRowChangeEvent e);
        
        public delegate void usp_SEL_MarriageRowChangeEventHandler(object sender, usp_SEL_MarriageRowChangeEvent e);
        
        public delegate void usp_SEL_tblWorkTypeRowChangeEventHandler(object sender, usp_SEL_tblWorkTypeRowChangeEvent e);
        
        public delegate void usp_rpt_MembersRowChangeEventHandler(object sender, usp_rpt_MembersRowChangeEvent e);
        
        public delegate void tblTransactionsRowChangeEventHandler(object sender, tblTransactionsRowChangeEvent e);
        
        public delegate void tblVouchersRowChangeEventHandler(object sender, tblVouchersRowChangeEvent e);
        
        public delegate void tblLedgerRowChangeEventHandler(object sender, tblLedgerRowChangeEvent e);
        
        public delegate void usp_HallBooking_Search_RowChangeEventHandler(object sender, usp_HallBooking_Search_RowChangeEvent e);
        
        public delegate void usp_SEL_BirthRowChangeEventHandler(object sender, usp_SEL_BirthRowChangeEvent e);
        
        public delegate void usp_SEL_DeathRowChangeEventHandler(object sender, usp_SEL_DeathRowChangeEvent e);
        
        public delegate void usp_SEL_RenewalRowChangeEventHandler(object sender, usp_SEL_RenewalRowChangeEvent e);
        
        public delegate void tblAccountsRowChangeEventHandler(object sender, tblAccountsRowChangeEvent e);
        
        public delegate void usp_SEL_TSF_tblFamilyMemberRowChangeEventHandler(object sender, usp_SEL_TSF_tblFamilyMemberRowChangeEvent e);
        
        public delegate void tblMembersRowChangeEventHandler(object sender, tblMembersRowChangeEvent e);
        
        public delegate void tblTrialBalanceRowChangeEventHandler(object sender, tblTrialBalanceRowChangeEvent e);
        
        public delegate void tblSecurityRowChangeEventHandler(object sender, tblSecurityRowChangeEvent e);
        
        public delegate void tblSecurityLevelRowChangeEventHandler(object sender, tblSecurityLevelRowChangeEvent e);
        
        public delegate void tblLogingRowChangeEventHandler(object sender, tblLogingRowChangeEvent e);
        
        public delegate void usp_SEL_DonationRowChangeEventHandler(object sender, usp_SEL_DonationRowChangeEvent e);
        
        public delegate void tblUserGroupRowChangeEventHandler(object sender, tblUserGroupRowChangeEvent e);
        
        public delegate void tblHelpRowChangeEventHandler(object sender, tblHelpRowChangeEvent e);
        
        public delegate void tblDailyTransactionsRowChangeEventHandler(object sender, tblDailyTransactionsRowChangeEvent e);
        
        public delegate void tblAdvance1RowChangeEventHandler(object sender, tblAdvance1RowChangeEvent e);
        
        public delegate void tblAdvanceRowChangeEventHandler(object sender, tblAdvanceRowChangeEvent e);
        
        public delegate void tblNICFormRowChangeEventHandler(object sender, tblNICFormRowChangeEvent e);
        
        public delegate void tblAidsRowChangeEventHandler(object sender, tblAidsRowChangeEvent e);
        
        public delegate void usp_SEL_CancelledEventsRowChangeEventHandler(object sender, usp_SEL_CancelledEventsRowChangeEvent e);
        
        public delegate void usp_RPT_DailyTransactionsRowChangeEventHandler(object sender, usp_RPT_DailyTransactionsRowChangeEvent e);
        
        public delegate void usp_DailyTransactions_ReportRowChangeEventHandler(object sender, usp_DailyTransactions_ReportRowChangeEvent e);
        
        public delegate void usp_GetHallBookingRowChangeEventHandler(object sender, usp_GetHallBookingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_HallBooking_SearchDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnBookedBy;
            
            private global::System.Data.DataColumn columnEvents;
            
            private global::System.Data.DataColumn columnHall1;
            
            private global::System.Data.DataColumn columnHall2;
            
            private global::System.Data.DataColumn columnHall3;
            
            private global::System.Data.DataColumn columnHall4;
            
            private global::System.Data.DataColumn columnFromTime;
            
            private global::System.Data.DataColumn columnToTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_SearchDataTable() {
                this.TableName = "usp_HallBooking_Search";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_HallBooking_SearchDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_HallBooking_SearchDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookedByColumn {
                get {
                    return this.columnBookedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventsColumn {
                get {
                    return this.columnEvents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall1Column {
                get {
                    return this.columnHall1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall2Column {
                get {
                    return this.columnHall2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall3Column {
                get {
                    return this.columnHall3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall4Column {
                get {
                    return this.columnHall4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_SearchRow this[int index] {
                get {
                    return ((usp_HallBooking_SearchRow)(this.Rows[index]));
                }
            }
            
            public event usp_HallBooking_SearchRowChangeEventHandler usp_HallBooking_SearchRowChanging;
            
            public event usp_HallBooking_SearchRowChangeEventHandler usp_HallBooking_SearchRowChanged;
            
            public event usp_HallBooking_SearchRowChangeEventHandler usp_HallBooking_SearchRowDeleting;
            
            public event usp_HallBooking_SearchRowChangeEventHandler usp_HallBooking_SearchRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_HallBooking_SearchRow(usp_HallBooking_SearchRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_SearchRow Addusp_HallBooking_SearchRow(int SerialNo, System.DateTime Date, string BookedBy, string Events, bool Hall1, bool Hall2, bool Hall3, bool Hall4, System.DateTime FromTime, System.DateTime ToTime) {
                usp_HallBooking_SearchRow rowusp_HallBooking_SearchRow = ((usp_HallBooking_SearchRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SerialNo,
                        Date,
                        BookedBy,
                        Events,
                        Hall1,
                        Hall2,
                        Hall3,
                        Hall4,
                        FromTime,
                        ToTime};
                rowusp_HallBooking_SearchRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_HallBooking_SearchRow);
                return rowusp_HallBooking_SearchRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_HallBooking_SearchDataTable cln = ((usp_HallBooking_SearchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_HallBooking_SearchDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnDate = base.Columns["Date"];
                this.columnBookedBy = base.Columns["BookedBy"];
                this.columnEvents = base.Columns["Events"];
                this.columnHall1 = base.Columns["Hall1"];
                this.columnHall2 = base.Columns["Hall2"];
                this.columnHall3 = base.Columns["Hall3"];
                this.columnHall4 = base.Columns["Hall4"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToTime = base.Columns["ToTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnBookedBy = new global::System.Data.DataColumn("BookedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookedBy);
                this.columnEvents = new global::System.Data.DataColumn("Events", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvents);
                this.columnHall1 = new global::System.Data.DataColumn("Hall1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall1);
                this.columnHall2 = new global::System.Data.DataColumn("Hall2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall2);
                this.columnHall3 = new global::System.Data.DataColumn("Hall3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall3);
                this.columnHall4 = new global::System.Data.DataColumn("Hall4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall4);
                this.columnFromTime = new global::System.Data.DataColumn("FromTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.columnBookedBy.ReadOnly = true;
                this.columnBookedBy.MaxLength = 202;
                this.columnEvents.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_SearchRow Newusp_HallBooking_SearchRow() {
                return ((usp_HallBooking_SearchRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_HallBooking_SearchRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_HallBooking_SearchRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_HallBooking_SearchRowChanged != null)) {
                    this.usp_HallBooking_SearchRowChanged(this, new usp_HallBooking_SearchRowChangeEvent(((usp_HallBooking_SearchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_HallBooking_SearchRowChanging != null)) {
                    this.usp_HallBooking_SearchRowChanging(this, new usp_HallBooking_SearchRowChangeEvent(((usp_HallBooking_SearchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_HallBooking_SearchRowDeleted != null)) {
                    this.usp_HallBooking_SearchRowDeleted(this, new usp_HallBooking_SearchRowChangeEvent(((usp_HallBooking_SearchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_HallBooking_SearchRowDeleting != null)) {
                    this.usp_HallBooking_SearchRowDeleting(this, new usp_HallBooking_SearchRowChangeEvent(((usp_HallBooking_SearchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_HallBooking_SearchRow(usp_HallBooking_SearchRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_HallBooking_SearchDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_DDL_USERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DDL_USERDataTable() {
                this.TableName = "usp_SEL_DDL_USER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_DDL_USERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_DDL_USERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DDL_USERRow this[int index] {
                get {
                    return ((usp_SEL_DDL_USERRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_DDL_USERRowChangeEventHandler usp_SEL_DDL_USERRowChanging;
            
            public event usp_SEL_DDL_USERRowChangeEventHandler usp_SEL_DDL_USERRowChanged;
            
            public event usp_SEL_DDL_USERRowChangeEventHandler usp_SEL_DDL_USERRowDeleting;
            
            public event usp_SEL_DDL_USERRowChangeEventHandler usp_SEL_DDL_USERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_DDL_USERRow(usp_SEL_DDL_USERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DDL_USERRow Addusp_SEL_DDL_USERRow(string UserName) {
                usp_SEL_DDL_USERRow rowusp_SEL_DDL_USERRow = ((usp_SEL_DDL_USERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserName};
                rowusp_SEL_DDL_USERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_DDL_USERRow);
                return rowusp_SEL_DDL_USERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DDL_USERRow FindByUserID(int UserID) {
                return ((usp_SEL_DDL_USERRow)(this.Rows.Find(new object[] {
                            UserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_DDL_USERDataTable cln = ((usp_SEL_DDL_USERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_DDL_USERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnUserName = base.Columns["UserName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUserID}, true));
                this.columnUserID.AutoIncrement = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.ReadOnly = true;
                this.columnUserID.Unique = true;
                this.columnUserName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DDL_USERRow Newusp_SEL_DDL_USERRow() {
                return ((usp_SEL_DDL_USERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_DDL_USERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_DDL_USERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_DDL_USERRowChanged != null)) {
                    this.usp_SEL_DDL_USERRowChanged(this, new usp_SEL_DDL_USERRowChangeEvent(((usp_SEL_DDL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_DDL_USERRowChanging != null)) {
                    this.usp_SEL_DDL_USERRowChanging(this, new usp_SEL_DDL_USERRowChangeEvent(((usp_SEL_DDL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_DDL_USERRowDeleted != null)) {
                    this.usp_SEL_DDL_USERRowDeleted(this, new usp_SEL_DDL_USERRowChangeEvent(((usp_SEL_DDL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_DDL_USERRowDeleting != null)) {
                    this.usp_SEL_DDL_USERRowDeleting(this, new usp_SEL_DDL_USERRowChangeEvent(((usp_SEL_DDL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_DDL_USERRow(usp_SEL_DDL_USERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_DDL_USERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblPermissionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPermissionID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnSecurityLevelID;
            
            private global::System.Data.DataColumn columnRead;
            
            private global::System.Data.DataColumn columnWrite;
            
            private global::System.Data.DataColumn columnModify;
            
            private global::System.Data.DataColumn columnDelete;
            
            private global::System.Data.DataColumn columnInactive_FL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblPermissionDataTable() {
                this.TableName = "usp_SEL_tblPermission";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblPermissionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblPermissionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PermissionIDColumn {
                get {
                    return this.columnPermissionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecurityLevelIDColumn {
                get {
                    return this.columnSecurityLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReadColumn {
                get {
                    return this.columnRead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WriteColumn {
                get {
                    return this.columnWrite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifyColumn {
                get {
                    return this.columnModify;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeleteColumn {
                get {
                    return this.columnDelete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inactive_FLColumn {
                get {
                    return this.columnInactive_FL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblPermissionRow this[int index] {
                get {
                    return ((usp_SEL_tblPermissionRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblPermissionRowChangeEventHandler usp_SEL_tblPermissionRowChanging;
            
            public event usp_SEL_tblPermissionRowChangeEventHandler usp_SEL_tblPermissionRowChanged;
            
            public event usp_SEL_tblPermissionRowChangeEventHandler usp_SEL_tblPermissionRowDeleting;
            
            public event usp_SEL_tblPermissionRowChangeEventHandler usp_SEL_tblPermissionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblPermissionRow(usp_SEL_tblPermissionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblPermissionRow Addusp_SEL_tblPermissionRow(int UserID, int SecurityLevelID, bool Read, bool Write, bool Modify, bool Delete, bool Inactive_FL) {
                usp_SEL_tblPermissionRow rowusp_SEL_tblPermissionRow = ((usp_SEL_tblPermissionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserID,
                        SecurityLevelID,
                        Read,
                        Write,
                        Modify,
                        Delete,
                        Inactive_FL};
                rowusp_SEL_tblPermissionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblPermissionRow);
                return rowusp_SEL_tblPermissionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblPermissionRow FindByPermissionID(int PermissionID) {
                return ((usp_SEL_tblPermissionRow)(this.Rows.Find(new object[] {
                            PermissionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblPermissionDataTable cln = ((usp_SEL_tblPermissionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblPermissionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPermissionID = base.Columns["PermissionID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnSecurityLevelID = base.Columns["SecurityLevelID"];
                this.columnRead = base.Columns["Read"];
                this.columnWrite = base.Columns["Write"];
                this.columnModify = base.Columns["Modify"];
                this.columnDelete = base.Columns["Delete"];
                this.columnInactive_FL = base.Columns["Inactive_FL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPermissionID = new global::System.Data.DataColumn("PermissionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPermissionID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnSecurityLevelID = new global::System.Data.DataColumn("SecurityLevelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityLevelID);
                this.columnRead = new global::System.Data.DataColumn("Read", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRead);
                this.columnWrite = new global::System.Data.DataColumn("Write", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrite);
                this.columnModify = new global::System.Data.DataColumn("Modify", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModify);
                this.columnDelete = new global::System.Data.DataColumn("Delete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelete);
                this.columnInactive_FL = new global::System.Data.DataColumn("Inactive_FL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive_FL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPermissionID}, true));
                this.columnPermissionID.AutoIncrement = true;
                this.columnPermissionID.AllowDBNull = false;
                this.columnPermissionID.ReadOnly = true;
                this.columnPermissionID.Unique = true;
                this.columnInactive_FL.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblPermissionRow Newusp_SEL_tblPermissionRow() {
                return ((usp_SEL_tblPermissionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblPermissionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblPermissionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblPermissionRowChanged != null)) {
                    this.usp_SEL_tblPermissionRowChanged(this, new usp_SEL_tblPermissionRowChangeEvent(((usp_SEL_tblPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblPermissionRowChanging != null)) {
                    this.usp_SEL_tblPermissionRowChanging(this, new usp_SEL_tblPermissionRowChangeEvent(((usp_SEL_tblPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblPermissionRowDeleted != null)) {
                    this.usp_SEL_tblPermissionRowDeleted(this, new usp_SEL_tblPermissionRowChangeEvent(((usp_SEL_tblPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblPermissionRowDeleting != null)) {
                    this.usp_SEL_tblPermissionRowDeleting(this, new usp_SEL_tblPermissionRowChangeEvent(((usp_SEL_tblPermissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblPermissionRow(usp_SEL_tblPermissionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblPermissionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_FAMILYDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnFamilyName;
            
            private global::System.Data.DataColumn columnFamilyLeader;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columnResidentAddress;
            
            private global::System.Data.DataColumn columnResidentPhone;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnBusinessName;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnBusinessAddress;
            
            private global::System.Data.DataColumn columnBusinessPhone;
            
            private global::System.Data.DataColumn columnBusinessFax;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnSign;
            
            private global::System.Data.DataColumn columnNukh;
            
            private global::System.Data.DataColumn columnVillage;
            
            private global::System.Data.DataColumn columnIssueDate;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnRestricted;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnParentFCardNo;
            
            private global::System.Data.DataColumn columnRenewalDueFrom;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnCardRenewalTo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_FAMILYDataTable() {
                this.TableName = "usp_SEL_FAMILY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_FAMILYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_FAMILYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyNameColumn {
                get {
                    return this.columnFamilyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyLeaderColumn {
                get {
                    return this.columnFamilyLeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidentAddressColumn {
                get {
                    return this.columnResidentAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidentPhoneColumn {
                get {
                    return this.columnResidentPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessNameColumn {
                get {
                    return this.columnBusinessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessAddressColumn {
                get {
                    return this.columnBusinessAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessPhoneColumn {
                get {
                    return this.columnBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessFaxColumn {
                get {
                    return this.columnBusinessFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignColumn {
                get {
                    return this.columnSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhColumn {
                get {
                    return this.columnNukh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VillageColumn {
                get {
                    return this.columnVillage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueDateColumn {
                get {
                    return this.columnIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestrictedColumn {
                get {
                    return this.columnRestricted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentFCardNoColumn {
                get {
                    return this.columnParentFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenewalDueFromColumn {
                get {
                    return this.columnRenewalDueFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardRenewalToColumn {
                get {
                    return this.columnCardRenewalTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_FAMILYRow this[int index] {
                get {
                    return ((usp_SEL_FAMILYRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_FAMILYRowChangeEventHandler usp_SEL_FAMILYRowChanging;
            
            public event usp_SEL_FAMILYRowChangeEventHandler usp_SEL_FAMILYRowChanged;
            
            public event usp_SEL_FAMILYRowChangeEventHandler usp_SEL_FAMILYRowDeleting;
            
            public event usp_SEL_FAMILYRowChangeEventHandler usp_SEL_FAMILYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_FAMILYRow(usp_SEL_FAMILYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_FAMILYRow Addusp_SEL_FAMILYRow(
                        string FCardNo, 
                        string FamilyName, 
                        string FamilyLeader, 
                        string Country, 
                        string City, 
                        string Area, 
                        string ResidentAddress, 
                        string ResidentPhone, 
                        string Mobile, 
                        string BusinessName, 
                        string WorkType, 
                        string Designation, 
                        string BusinessAddress, 
                        string BusinessPhone, 
                        string BusinessFax, 
                        string Email, 
                        string Website, 
                        string Sign, 
                        string Nukh, 
                        string Village, 
                        System.DateTime IssueDate, 
                        string Gender, 
                        string DOB, 
                        bool Active, 
                        string Restricted, 
                        string Reason, 
                        string ParentFCardNo, 
                        string RenewalDueFrom, 
                        string UserID, 
                        string CardRenewalTo) {
                usp_SEL_FAMILYRow rowusp_SEL_FAMILYRow = ((usp_SEL_FAMILYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FCardNo,
                        FamilyName,
                        FamilyLeader,
                        Country,
                        City,
                        Area,
                        ResidentAddress,
                        ResidentPhone,
                        Mobile,
                        BusinessName,
                        WorkType,
                        Designation,
                        BusinessAddress,
                        BusinessPhone,
                        BusinessFax,
                        Email,
                        Website,
                        Sign,
                        Nukh,
                        Village,
                        IssueDate,
                        Gender,
                        DOB,
                        Active,
                        Restricted,
                        Reason,
                        ParentFCardNo,
                        RenewalDueFrom,
                        UserID,
                        CardRenewalTo};
                rowusp_SEL_FAMILYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_FAMILYRow);
                return rowusp_SEL_FAMILYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_FAMILYRow FindByFCardNo(string FCardNo) {
                return ((usp_SEL_FAMILYRow)(this.Rows.Find(new object[] {
                            FCardNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_FAMILYDataTable cln = ((usp_SEL_FAMILYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_FAMILYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnFamilyName = base.Columns["FamilyName"];
                this.columnFamilyLeader = base.Columns["FamilyLeader"];
                this.columnCountry = base.Columns["Country"];
                this.columnCity = base.Columns["City"];
                this.columnArea = base.Columns["Area"];
                this.columnResidentAddress = base.Columns["ResidentAddress"];
                this.columnResidentPhone = base.Columns["ResidentPhone"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnBusinessName = base.Columns["BusinessName"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnBusinessAddress = base.Columns["BusinessAddress"];
                this.columnBusinessPhone = base.Columns["BusinessPhone"];
                this.columnBusinessFax = base.Columns["BusinessFax"];
                this.columnEmail = base.Columns["Email"];
                this.columnWebsite = base.Columns["Website"];
                this.columnSign = base.Columns["Sign"];
                this.columnNukh = base.Columns["Nukh"];
                this.columnVillage = base.Columns["Village"];
                this.columnIssueDate = base.Columns["IssueDate"];
                this.columnGender = base.Columns["Gender"];
                this.columnDOB = base.Columns["DOB"];
                this.columnActive = base.Columns["Active"];
                this.columnRestricted = base.Columns["Restricted"];
                this.columnReason = base.Columns["Reason"];
                this.columnParentFCardNo = base.Columns["ParentFCardNo"];
                this.columnRenewalDueFrom = base.Columns["RenewalDueFrom"];
                this.columnUserID = base.Columns["UserID"];
                this.columnCardRenewalTo = base.Columns["CardRenewalTo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnFamilyName = new global::System.Data.DataColumn("FamilyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyName);
                this.columnFamilyLeader = new global::System.Data.DataColumn("FamilyLeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyLeader);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columnResidentAddress = new global::System.Data.DataColumn("ResidentAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidentAddress);
                this.columnResidentPhone = new global::System.Data.DataColumn("ResidentPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidentPhone);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnBusinessName = new global::System.Data.DataColumn("BusinessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessName);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnBusinessAddress = new global::System.Data.DataColumn("BusinessAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessAddress);
                this.columnBusinessPhone = new global::System.Data.DataColumn("BusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessPhone);
                this.columnBusinessFax = new global::System.Data.DataColumn("BusinessFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessFax);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnSign = new global::System.Data.DataColumn("Sign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSign);
                this.columnNukh = new global::System.Data.DataColumn("Nukh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukh);
                this.columnVillage = new global::System.Data.DataColumn("Village", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillage);
                this.columnIssueDate = new global::System.Data.DataColumn("IssueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueDate);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnRestricted = new global::System.Data.DataColumn("Restricted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestricted);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnParentFCardNo = new global::System.Data.DataColumn("ParentFCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentFCardNo);
                this.columnRenewalDueFrom = new global::System.Data.DataColumn("RenewalDueFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenewalDueFrom);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnCardRenewalTo = new global::System.Data.DataColumn("CardRenewalTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardRenewalTo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFCardNo}, true));
                this.columnFCardNo.AllowDBNull = false;
                this.columnFCardNo.Unique = true;
                this.columnFamilyName.MaxLength = 100;
                this.columnFamilyLeader.MaxLength = 100;
                this.columnCountry.MaxLength = 100;
                this.columnCity.MaxLength = 100;
                this.columnArea.MaxLength = 100;
                this.columnResidentAddress.MaxLength = 200;
                this.columnResidentPhone.MaxLength = 100;
                this.columnMobile.MaxLength = 100;
                this.columnBusinessName.MaxLength = 100;
                this.columnWorkType.MaxLength = 100;
                this.columnDesignation.MaxLength = 100;
                this.columnBusinessAddress.MaxLength = 200;
                this.columnBusinessPhone.MaxLength = 100;
                this.columnBusinessFax.MaxLength = 100;
                this.columnEmail.MaxLength = 100;
                this.columnWebsite.MaxLength = 100;
                this.columnSign.MaxLength = 100;
                this.columnNukh.MaxLength = 100;
                this.columnVillage.MaxLength = 100;
                this.columnGender.MaxLength = 50;
                this.columnDOB.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_FAMILYRow Newusp_SEL_FAMILYRow() {
                return ((usp_SEL_FAMILYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_FAMILYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_FAMILYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_FAMILYRowChanged != null)) {
                    this.usp_SEL_FAMILYRowChanged(this, new usp_SEL_FAMILYRowChangeEvent(((usp_SEL_FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_FAMILYRowChanging != null)) {
                    this.usp_SEL_FAMILYRowChanging(this, new usp_SEL_FAMILYRowChangeEvent(((usp_SEL_FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_FAMILYRowDeleted != null)) {
                    this.usp_SEL_FAMILYRowDeleted(this, new usp_SEL_FAMILYRowChangeEvent(((usp_SEL_FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_FAMILYRowDeleting != null)) {
                    this.usp_SEL_FAMILYRowDeleting(this, new usp_SEL_FAMILYRowChangeEvent(((usp_SEL_FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_FAMILYRow(usp_SEL_FAMILYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_FAMILYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblNukhDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNukhName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblNukhDataTable() {
                this.TableName = "usp_SEL_tblNukh";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblNukhDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblNukhDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhNameColumn {
                get {
                    return this.columnNukhName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblNukhRow this[int index] {
                get {
                    return ((usp_SEL_tblNukhRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblNukhRowChangeEventHandler usp_SEL_tblNukhRowChanging;
            
            public event usp_SEL_tblNukhRowChangeEventHandler usp_SEL_tblNukhRowChanged;
            
            public event usp_SEL_tblNukhRowChangeEventHandler usp_SEL_tblNukhRowDeleting;
            
            public event usp_SEL_tblNukhRowChangeEventHandler usp_SEL_tblNukhRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblNukhRow(usp_SEL_tblNukhRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblNukhRow Addusp_SEL_tblNukhRow(string NukhName) {
                usp_SEL_tblNukhRow rowusp_SEL_tblNukhRow = ((usp_SEL_tblNukhRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NukhName};
                rowusp_SEL_tblNukhRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblNukhRow);
                return rowusp_SEL_tblNukhRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblNukhRow FindByID(int ID) {
                return ((usp_SEL_tblNukhRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblNukhDataTable cln = ((usp_SEL_tblNukhDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblNukhDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNukhName = base.Columns["NukhName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNukhName = new global::System.Data.DataColumn("NukhName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukhName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnNukhName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblNukhRow Newusp_SEL_tblNukhRow() {
                return ((usp_SEL_tblNukhRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblNukhRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblNukhRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblNukhRowChanged != null)) {
                    this.usp_SEL_tblNukhRowChanged(this, new usp_SEL_tblNukhRowChangeEvent(((usp_SEL_tblNukhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblNukhRowChanging != null)) {
                    this.usp_SEL_tblNukhRowChanging(this, new usp_SEL_tblNukhRowChangeEvent(((usp_SEL_tblNukhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblNukhRowDeleted != null)) {
                    this.usp_SEL_tblNukhRowDeleted(this, new usp_SEL_tblNukhRowChangeEvent(((usp_SEL_tblNukhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblNukhRowDeleting != null)) {
                    this.usp_SEL_tblNukhRowDeleting(this, new usp_SEL_tblNukhRowChangeEvent(((usp_SEL_tblNukhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblNukhRow(usp_SEL_tblNukhRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblNukhDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblOrakhDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnOrakhName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblOrakhDataTable() {
                this.TableName = "usp_SEL_tblOrakh";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblOrakhDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblOrakhDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhNameColumn {
                get {
                    return this.columnOrakhName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblOrakhRow this[int index] {
                get {
                    return ((usp_SEL_tblOrakhRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblOrakhRowChangeEventHandler usp_SEL_tblOrakhRowChanging;
            
            public event usp_SEL_tblOrakhRowChangeEventHandler usp_SEL_tblOrakhRowChanged;
            
            public event usp_SEL_tblOrakhRowChangeEventHandler usp_SEL_tblOrakhRowDeleting;
            
            public event usp_SEL_tblOrakhRowChangeEventHandler usp_SEL_tblOrakhRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblOrakhRow(usp_SEL_tblOrakhRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblOrakhRow Addusp_SEL_tblOrakhRow(string OrakhName) {
                usp_SEL_tblOrakhRow rowusp_SEL_tblOrakhRow = ((usp_SEL_tblOrakhRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        OrakhName};
                rowusp_SEL_tblOrakhRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblOrakhRow);
                return rowusp_SEL_tblOrakhRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblOrakhRow FindByID(int ID) {
                return ((usp_SEL_tblOrakhRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblOrakhDataTable cln = ((usp_SEL_tblOrakhDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblOrakhDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnOrakhName = base.Columns["OrakhName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnOrakhName = new global::System.Data.DataColumn("OrakhName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakhName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnOrakhName.AllowDBNull = false;
                this.columnOrakhName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblOrakhRow Newusp_SEL_tblOrakhRow() {
                return ((usp_SEL_tblOrakhRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblOrakhRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblOrakhRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblOrakhRowChanged != null)) {
                    this.usp_SEL_tblOrakhRowChanged(this, new usp_SEL_tblOrakhRowChangeEvent(((usp_SEL_tblOrakhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblOrakhRowChanging != null)) {
                    this.usp_SEL_tblOrakhRowChanging(this, new usp_SEL_tblOrakhRowChangeEvent(((usp_SEL_tblOrakhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblOrakhRowDeleted != null)) {
                    this.usp_SEL_tblOrakhRowDeleted(this, new usp_SEL_tblOrakhRowChangeEvent(((usp_SEL_tblOrakhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblOrakhRowDeleting != null)) {
                    this.usp_SEL_tblOrakhRowDeleting(this, new usp_SEL_tblOrakhRowChangeEvent(((usp_SEL_tblOrakhRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblOrakhRow(usp_SEL_tblOrakhRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblOrakhDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblCityDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnCity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblCityDataTable() {
                this.TableName = "usp_SEL_tblCity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblCityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblCityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblCityRow this[int index] {
                get {
                    return ((usp_SEL_tblCityRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblCityRowChangeEventHandler usp_SEL_tblCityRowChanging;
            
            public event usp_SEL_tblCityRowChangeEventHandler usp_SEL_tblCityRowChanged;
            
            public event usp_SEL_tblCityRowChangeEventHandler usp_SEL_tblCityRowDeleting;
            
            public event usp_SEL_tblCityRowChangeEventHandler usp_SEL_tblCityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblCityRow(usp_SEL_tblCityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblCityRow Addusp_SEL_tblCityRow(string City) {
                usp_SEL_tblCityRow rowusp_SEL_tblCityRow = ((usp_SEL_tblCityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        City};
                rowusp_SEL_tblCityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblCityRow);
                return rowusp_SEL_tblCityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblCityRow FindByID(int ID) {
                return ((usp_SEL_tblCityRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblCityDataTable cln = ((usp_SEL_tblCityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblCityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnCity = base.Columns["City"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnCity.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblCityRow Newusp_SEL_tblCityRow() {
                return ((usp_SEL_tblCityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblCityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblCityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblCityRowChanged != null)) {
                    this.usp_SEL_tblCityRowChanged(this, new usp_SEL_tblCityRowChangeEvent(((usp_SEL_tblCityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblCityRowChanging != null)) {
                    this.usp_SEL_tblCityRowChanging(this, new usp_SEL_tblCityRowChangeEvent(((usp_SEL_tblCityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblCityRowDeleted != null)) {
                    this.usp_SEL_tblCityRowDeleted(this, new usp_SEL_tblCityRowChangeEvent(((usp_SEL_tblCityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblCityRowDeleting != null)) {
                    this.usp_SEL_tblCityRowDeleting(this, new usp_SEL_tblCityRowChangeEvent(((usp_SEL_tblCityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblCityRow(usp_SEL_tblCityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblCityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblVillageDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnVillage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblVillageDataTable() {
                this.TableName = "usp_SEL_tblVillage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblVillageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblVillageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VillageColumn {
                get {
                    return this.columnVillage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblVillageRow this[int index] {
                get {
                    return ((usp_SEL_tblVillageRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblVillageRowChangeEventHandler usp_SEL_tblVillageRowChanging;
            
            public event usp_SEL_tblVillageRowChangeEventHandler usp_SEL_tblVillageRowChanged;
            
            public event usp_SEL_tblVillageRowChangeEventHandler usp_SEL_tblVillageRowDeleting;
            
            public event usp_SEL_tblVillageRowChangeEventHandler usp_SEL_tblVillageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblVillageRow(usp_SEL_tblVillageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblVillageRow Addusp_SEL_tblVillageRow(string Village) {
                usp_SEL_tblVillageRow rowusp_SEL_tblVillageRow = ((usp_SEL_tblVillageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Village};
                rowusp_SEL_tblVillageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblVillageRow);
                return rowusp_SEL_tblVillageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblVillageRow FindByID(int ID) {
                return ((usp_SEL_tblVillageRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblVillageDataTable cln = ((usp_SEL_tblVillageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblVillageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnVillage = base.Columns["Village"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnVillage = new global::System.Data.DataColumn("Village", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnVillage.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblVillageRow Newusp_SEL_tblVillageRow() {
                return ((usp_SEL_tblVillageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblVillageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblVillageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblVillageRowChanged != null)) {
                    this.usp_SEL_tblVillageRowChanged(this, new usp_SEL_tblVillageRowChangeEvent(((usp_SEL_tblVillageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblVillageRowChanging != null)) {
                    this.usp_SEL_tblVillageRowChanging(this, new usp_SEL_tblVillageRowChangeEvent(((usp_SEL_tblVillageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblVillageRowDeleted != null)) {
                    this.usp_SEL_tblVillageRowDeleted(this, new usp_SEL_tblVillageRowChangeEvent(((usp_SEL_tblVillageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblVillageRowDeleting != null)) {
                    this.usp_SEL_tblVillageRowDeleting(this, new usp_SEL_tblVillageRowChangeEvent(((usp_SEL_tblVillageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblVillageRow(usp_SEL_tblVillageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblVillageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblFamilyMemberDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnLeaderRelation;
            
            private global::System.Data.DataColumn columnBloodGroup;
            
            private global::System.Data.DataColumn columnCNIC;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnAcademicEducation;
            
            private global::System.Data.DataColumn columnTechnicalEducation;
            
            private global::System.Data.DataColumn columnProfessionalEducation;
            
            private global::System.Data.DataColumn columnBusinessName;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnBusinessAddress;
            
            private global::System.Data.DataColumn columnBusinessPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnBusinessFax;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnD_Incident;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnHusbandName;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnOutof;
            
            private global::System.Data.DataColumn columnFamilyMemberID;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnFromFCard;
            
            private global::System.Data.DataColumn columnToFCard;
            
            private global::System.Data.DataColumn columnIsNicPrinted;
            
            private global::System.Data.DataColumn columnTempDOB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblFamilyMemberDataTable() {
                this.TableName = "usp_SEL_tblFamilyMember";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblFamilyMemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblFamilyMemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderRelationColumn {
                get {
                    return this.columnLeaderRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodGroupColumn {
                get {
                    return this.columnBloodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNICColumn {
                get {
                    return this.columnCNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcademicEducationColumn {
                get {
                    return this.columnAcademicEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechnicalEducationColumn {
                get {
                    return this.columnTechnicalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfessionalEducationColumn {
                get {
                    return this.columnProfessionalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessNameColumn {
                get {
                    return this.columnBusinessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessAddressColumn {
                get {
                    return this.columnBusinessAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessPhoneColumn {
                get {
                    return this.columnBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessFaxColumn {
                get {
                    return this.columnBusinessFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D_IncidentColumn {
                get {
                    return this.columnD_Incident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HusbandNameColumn {
                get {
                    return this.columnHusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutofColumn {
                get {
                    return this.columnOutof;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyMemberIDColumn {
                get {
                    return this.columnFamilyMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromFCardColumn {
                get {
                    return this.columnFromFCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToFCardColumn {
                get {
                    return this.columnToFCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNicPrintedColumn {
                get {
                    return this.columnIsNicPrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TempDOBColumn {
                get {
                    return this.columnTempDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblFamilyMemberRow this[int index] {
                get {
                    return ((usp_SEL_tblFamilyMemberRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblFamilyMemberRowChangeEventHandler usp_SEL_tblFamilyMemberRowChanging;
            
            public event usp_SEL_tblFamilyMemberRowChangeEventHandler usp_SEL_tblFamilyMemberRowChanged;
            
            public event usp_SEL_tblFamilyMemberRowChangeEventHandler usp_SEL_tblFamilyMemberRowDeleting;
            
            public event usp_SEL_tblFamilyMemberRowChangeEventHandler usp_SEL_tblFamilyMemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblFamilyMemberRow(usp_SEL_tblFamilyMemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblFamilyMemberRow Addusp_SEL_tblFamilyMemberRow(
                        string FCardNo, 
                        string MemberName, 
                        string LeaderRelation, 
                        string BloodGroup, 
                        string CNIC, 
                        string NIC, 
                        string AcademicEducation, 
                        string TechnicalEducation, 
                        string ProfessionalEducation, 
                        string BusinessName, 
                        string WorkType, 
                        string Designation, 
                        string BusinessAddress, 
                        string BusinessPhone, 
                        string Email, 
                        string Website, 
                        string BusinessFax, 
                        string Mobile, 
                        string AgeGroup, 
                        bool Active, 
                        string Reason, 
                        System.DateTime D_Incident, 
                        string FatherName, 
                        string HusbandName, 
                        string MaritalStatus, 
                        string Outof, 
                        System.DateTime EntryDate, 
                        string DOB, 
                        string Gender, 
                        string FromFCard, 
                        string ToFCard, 
                        bool IsNicPrinted, 
                        string TempDOB) {
                usp_SEL_tblFamilyMemberRow rowusp_SEL_tblFamilyMemberRow = ((usp_SEL_tblFamilyMemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FCardNo,
                        MemberName,
                        LeaderRelation,
                        BloodGroup,
                        CNIC,
                        NIC,
                        AcademicEducation,
                        TechnicalEducation,
                        ProfessionalEducation,
                        BusinessName,
                        WorkType,
                        Designation,
                        BusinessAddress,
                        BusinessPhone,
                        Email,
                        Website,
                        BusinessFax,
                        Mobile,
                        AgeGroup,
                        Active,
                        Reason,
                        D_Incident,
                        FatherName,
                        HusbandName,
                        MaritalStatus,
                        Outof,
                        null,
                        EntryDate,
                        DOB,
                        Gender,
                        FromFCard,
                        ToFCard,
                        IsNicPrinted,
                        TempDOB};
                rowusp_SEL_tblFamilyMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblFamilyMemberRow);
                return rowusp_SEL_tblFamilyMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblFamilyMemberRow FindByFamilyMemberID(long FamilyMemberID) {
                return ((usp_SEL_tblFamilyMemberRow)(this.Rows.Find(new object[] {
                            FamilyMemberID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblFamilyMemberDataTable cln = ((usp_SEL_tblFamilyMemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblFamilyMemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnLeaderRelation = base.Columns["LeaderRelation"];
                this.columnBloodGroup = base.Columns["BloodGroup"];
                this.columnCNIC = base.Columns["CNIC"];
                this.columnNIC = base.Columns["NIC"];
                this.columnAcademicEducation = base.Columns["AcademicEducation"];
                this.columnTechnicalEducation = base.Columns["TechnicalEducation"];
                this.columnProfessionalEducation = base.Columns["ProfessionalEducation"];
                this.columnBusinessName = base.Columns["BusinessName"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnBusinessAddress = base.Columns["BusinessAddress"];
                this.columnBusinessPhone = base.Columns["BusinessPhone"];
                this.columnEmail = base.Columns["Email"];
                this.columnWebsite = base.Columns["Website"];
                this.columnBusinessFax = base.Columns["BusinessFax"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnActive = base.Columns["Active"];
                this.columnReason = base.Columns["Reason"];
                this.columnD_Incident = base.Columns["D_Incident"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnHusbandName = base.Columns["HusbandName"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnOutof = base.Columns["Outof"];
                this.columnFamilyMemberID = base.Columns["FamilyMemberID"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnDOB = base.Columns["DOB"];
                this.columnGender = base.Columns["Gender"];
                this.columnFromFCard = base.Columns["FromFCard"];
                this.columnToFCard = base.Columns["ToFCard"];
                this.columnIsNicPrinted = base.Columns["IsNicPrinted"];
                this.columnTempDOB = base.Columns["TempDOB"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnLeaderRelation = new global::System.Data.DataColumn("LeaderRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderRelation);
                this.columnBloodGroup = new global::System.Data.DataColumn("BloodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodGroup);
                this.columnCNIC = new global::System.Data.DataColumn("CNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNIC);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnAcademicEducation = new global::System.Data.DataColumn("AcademicEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcademicEducation);
                this.columnTechnicalEducation = new global::System.Data.DataColumn("TechnicalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalEducation);
                this.columnProfessionalEducation = new global::System.Data.DataColumn("ProfessionalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfessionalEducation);
                this.columnBusinessName = new global::System.Data.DataColumn("BusinessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessName);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnBusinessAddress = new global::System.Data.DataColumn("BusinessAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessAddress);
                this.columnBusinessPhone = new global::System.Data.DataColumn("BusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnBusinessFax = new global::System.Data.DataColumn("BusinessFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessFax);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnD_Incident = new global::System.Data.DataColumn("D_Incident", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_Incident);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnHusbandName = new global::System.Data.DataColumn("HusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHusbandName);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnOutof = new global::System.Data.DataColumn("Outof", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutof);
                this.columnFamilyMemberID = new global::System.Data.DataColumn("FamilyMemberID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyMemberID);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnFromFCard = new global::System.Data.DataColumn("FromFCard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromFCard);
                this.columnToFCard = new global::System.Data.DataColumn("ToFCard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToFCard);
                this.columnIsNicPrinted = new global::System.Data.DataColumn("IsNicPrinted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNicPrinted);
                this.columnTempDOB = new global::System.Data.DataColumn("TempDOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempDOB);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFamilyMemberID}, true));
                this.columnMemberName.MaxLength = 100;
                this.columnLeaderRelation.MaxLength = 100;
                this.columnBloodGroup.MaxLength = 50;
                this.columnCNIC.MaxLength = 100;
                this.columnNIC.MaxLength = 100;
                this.columnAcademicEducation.MaxLength = 100;
                this.columnTechnicalEducation.MaxLength = 100;
                this.columnProfessionalEducation.MaxLength = 100;
                this.columnBusinessName.MaxLength = 50;
                this.columnWorkType.MaxLength = 50;
                this.columnDesignation.MaxLength = 50;
                this.columnBusinessAddress.MaxLength = 200;
                this.columnBusinessPhone.MaxLength = 50;
                this.columnEmail.MaxLength = 100;
                this.columnWebsite.MaxLength = 100;
                this.columnBusinessFax.MaxLength = 50;
                this.columnMobile.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnReason.MaxLength = 50;
                this.columnFatherName.MaxLength = 100;
                this.columnHusbandName.MaxLength = 100;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnOutof.MaxLength = 50;
                this.columnFamilyMemberID.AutoIncrement = true;
                this.columnFamilyMemberID.AllowDBNull = false;
                this.columnFamilyMemberID.ReadOnly = true;
                this.columnFamilyMemberID.Unique = true;
                this.columnDOB.MaxLength = 50;
                this.columnGender.MaxLength = 50;
                this.columnFromFCard.MaxLength = 50;
                this.columnToFCard.MaxLength = 50;
                this.columnIsNicPrinted.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblFamilyMemberRow Newusp_SEL_tblFamilyMemberRow() {
                return ((usp_SEL_tblFamilyMemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblFamilyMemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblFamilyMemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblFamilyMemberRowChanged != null)) {
                    this.usp_SEL_tblFamilyMemberRowChanged(this, new usp_SEL_tblFamilyMemberRowChangeEvent(((usp_SEL_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblFamilyMemberRowChanging != null)) {
                    this.usp_SEL_tblFamilyMemberRowChanging(this, new usp_SEL_tblFamilyMemberRowChangeEvent(((usp_SEL_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblFamilyMemberRowDeleted != null)) {
                    this.usp_SEL_tblFamilyMemberRowDeleted(this, new usp_SEL_tblFamilyMemberRowChangeEvent(((usp_SEL_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblFamilyMemberRowDeleting != null)) {
                    this.usp_SEL_tblFamilyMemberRowDeleting(this, new usp_SEL_tblFamilyMemberRowChangeEvent(((usp_SEL_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblFamilyMemberRow(usp_SEL_tblFamilyMemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblFamilyMemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblBloodGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBloodGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblBloodGroupDataTable() {
                this.TableName = "usp_SEL_tblBloodGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblBloodGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblBloodGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodGroupColumn {
                get {
                    return this.columnBloodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblBloodGroupRow this[int index] {
                get {
                    return ((usp_SEL_tblBloodGroupRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblBloodGroupRowChangeEventHandler usp_SEL_tblBloodGroupRowChanging;
            
            public event usp_SEL_tblBloodGroupRowChangeEventHandler usp_SEL_tblBloodGroupRowChanged;
            
            public event usp_SEL_tblBloodGroupRowChangeEventHandler usp_SEL_tblBloodGroupRowDeleting;
            
            public event usp_SEL_tblBloodGroupRowChangeEventHandler usp_SEL_tblBloodGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblBloodGroupRow(usp_SEL_tblBloodGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblBloodGroupRow Addusp_SEL_tblBloodGroupRow(string BloodGroup) {
                usp_SEL_tblBloodGroupRow rowusp_SEL_tblBloodGroupRow = ((usp_SEL_tblBloodGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BloodGroup};
                rowusp_SEL_tblBloodGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblBloodGroupRow);
                return rowusp_SEL_tblBloodGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblBloodGroupRow FindByID(int ID) {
                return ((usp_SEL_tblBloodGroupRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblBloodGroupDataTable cln = ((usp_SEL_tblBloodGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblBloodGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBloodGroup = base.Columns["BloodGroup"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBloodGroup = new global::System.Data.DataColumn("BloodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodGroup);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBloodGroup.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblBloodGroupRow Newusp_SEL_tblBloodGroupRow() {
                return ((usp_SEL_tblBloodGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblBloodGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblBloodGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblBloodGroupRowChanged != null)) {
                    this.usp_SEL_tblBloodGroupRowChanged(this, new usp_SEL_tblBloodGroupRowChangeEvent(((usp_SEL_tblBloodGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblBloodGroupRowChanging != null)) {
                    this.usp_SEL_tblBloodGroupRowChanging(this, new usp_SEL_tblBloodGroupRowChangeEvent(((usp_SEL_tblBloodGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblBloodGroupRowDeleted != null)) {
                    this.usp_SEL_tblBloodGroupRowDeleted(this, new usp_SEL_tblBloodGroupRowChangeEvent(((usp_SEL_tblBloodGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblBloodGroupRowDeleting != null)) {
                    this.usp_SEL_tblBloodGroupRowDeleting(this, new usp_SEL_tblBloodGroupRowChangeEvent(((usp_SEL_tblBloodGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblBloodGroupRow(usp_SEL_tblBloodGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblBloodGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblAreaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnArea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblAreaDataTable() {
                this.TableName = "usp_SEL_tblArea";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblAreaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblAreaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblAreaRow this[int index] {
                get {
                    return ((usp_SEL_tblAreaRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblAreaRowChangeEventHandler usp_SEL_tblAreaRowChanging;
            
            public event usp_SEL_tblAreaRowChangeEventHandler usp_SEL_tblAreaRowChanged;
            
            public event usp_SEL_tblAreaRowChangeEventHandler usp_SEL_tblAreaRowDeleting;
            
            public event usp_SEL_tblAreaRowChangeEventHandler usp_SEL_tblAreaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblAreaRow(usp_SEL_tblAreaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblAreaRow Addusp_SEL_tblAreaRow(string Area) {
                usp_SEL_tblAreaRow rowusp_SEL_tblAreaRow = ((usp_SEL_tblAreaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Area};
                rowusp_SEL_tblAreaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblAreaRow);
                return rowusp_SEL_tblAreaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblAreaRow FindByID(int ID) {
                return ((usp_SEL_tblAreaRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblAreaDataTable cln = ((usp_SEL_tblAreaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblAreaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnArea = base.Columns["Area"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnArea.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblAreaRow Newusp_SEL_tblAreaRow() {
                return ((usp_SEL_tblAreaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblAreaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblAreaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblAreaRowChanged != null)) {
                    this.usp_SEL_tblAreaRowChanged(this, new usp_SEL_tblAreaRowChangeEvent(((usp_SEL_tblAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblAreaRowChanging != null)) {
                    this.usp_SEL_tblAreaRowChanging(this, new usp_SEL_tblAreaRowChangeEvent(((usp_SEL_tblAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblAreaRowDeleted != null)) {
                    this.usp_SEL_tblAreaRowDeleted(this, new usp_SEL_tblAreaRowChangeEvent(((usp_SEL_tblAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblAreaRowDeleting != null)) {
                    this.usp_SEL_tblAreaRowDeleting(this, new usp_SEL_tblAreaRowChangeEvent(((usp_SEL_tblAreaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblAreaRow(usp_SEL_tblAreaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblAreaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_EngagementDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnFCardNoM;
            
            private global::System.Data.DataColumn columnNukhM;
            
            private global::System.Data.DataColumn columnOrakhM;
            
            private global::System.Data.DataColumn columnNameM;
            
            private global::System.Data.DataColumn columnFNameM;
            
            private global::System.Data.DataColumn columnFCardNoF;
            
            private global::System.Data.DataColumn columnNukhF;
            
            private global::System.Data.DataColumn columnOrakhF;
            
            private global::System.Data.DataColumn columnNameF;
            
            private global::System.Data.DataColumn columnFNameF;
            
            private global::System.Data.DataColumn columnArrangedBy;
            
            private global::System.Data.DataColumn columnDateofAction;
            
            private global::System.Data.DataColumn columnAgeM;
            
            private global::System.Data.DataColumn columnAgeF;
            
            private global::System.Data.DataColumn columnGFNameM;
            
            private global::System.Data.DataColumn columnGFNameF;
            
            private global::System.Data.DataColumn columnMarriage;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnReasonCancel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_EngagementDataTable() {
                this.TableName = "usp_SEL_Engagement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_EngagementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_EngagementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoMColumn {
                get {
                    return this.columnFCardNoM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhMColumn {
                get {
                    return this.columnNukhM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhMColumn {
                get {
                    return this.columnOrakhM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameMColumn {
                get {
                    return this.columnNameM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameMColumn {
                get {
                    return this.columnFNameM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoFColumn {
                get {
                    return this.columnFCardNoF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhFColumn {
                get {
                    return this.columnNukhF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhFColumn {
                get {
                    return this.columnOrakhF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameFColumn {
                get {
                    return this.columnNameF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameFColumn {
                get {
                    return this.columnFNameF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrangedByColumn {
                get {
                    return this.columnArrangedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateofActionColumn {
                get {
                    return this.columnDateofAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeMColumn {
                get {
                    return this.columnAgeM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeFColumn {
                get {
                    return this.columnAgeF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFNameMColumn {
                get {
                    return this.columnGFNameM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFNameFColumn {
                get {
                    return this.columnGFNameF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageColumn {
                get {
                    return this.columnMarriage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonCancelColumn {
                get {
                    return this.columnReasonCancel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_EngagementRow this[int index] {
                get {
                    return ((usp_SEL_EngagementRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_EngagementRowChangeEventHandler usp_SEL_EngagementRowChanging;
            
            public event usp_SEL_EngagementRowChangeEventHandler usp_SEL_EngagementRowChanged;
            
            public event usp_SEL_EngagementRowChangeEventHandler usp_SEL_EngagementRowDeleting;
            
            public event usp_SEL_EngagementRowChangeEventHandler usp_SEL_EngagementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_EngagementRow(usp_SEL_EngagementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_EngagementRow Addusp_SEL_EngagementRow(
                        string SerialNo, 
                        System.DateTime Date, 
                        string FCardNoM, 
                        string NukhM, 
                        string OrakhM, 
                        string NameM, 
                        string FNameM, 
                        string FCardNoF, 
                        string NukhF, 
                        string OrakhF, 
                        string NameF, 
                        string FNameF, 
                        string ArrangedBy, 
                        System.DateTime DateofAction, 
                        string AgeM, 
                        string AgeF, 
                        string GFNameM, 
                        string GFNameF, 
                        bool Marriage, 
                        bool Active, 
                        string ReasonCancel) {
                usp_SEL_EngagementRow rowusp_SEL_EngagementRow = ((usp_SEL_EngagementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SerialNo,
                        Date,
                        FCardNoM,
                        NukhM,
                        OrakhM,
                        NameM,
                        FNameM,
                        FCardNoF,
                        NukhF,
                        OrakhF,
                        NameF,
                        FNameF,
                        ArrangedBy,
                        DateofAction,
                        AgeM,
                        AgeF,
                        GFNameM,
                        GFNameF,
                        Marriage,
                        Active,
                        ReasonCancel};
                rowusp_SEL_EngagementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_EngagementRow);
                return rowusp_SEL_EngagementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_EngagementRow FindBySerialNo(string SerialNo) {
                return ((usp_SEL_EngagementRow)(this.Rows.Find(new object[] {
                            SerialNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_EngagementDataTable cln = ((usp_SEL_EngagementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_EngagementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnDate = base.Columns["Date"];
                this.columnFCardNoM = base.Columns["FCardNoM"];
                this.columnNukhM = base.Columns["NukhM"];
                this.columnOrakhM = base.Columns["OrakhM"];
                this.columnNameM = base.Columns["NameM"];
                this.columnFNameM = base.Columns["FNameM"];
                this.columnFCardNoF = base.Columns["FCardNoF"];
                this.columnNukhF = base.Columns["NukhF"];
                this.columnOrakhF = base.Columns["OrakhF"];
                this.columnNameF = base.Columns["NameF"];
                this.columnFNameF = base.Columns["FNameF"];
                this.columnArrangedBy = base.Columns["ArrangedBy"];
                this.columnDateofAction = base.Columns["DateofAction"];
                this.columnAgeM = base.Columns["AgeM"];
                this.columnAgeF = base.Columns["AgeF"];
                this.columnGFNameM = base.Columns["GFNameM"];
                this.columnGFNameF = base.Columns["GFNameF"];
                this.columnMarriage = base.Columns["Marriage"];
                this.columnActive = base.Columns["Active"];
                this.columnReasonCancel = base.Columns["ReasonCancel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnFCardNoM = new global::System.Data.DataColumn("FCardNoM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNoM);
                this.columnNukhM = new global::System.Data.DataColumn("NukhM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukhM);
                this.columnOrakhM = new global::System.Data.DataColumn("OrakhM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakhM);
                this.columnNameM = new global::System.Data.DataColumn("NameM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameM);
                this.columnFNameM = new global::System.Data.DataColumn("FNameM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNameM);
                this.columnFCardNoF = new global::System.Data.DataColumn("FCardNoF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNoF);
                this.columnNukhF = new global::System.Data.DataColumn("NukhF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukhF);
                this.columnOrakhF = new global::System.Data.DataColumn("OrakhF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakhF);
                this.columnNameF = new global::System.Data.DataColumn("NameF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameF);
                this.columnFNameF = new global::System.Data.DataColumn("FNameF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNameF);
                this.columnArrangedBy = new global::System.Data.DataColumn("ArrangedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrangedBy);
                this.columnDateofAction = new global::System.Data.DataColumn("DateofAction", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateofAction);
                this.columnAgeM = new global::System.Data.DataColumn("AgeM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeM);
                this.columnAgeF = new global::System.Data.DataColumn("AgeF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeF);
                this.columnGFNameM = new global::System.Data.DataColumn("GFNameM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFNameM);
                this.columnGFNameF = new global::System.Data.DataColumn("GFNameF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFNameF);
                this.columnMarriage = new global::System.Data.DataColumn("Marriage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriage);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnReasonCancel = new global::System.Data.DataColumn("ReasonCancel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonCancel);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSerialNo}, true));
                this.columnSerialNo.AllowDBNull = false;
                this.columnSerialNo.Unique = true;
                this.columnSerialNo.MaxLength = 50;
                this.columnFCardNoM.MaxLength = 50;
                this.columnNukhM.MaxLength = 50;
                this.columnOrakhM.MaxLength = 50;
                this.columnNameM.MaxLength = 50;
                this.columnFNameM.MaxLength = 50;
                this.columnFCardNoF.MaxLength = 50;
                this.columnNukhF.MaxLength = 50;
                this.columnOrakhF.MaxLength = 50;
                this.columnNameF.MaxLength = 50;
                this.columnFNameF.MaxLength = 50;
                this.columnArrangedBy.MaxLength = 50;
                this.columnAgeM.MaxLength = 50;
                this.columnAgeF.MaxLength = 50;
                this.columnGFNameM.MaxLength = 50;
                this.columnGFNameF.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_EngagementRow Newusp_SEL_EngagementRow() {
                return ((usp_SEL_EngagementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_EngagementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_EngagementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_EngagementRowChanged != null)) {
                    this.usp_SEL_EngagementRowChanged(this, new usp_SEL_EngagementRowChangeEvent(((usp_SEL_EngagementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_EngagementRowChanging != null)) {
                    this.usp_SEL_EngagementRowChanging(this, new usp_SEL_EngagementRowChangeEvent(((usp_SEL_EngagementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_EngagementRowDeleted != null)) {
                    this.usp_SEL_EngagementRowDeleted(this, new usp_SEL_EngagementRowChangeEvent(((usp_SEL_EngagementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_EngagementRowDeleting != null)) {
                    this.usp_SEL_EngagementRowDeleting(this, new usp_SEL_EngagementRowChangeEvent(((usp_SEL_EngagementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_EngagementRow(usp_SEL_EngagementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_EngagementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_Male_tblFamilyMemberDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFamilyMemberID;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnLeaderRelation;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnHusbandName;
            
            private global::System.Data.DataColumn columnBloodGroup;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnCNIC;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnAcademicEducation;
            
            private global::System.Data.DataColumn columnTechnicalEducation;
            
            private global::System.Data.DataColumn columnProfessionalEducation;
            
            private global::System.Data.DataColumn columnBusinessName;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnBusinessAddress;
            
            private global::System.Data.DataColumn columnBusinessPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnBusinessFax;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnOutof;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnGender;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Male_tblFamilyMemberDataTable() {
                this.TableName = "usp_Male_tblFamilyMember";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_Male_tblFamilyMemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_Male_tblFamilyMemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyMemberIDColumn {
                get {
                    return this.columnFamilyMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderRelationColumn {
                get {
                    return this.columnLeaderRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HusbandNameColumn {
                get {
                    return this.columnHusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodGroupColumn {
                get {
                    return this.columnBloodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNICColumn {
                get {
                    return this.columnCNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcademicEducationColumn {
                get {
                    return this.columnAcademicEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechnicalEducationColumn {
                get {
                    return this.columnTechnicalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfessionalEducationColumn {
                get {
                    return this.columnProfessionalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessNameColumn {
                get {
                    return this.columnBusinessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessAddressColumn {
                get {
                    return this.columnBusinessAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessPhoneColumn {
                get {
                    return this.columnBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessFaxColumn {
                get {
                    return this.columnBusinessFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutofColumn {
                get {
                    return this.columnOutof;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Male_tblFamilyMemberRow this[int index] {
                get {
                    return ((usp_Male_tblFamilyMemberRow)(this.Rows[index]));
                }
            }
            
            public event usp_Male_tblFamilyMemberRowChangeEventHandler usp_Male_tblFamilyMemberRowChanging;
            
            public event usp_Male_tblFamilyMemberRowChangeEventHandler usp_Male_tblFamilyMemberRowChanged;
            
            public event usp_Male_tblFamilyMemberRowChangeEventHandler usp_Male_tblFamilyMemberRowDeleting;
            
            public event usp_Male_tblFamilyMemberRowChangeEventHandler usp_Male_tblFamilyMemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_Male_tblFamilyMemberRow(usp_Male_tblFamilyMemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Male_tblFamilyMemberRow Addusp_Male_tblFamilyMemberRow(
                        string FCardNo, 
                        string MemberName, 
                        string LeaderRelation, 
                        string FatherName, 
                        string HusbandName, 
                        string BloodGroup, 
                        string AgeGroup, 
                        string Mobile, 
                        string CNIC, 
                        string NIC, 
                        string AcademicEducation, 
                        string TechnicalEducation, 
                        string ProfessionalEducation, 
                        string BusinessName, 
                        string WorkType, 
                        string Designation, 
                        string BusinessAddress, 
                        string BusinessPhone, 
                        string Email, 
                        string Website, 
                        string BusinessFax, 
                        bool Active, 
                        string MaritalStatus, 
                        string Outof, 
                        System.DateTime EntryDate, 
                        string DOB, 
                        string Gender) {
                usp_Male_tblFamilyMemberRow rowusp_Male_tblFamilyMemberRow = ((usp_Male_tblFamilyMemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FCardNo,
                        MemberName,
                        LeaderRelation,
                        FatherName,
                        HusbandName,
                        BloodGroup,
                        AgeGroup,
                        Mobile,
                        CNIC,
                        NIC,
                        AcademicEducation,
                        TechnicalEducation,
                        ProfessionalEducation,
                        BusinessName,
                        WorkType,
                        Designation,
                        BusinessAddress,
                        BusinessPhone,
                        Email,
                        Website,
                        BusinessFax,
                        Active,
                        MaritalStatus,
                        Outof,
                        EntryDate,
                        DOB,
                        Gender};
                rowusp_Male_tblFamilyMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_Male_tblFamilyMemberRow);
                return rowusp_Male_tblFamilyMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Male_tblFamilyMemberRow FindByFamilyMemberID(long FamilyMemberID) {
                return ((usp_Male_tblFamilyMemberRow)(this.Rows.Find(new object[] {
                            FamilyMemberID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_Male_tblFamilyMemberDataTable cln = ((usp_Male_tblFamilyMemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_Male_tblFamilyMemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFamilyMemberID = base.Columns["FamilyMemberID"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnLeaderRelation = base.Columns["LeaderRelation"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnHusbandName = base.Columns["HusbandName"];
                this.columnBloodGroup = base.Columns["BloodGroup"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnCNIC = base.Columns["CNIC"];
                this.columnNIC = base.Columns["NIC"];
                this.columnAcademicEducation = base.Columns["AcademicEducation"];
                this.columnTechnicalEducation = base.Columns["TechnicalEducation"];
                this.columnProfessionalEducation = base.Columns["ProfessionalEducation"];
                this.columnBusinessName = base.Columns["BusinessName"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnBusinessAddress = base.Columns["BusinessAddress"];
                this.columnBusinessPhone = base.Columns["BusinessPhone"];
                this.columnEmail = base.Columns["Email"];
                this.columnWebsite = base.Columns["Website"];
                this.columnBusinessFax = base.Columns["BusinessFax"];
                this.columnActive = base.Columns["Active"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnOutof = base.Columns["Outof"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnDOB = base.Columns["DOB"];
                this.columnGender = base.Columns["Gender"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFamilyMemberID = new global::System.Data.DataColumn("FamilyMemberID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyMemberID);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnLeaderRelation = new global::System.Data.DataColumn("LeaderRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderRelation);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnHusbandName = new global::System.Data.DataColumn("HusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHusbandName);
                this.columnBloodGroup = new global::System.Data.DataColumn("BloodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodGroup);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnCNIC = new global::System.Data.DataColumn("CNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNIC);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnAcademicEducation = new global::System.Data.DataColumn("AcademicEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcademicEducation);
                this.columnTechnicalEducation = new global::System.Data.DataColumn("TechnicalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalEducation);
                this.columnProfessionalEducation = new global::System.Data.DataColumn("ProfessionalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfessionalEducation);
                this.columnBusinessName = new global::System.Data.DataColumn("BusinessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessName);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnBusinessAddress = new global::System.Data.DataColumn("BusinessAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessAddress);
                this.columnBusinessPhone = new global::System.Data.DataColumn("BusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnBusinessFax = new global::System.Data.DataColumn("BusinessFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessFax);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnOutof = new global::System.Data.DataColumn("Outof", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutof);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFamilyMemberID}, true));
                this.columnFamilyMemberID.AutoIncrement = true;
                this.columnFamilyMemberID.AllowDBNull = false;
                this.columnFamilyMemberID.ReadOnly = true;
                this.columnFamilyMemberID.Unique = true;
                this.columnFCardNo.AllowDBNull = false;
                this.columnFCardNo.MaxLength = 50;
                this.columnMemberName.MaxLength = 100;
                this.columnLeaderRelation.MaxLength = 100;
                this.columnFatherName.MaxLength = 100;
                this.columnHusbandName.MaxLength = 100;
                this.columnBloodGroup.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnMobile.MaxLength = 50;
                this.columnCNIC.MaxLength = 100;
                this.columnNIC.MaxLength = 100;
                this.columnAcademicEducation.MaxLength = 100;
                this.columnTechnicalEducation.MaxLength = 100;
                this.columnProfessionalEducation.MaxLength = 100;
                this.columnBusinessName.MaxLength = 50;
                this.columnWorkType.MaxLength = 50;
                this.columnDesignation.MaxLength = 50;
                this.columnBusinessAddress.MaxLength = 200;
                this.columnBusinessPhone.MaxLength = 50;
                this.columnEmail.MaxLength = 100;
                this.columnWebsite.MaxLength = 100;
                this.columnBusinessFax.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnOutof.MaxLength = 50;
                this.columnDOB.MaxLength = 50;
                this.columnGender.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Male_tblFamilyMemberRow Newusp_Male_tblFamilyMemberRow() {
                return ((usp_Male_tblFamilyMemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_Male_tblFamilyMemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_Male_tblFamilyMemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_Male_tblFamilyMemberRowChanged != null)) {
                    this.usp_Male_tblFamilyMemberRowChanged(this, new usp_Male_tblFamilyMemberRowChangeEvent(((usp_Male_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_Male_tblFamilyMemberRowChanging != null)) {
                    this.usp_Male_tblFamilyMemberRowChanging(this, new usp_Male_tblFamilyMemberRowChangeEvent(((usp_Male_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_Male_tblFamilyMemberRowDeleted != null)) {
                    this.usp_Male_tblFamilyMemberRowDeleted(this, new usp_Male_tblFamilyMemberRowChangeEvent(((usp_Male_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_Male_tblFamilyMemberRowDeleting != null)) {
                    this.usp_Male_tblFamilyMemberRowDeleting(this, new usp_Male_tblFamilyMemberRowChangeEvent(((usp_Male_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_Male_tblFamilyMemberRow(usp_Male_tblFamilyMemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_Male_tblFamilyMemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_Female_tblFamilyMemberDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFamilyMemberID;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnLeaderRelation;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnHusbandName;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnBloodGroup;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnCNIC;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnAcademicEducation;
            
            private global::System.Data.DataColumn columnTechnicalEducation;
            
            private global::System.Data.DataColumn columnProfessionalEducation;
            
            private global::System.Data.DataColumn columnBusinessName;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnBusinessAddress;
            
            private global::System.Data.DataColumn columnBusinessPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnBusinessFax;
            
            private global::System.Data.DataColumn columnGender1;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnOutof;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Female_tblFamilyMemberDataTable() {
                this.TableName = "usp_Female_tblFamilyMember";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_Female_tblFamilyMemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_Female_tblFamilyMemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyMemberIDColumn {
                get {
                    return this.columnFamilyMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderRelationColumn {
                get {
                    return this.columnLeaderRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HusbandNameColumn {
                get {
                    return this.columnHusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodGroupColumn {
                get {
                    return this.columnBloodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNICColumn {
                get {
                    return this.columnCNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcademicEducationColumn {
                get {
                    return this.columnAcademicEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechnicalEducationColumn {
                get {
                    return this.columnTechnicalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfessionalEducationColumn {
                get {
                    return this.columnProfessionalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessNameColumn {
                get {
                    return this.columnBusinessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessAddressColumn {
                get {
                    return this.columnBusinessAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessPhoneColumn {
                get {
                    return this.columnBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessFaxColumn {
                get {
                    return this.columnBusinessFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Gender1Column {
                get {
                    return this.columnGender1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutofColumn {
                get {
                    return this.columnOutof;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Female_tblFamilyMemberRow this[int index] {
                get {
                    return ((usp_Female_tblFamilyMemberRow)(this.Rows[index]));
                }
            }
            
            public event usp_Female_tblFamilyMemberRowChangeEventHandler usp_Female_tblFamilyMemberRowChanging;
            
            public event usp_Female_tblFamilyMemberRowChangeEventHandler usp_Female_tblFamilyMemberRowChanged;
            
            public event usp_Female_tblFamilyMemberRowChangeEventHandler usp_Female_tblFamilyMemberRowDeleting;
            
            public event usp_Female_tblFamilyMemberRowChangeEventHandler usp_Female_tblFamilyMemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_Female_tblFamilyMemberRow(usp_Female_tblFamilyMemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Female_tblFamilyMemberRow Addusp_Female_tblFamilyMemberRow(
                        string FCardNo, 
                        string MemberName, 
                        string LeaderRelation, 
                        string FatherName, 
                        string HusbandName, 
                        string DOB, 
                        string BloodGroup, 
                        string Gender, 
                        string AgeGroup, 
                        string Mobile, 
                        string CNIC, 
                        string NIC, 
                        string AcademicEducation, 
                        string TechnicalEducation, 
                        string ProfessionalEducation, 
                        string BusinessName, 
                        string WorkType, 
                        string Designation, 
                        string BusinessAddress, 
                        string BusinessPhone, 
                        string Email, 
                        string Website, 
                        string BusinessFax, 
                        string Gender1, 
                        bool Active, 
                        string MaritalStatus, 
                        string Outof, 
                        System.DateTime EntryDate) {
                usp_Female_tblFamilyMemberRow rowusp_Female_tblFamilyMemberRow = ((usp_Female_tblFamilyMemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FCardNo,
                        MemberName,
                        LeaderRelation,
                        FatherName,
                        HusbandName,
                        DOB,
                        BloodGroup,
                        Gender,
                        AgeGroup,
                        Mobile,
                        CNIC,
                        NIC,
                        AcademicEducation,
                        TechnicalEducation,
                        ProfessionalEducation,
                        BusinessName,
                        WorkType,
                        Designation,
                        BusinessAddress,
                        BusinessPhone,
                        Email,
                        Website,
                        BusinessFax,
                        Gender1,
                        Active,
                        MaritalStatus,
                        Outof,
                        EntryDate};
                rowusp_Female_tblFamilyMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_Female_tblFamilyMemberRow);
                return rowusp_Female_tblFamilyMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Female_tblFamilyMemberRow FindByFamilyMemberID(long FamilyMemberID) {
                return ((usp_Female_tblFamilyMemberRow)(this.Rows.Find(new object[] {
                            FamilyMemberID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_Female_tblFamilyMemberDataTable cln = ((usp_Female_tblFamilyMemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_Female_tblFamilyMemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFamilyMemberID = base.Columns["FamilyMemberID"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnLeaderRelation = base.Columns["LeaderRelation"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnHusbandName = base.Columns["HusbandName"];
                this.columnDOB = base.Columns["DOB"];
                this.columnBloodGroup = base.Columns["BloodGroup"];
                this.columnGender = base.Columns["Gender"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnCNIC = base.Columns["CNIC"];
                this.columnNIC = base.Columns["NIC"];
                this.columnAcademicEducation = base.Columns["AcademicEducation"];
                this.columnTechnicalEducation = base.Columns["TechnicalEducation"];
                this.columnProfessionalEducation = base.Columns["ProfessionalEducation"];
                this.columnBusinessName = base.Columns["BusinessName"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnBusinessAddress = base.Columns["BusinessAddress"];
                this.columnBusinessPhone = base.Columns["BusinessPhone"];
                this.columnEmail = base.Columns["Email"];
                this.columnWebsite = base.Columns["Website"];
                this.columnBusinessFax = base.Columns["BusinessFax"];
                this.columnGender1 = base.Columns["Gender1"];
                this.columnActive = base.Columns["Active"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnOutof = base.Columns["Outof"];
                this.columnEntryDate = base.Columns["EntryDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFamilyMemberID = new global::System.Data.DataColumn("FamilyMemberID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyMemberID);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnLeaderRelation = new global::System.Data.DataColumn("LeaderRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderRelation);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnHusbandName = new global::System.Data.DataColumn("HusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHusbandName);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnBloodGroup = new global::System.Data.DataColumn("BloodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodGroup);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnCNIC = new global::System.Data.DataColumn("CNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNIC);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnAcademicEducation = new global::System.Data.DataColumn("AcademicEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcademicEducation);
                this.columnTechnicalEducation = new global::System.Data.DataColumn("TechnicalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalEducation);
                this.columnProfessionalEducation = new global::System.Data.DataColumn("ProfessionalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfessionalEducation);
                this.columnBusinessName = new global::System.Data.DataColumn("BusinessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessName);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnBusinessAddress = new global::System.Data.DataColumn("BusinessAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessAddress);
                this.columnBusinessPhone = new global::System.Data.DataColumn("BusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnBusinessFax = new global::System.Data.DataColumn("BusinessFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessFax);
                this.columnGender1 = new global::System.Data.DataColumn("Gender1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender1);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnOutof = new global::System.Data.DataColumn("Outof", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutof);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFamilyMemberID}, true));
                this.columnFamilyMemberID.AutoIncrement = true;
                this.columnFamilyMemberID.AllowDBNull = false;
                this.columnFamilyMemberID.ReadOnly = true;
                this.columnFamilyMemberID.Unique = true;
                this.columnFCardNo.AllowDBNull = false;
                this.columnFCardNo.MaxLength = 50;
                this.columnMemberName.MaxLength = 100;
                this.columnLeaderRelation.MaxLength = 100;
                this.columnFatherName.MaxLength = 100;
                this.columnHusbandName.MaxLength = 100;
                this.columnBloodGroup.MaxLength = 50;
                this.columnGender.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnMobile.MaxLength = 50;
                this.columnCNIC.MaxLength = 100;
                this.columnNIC.MaxLength = 100;
                this.columnAcademicEducation.MaxLength = 100;
                this.columnTechnicalEducation.MaxLength = 100;
                this.columnProfessionalEducation.MaxLength = 100;
                this.columnBusinessName.MaxLength = 50;
                this.columnWorkType.MaxLength = 50;
                this.columnDesignation.MaxLength = 50;
                this.columnBusinessAddress.MaxLength = 200;
                this.columnBusinessPhone.MaxLength = 50;
                this.columnEmail.MaxLength = 100;
                this.columnWebsite.MaxLength = 100;
                this.columnBusinessFax.MaxLength = 50;
                this.columnGender1.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnOutof.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Female_tblFamilyMemberRow Newusp_Female_tblFamilyMemberRow() {
                return ((usp_Female_tblFamilyMemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_Female_tblFamilyMemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_Female_tblFamilyMemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_Female_tblFamilyMemberRowChanged != null)) {
                    this.usp_Female_tblFamilyMemberRowChanged(this, new usp_Female_tblFamilyMemberRowChangeEvent(((usp_Female_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_Female_tblFamilyMemberRowChanging != null)) {
                    this.usp_Female_tblFamilyMemberRowChanging(this, new usp_Female_tblFamilyMemberRowChangeEvent(((usp_Female_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_Female_tblFamilyMemberRowDeleted != null)) {
                    this.usp_Female_tblFamilyMemberRowDeleted(this, new usp_Female_tblFamilyMemberRowChangeEvent(((usp_Female_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_Female_tblFamilyMemberRowDeleting != null)) {
                    this.usp_Female_tblFamilyMemberRowDeleting(this, new usp_Female_tblFamilyMemberRowChangeEvent(((usp_Female_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_Female_tblFamilyMemberRow(usp_Female_tblFamilyMemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_Female_tblFamilyMemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_MarriageDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnMarriageDate;
            
            private global::System.Data.DataColumn columnFCardNoM;
            
            private global::System.Data.DataColumn columnNukhM;
            
            private global::System.Data.DataColumn columnOrakhM;
            
            private global::System.Data.DataColumn columnNameM;
            
            private global::System.Data.DataColumn columnFNameM;
            
            private global::System.Data.DataColumn columnAgeM;
            
            private global::System.Data.DataColumn columnFCardNoF;
            
            private global::System.Data.DataColumn columnNukhF;
            
            private global::System.Data.DataColumn columnOrakhF;
            
            private global::System.Data.DataColumn columnNameF;
            
            private global::System.Data.DataColumn columnFNameF;
            
            private global::System.Data.DataColumn columnAgeF;
            
            private global::System.Data.DataColumn columnDateofEngagement;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnGFNameM;
            
            private global::System.Data.DataColumn columnGFNameF;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnatTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_MarriageDataTable() {
                this.TableName = "usp_SEL_Marriage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_MarriageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_MarriageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageDateColumn {
                get {
                    return this.columnMarriageDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoMColumn {
                get {
                    return this.columnFCardNoM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhMColumn {
                get {
                    return this.columnNukhM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhMColumn {
                get {
                    return this.columnOrakhM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameMColumn {
                get {
                    return this.columnNameM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameMColumn {
                get {
                    return this.columnFNameM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeMColumn {
                get {
                    return this.columnAgeM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoFColumn {
                get {
                    return this.columnFCardNoF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhFColumn {
                get {
                    return this.columnNukhF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhFColumn {
                get {
                    return this.columnOrakhF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameFColumn {
                get {
                    return this.columnNameF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameFColumn {
                get {
                    return this.columnFNameF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeFColumn {
                get {
                    return this.columnAgeF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateofEngagementColumn {
                get {
                    return this.columnDateofEngagement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFNameMColumn {
                get {
                    return this.columnGFNameM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFNameFColumn {
                get {
                    return this.columnGFNameF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn atTimeColumn {
                get {
                    return this.columnatTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_MarriageRow this[int index] {
                get {
                    return ((usp_SEL_MarriageRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_MarriageRowChangeEventHandler usp_SEL_MarriageRowChanging;
            
            public event usp_SEL_MarriageRowChangeEventHandler usp_SEL_MarriageRowChanged;
            
            public event usp_SEL_MarriageRowChangeEventHandler usp_SEL_MarriageRowDeleting;
            
            public event usp_SEL_MarriageRowChangeEventHandler usp_SEL_MarriageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_MarriageRow(usp_SEL_MarriageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_MarriageRow Addusp_SEL_MarriageRow(
                        string SerialNo, 
                        System.DateTime MarriageDate, 
                        string FCardNoM, 
                        string NukhM, 
                        string OrakhM, 
                        string NameM, 
                        string FNameM, 
                        string AgeM, 
                        string FCardNoF, 
                        string NukhF, 
                        string OrakhF, 
                        string NameF, 
                        string FNameF, 
                        string AgeF, 
                        System.DateTime DateofEngagement, 
                        System.DateTime EntryDate, 
                        string GFNameM, 
                        string GFNameF, 
                        bool Active, 
                        string atTime) {
                usp_SEL_MarriageRow rowusp_SEL_MarriageRow = ((usp_SEL_MarriageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SerialNo,
                        MarriageDate,
                        FCardNoM,
                        NukhM,
                        OrakhM,
                        NameM,
                        FNameM,
                        AgeM,
                        FCardNoF,
                        NukhF,
                        OrakhF,
                        NameF,
                        FNameF,
                        AgeF,
                        DateofEngagement,
                        EntryDate,
                        GFNameM,
                        GFNameF,
                        Active,
                        atTime};
                rowusp_SEL_MarriageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_MarriageRow);
                return rowusp_SEL_MarriageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_MarriageRow FindBySerialNo(string SerialNo) {
                return ((usp_SEL_MarriageRow)(this.Rows.Find(new object[] {
                            SerialNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_MarriageDataTable cln = ((usp_SEL_MarriageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_MarriageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnMarriageDate = base.Columns["MarriageDate"];
                this.columnFCardNoM = base.Columns["FCardNoM"];
                this.columnNukhM = base.Columns["NukhM"];
                this.columnOrakhM = base.Columns["OrakhM"];
                this.columnNameM = base.Columns["NameM"];
                this.columnFNameM = base.Columns["FNameM"];
                this.columnAgeM = base.Columns["AgeM"];
                this.columnFCardNoF = base.Columns["FCardNoF"];
                this.columnNukhF = base.Columns["NukhF"];
                this.columnOrakhF = base.Columns["OrakhF"];
                this.columnNameF = base.Columns["NameF"];
                this.columnFNameF = base.Columns["FNameF"];
                this.columnAgeF = base.Columns["AgeF"];
                this.columnDateofEngagement = base.Columns["DateofEngagement"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnGFNameM = base.Columns["GFNameM"];
                this.columnGFNameF = base.Columns["GFNameF"];
                this.columnActive = base.Columns["Active"];
                this.columnatTime = base.Columns["atTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnMarriageDate = new global::System.Data.DataColumn("MarriageDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageDate);
                this.columnFCardNoM = new global::System.Data.DataColumn("FCardNoM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNoM);
                this.columnNukhM = new global::System.Data.DataColumn("NukhM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukhM);
                this.columnOrakhM = new global::System.Data.DataColumn("OrakhM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakhM);
                this.columnNameM = new global::System.Data.DataColumn("NameM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameM);
                this.columnFNameM = new global::System.Data.DataColumn("FNameM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNameM);
                this.columnAgeM = new global::System.Data.DataColumn("AgeM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeM);
                this.columnFCardNoF = new global::System.Data.DataColumn("FCardNoF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNoF);
                this.columnNukhF = new global::System.Data.DataColumn("NukhF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukhF);
                this.columnOrakhF = new global::System.Data.DataColumn("OrakhF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakhF);
                this.columnNameF = new global::System.Data.DataColumn("NameF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameF);
                this.columnFNameF = new global::System.Data.DataColumn("FNameF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNameF);
                this.columnAgeF = new global::System.Data.DataColumn("AgeF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeF);
                this.columnDateofEngagement = new global::System.Data.DataColumn("DateofEngagement", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateofEngagement);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnGFNameM = new global::System.Data.DataColumn("GFNameM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFNameM);
                this.columnGFNameF = new global::System.Data.DataColumn("GFNameF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFNameF);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnatTime = new global::System.Data.DataColumn("atTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnatTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSerialNo}, true));
                this.columnSerialNo.AllowDBNull = false;
                this.columnSerialNo.Unique = true;
                this.columnSerialNo.MaxLength = 50;
                this.columnFCardNoM.MaxLength = 50;
                this.columnNukhM.MaxLength = 50;
                this.columnOrakhM.MaxLength = 50;
                this.columnNameM.MaxLength = 50;
                this.columnFNameM.MaxLength = 50;
                this.columnAgeM.MaxLength = 50;
                this.columnFCardNoF.MaxLength = 50;
                this.columnNukhF.MaxLength = 50;
                this.columnOrakhF.MaxLength = 50;
                this.columnNameF.MaxLength = 50;
                this.columnFNameF.MaxLength = 50;
                this.columnAgeF.MaxLength = 50;
                this.columnGFNameM.MaxLength = 50;
                this.columnGFNameF.MaxLength = 50;
                this.columnatTime.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_MarriageRow Newusp_SEL_MarriageRow() {
                return ((usp_SEL_MarriageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_MarriageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_MarriageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_MarriageRowChanged != null)) {
                    this.usp_SEL_MarriageRowChanged(this, new usp_SEL_MarriageRowChangeEvent(((usp_SEL_MarriageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_MarriageRowChanging != null)) {
                    this.usp_SEL_MarriageRowChanging(this, new usp_SEL_MarriageRowChangeEvent(((usp_SEL_MarriageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_MarriageRowDeleted != null)) {
                    this.usp_SEL_MarriageRowDeleted(this, new usp_SEL_MarriageRowChangeEvent(((usp_SEL_MarriageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_MarriageRowDeleting != null)) {
                    this.usp_SEL_MarriageRowDeleting(this, new usp_SEL_MarriageRowChangeEvent(((usp_SEL_MarriageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_MarriageRow(usp_SEL_MarriageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_MarriageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_tblWorkTypeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnWorkType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblWorkTypeDataTable() {
                this.TableName = "usp_SEL_tblWorkType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblWorkTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_tblWorkTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblWorkTypeRow this[int index] {
                get {
                    return ((usp_SEL_tblWorkTypeRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_tblWorkTypeRowChangeEventHandler usp_SEL_tblWorkTypeRowChanging;
            
            public event usp_SEL_tblWorkTypeRowChangeEventHandler usp_SEL_tblWorkTypeRowChanged;
            
            public event usp_SEL_tblWorkTypeRowChangeEventHandler usp_SEL_tblWorkTypeRowDeleting;
            
            public event usp_SEL_tblWorkTypeRowChangeEventHandler usp_SEL_tblWorkTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_tblWorkTypeRow(usp_SEL_tblWorkTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblWorkTypeRow Addusp_SEL_tblWorkTypeRow(string WorkType) {
                usp_SEL_tblWorkTypeRow rowusp_SEL_tblWorkTypeRow = ((usp_SEL_tblWorkTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        WorkType};
                rowusp_SEL_tblWorkTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_tblWorkTypeRow);
                return rowusp_SEL_tblWorkTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblWorkTypeRow FindByID(int ID) {
                return ((usp_SEL_tblWorkTypeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_tblWorkTypeDataTable cln = ((usp_SEL_tblWorkTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_tblWorkTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnWorkType = base.Columns["WorkType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnWorkType.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblWorkTypeRow Newusp_SEL_tblWorkTypeRow() {
                return ((usp_SEL_tblWorkTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_tblWorkTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_tblWorkTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_tblWorkTypeRowChanged != null)) {
                    this.usp_SEL_tblWorkTypeRowChanged(this, new usp_SEL_tblWorkTypeRowChangeEvent(((usp_SEL_tblWorkTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_tblWorkTypeRowChanging != null)) {
                    this.usp_SEL_tblWorkTypeRowChanging(this, new usp_SEL_tblWorkTypeRowChangeEvent(((usp_SEL_tblWorkTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_tblWorkTypeRowDeleted != null)) {
                    this.usp_SEL_tblWorkTypeRowDeleted(this, new usp_SEL_tblWorkTypeRowChangeEvent(((usp_SEL_tblWorkTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_tblWorkTypeRowDeleting != null)) {
                    this.usp_SEL_tblWorkTypeRowDeleting(this, new usp_SEL_tblWorkTypeRowChangeEvent(((usp_SEL_tblWorkTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_tblWorkTypeRow(usp_SEL_tblWorkTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_tblWorkTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_rpt_MembersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnFamilyLeader;
            
            private global::System.Data.DataColumn columnNukh;
            
            private global::System.Data.DataColumn columnSign;
            
            private global::System.Data.DataColumn columnVillage;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnLeaderRelation;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnHusbandName;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnOutof;
            
            private global::System.Data.DataColumn columnAcademicEducation;
            
            private global::System.Data.DataColumn columnWorkType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_rpt_MembersDataTable() {
                this.TableName = "usp_rpt_Members";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_rpt_MembersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_rpt_MembersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyLeaderColumn {
                get {
                    return this.columnFamilyLeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhColumn {
                get {
                    return this.columnNukh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignColumn {
                get {
                    return this.columnSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VillageColumn {
                get {
                    return this.columnVillage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderRelationColumn {
                get {
                    return this.columnLeaderRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HusbandNameColumn {
                get {
                    return this.columnHusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutofColumn {
                get {
                    return this.columnOutof;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcademicEducationColumn {
                get {
                    return this.columnAcademicEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_rpt_MembersRow this[int index] {
                get {
                    return ((usp_rpt_MembersRow)(this.Rows[index]));
                }
            }
            
            public event usp_rpt_MembersRowChangeEventHandler usp_rpt_MembersRowChanging;
            
            public event usp_rpt_MembersRowChangeEventHandler usp_rpt_MembersRowChanged;
            
            public event usp_rpt_MembersRowChangeEventHandler usp_rpt_MembersRowDeleting;
            
            public event usp_rpt_MembersRowChangeEventHandler usp_rpt_MembersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_rpt_MembersRow(usp_rpt_MembersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_rpt_MembersRow Addusp_rpt_MembersRow(
                        string FCardNo, 
                        string FamilyLeader, 
                        string Nukh, 
                        string Sign, 
                        string Village, 
                        string MemberName, 
                        string LeaderRelation, 
                        string FatherName, 
                        string HusbandName, 
                        string DOB, 
                        string Gender, 
                        string AgeGroup, 
                        string MaritalStatus, 
                        string Outof, 
                        string AcademicEducation, 
                        string WorkType) {
                usp_rpt_MembersRow rowusp_rpt_MembersRow = ((usp_rpt_MembersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FCardNo,
                        FamilyLeader,
                        Nukh,
                        Sign,
                        Village,
                        MemberName,
                        LeaderRelation,
                        FatherName,
                        HusbandName,
                        DOB,
                        Gender,
                        AgeGroup,
                        MaritalStatus,
                        Outof,
                        AcademicEducation,
                        WorkType};
                rowusp_rpt_MembersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_rpt_MembersRow);
                return rowusp_rpt_MembersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_rpt_MembersDataTable cln = ((usp_rpt_MembersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_rpt_MembersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnFamilyLeader = base.Columns["FamilyLeader"];
                this.columnNukh = base.Columns["Nukh"];
                this.columnSign = base.Columns["Sign"];
                this.columnVillage = base.Columns["Village"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnLeaderRelation = base.Columns["LeaderRelation"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnHusbandName = base.Columns["HusbandName"];
                this.columnDOB = base.Columns["DOB"];
                this.columnGender = base.Columns["Gender"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnOutof = base.Columns["Outof"];
                this.columnAcademicEducation = base.Columns["AcademicEducation"];
                this.columnWorkType = base.Columns["WorkType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnFamilyLeader = new global::System.Data.DataColumn("FamilyLeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyLeader);
                this.columnNukh = new global::System.Data.DataColumn("Nukh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukh);
                this.columnSign = new global::System.Data.DataColumn("Sign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSign);
                this.columnVillage = new global::System.Data.DataColumn("Village", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillage);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnLeaderRelation = new global::System.Data.DataColumn("LeaderRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderRelation);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnHusbandName = new global::System.Data.DataColumn("HusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHusbandName);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnOutof = new global::System.Data.DataColumn("Outof", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutof);
                this.columnAcademicEducation = new global::System.Data.DataColumn("AcademicEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcademicEducation);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnFCardNo.AllowDBNull = false;
                this.columnFCardNo.MaxLength = 50;
                this.columnFamilyLeader.MaxLength = 100;
                this.columnNukh.MaxLength = 100;
                this.columnSign.MaxLength = 100;
                this.columnVillage.MaxLength = 100;
                this.columnMemberName.MaxLength = 100;
                this.columnLeaderRelation.MaxLength = 100;
                this.columnFatherName.MaxLength = 100;
                this.columnHusbandName.MaxLength = 100;
                this.columnDOB.MaxLength = 50;
                this.columnGender.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnOutof.MaxLength = 50;
                this.columnAcademicEducation.MaxLength = 100;
                this.columnWorkType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_rpt_MembersRow Newusp_rpt_MembersRow() {
                return ((usp_rpt_MembersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_rpt_MembersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_rpt_MembersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_rpt_MembersRowChanged != null)) {
                    this.usp_rpt_MembersRowChanged(this, new usp_rpt_MembersRowChangeEvent(((usp_rpt_MembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_rpt_MembersRowChanging != null)) {
                    this.usp_rpt_MembersRowChanging(this, new usp_rpt_MembersRowChangeEvent(((usp_rpt_MembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_rpt_MembersRowDeleted != null)) {
                    this.usp_rpt_MembersRowDeleted(this, new usp_rpt_MembersRowChangeEvent(((usp_rpt_MembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_rpt_MembersRowDeleting != null)) {
                    this.usp_rpt_MembersRowDeleting(this, new usp_rpt_MembersRowChangeEvent(((usp_rpt_MembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_rpt_MembersRow(usp_rpt_MembersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_rpt_MembersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblTransactionsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnVoucher;
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnDebit;
            
            private global::System.Data.DataColumn columnCredit;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnChequeNo;
            
            private global::System.Data.DataColumn columnReferenceNo;
            
            private global::System.Data.DataColumn columnAccountName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransactionsDataTable() {
                this.TableName = "tblTransactions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTransactionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblTransactionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherColumn {
                get {
                    return this.columnVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitColumn {
                get {
                    return this.columnDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeNoColumn {
                get {
                    return this.columnChequeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceNoColumn {
                get {
                    return this.columnReferenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransactionsRow this[int index] {
                get {
                    return ((tblTransactionsRow)(this.Rows[index]));
                }
            }
            
            public event tblTransactionsRowChangeEventHandler tblTransactionsRowChanging;
            
            public event tblTransactionsRowChangeEventHandler tblTransactionsRowChanged;
            
            public event tblTransactionsRowChangeEventHandler tblTransactionsRowDeleting;
            
            public event tblTransactionsRowChangeEventHandler tblTransactionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblTransactionsRow(tblTransactionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransactionsRow AddtblTransactionsRow(string Voucher, int DocumentNo, System.DateTime Dated, double Debit, double Credit, string Narration, string ChequeNo, string ReferenceNo, string AccountName) {
                tblTransactionsRow rowtblTransactionsRow = ((tblTransactionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Voucher,
                        DocumentNo,
                        Dated,
                        Debit,
                        Credit,
                        Narration,
                        ChequeNo,
                        ReferenceNo,
                        AccountName};
                rowtblTransactionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblTransactionsRow);
                return rowtblTransactionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransactionsRow FindByID(int ID) {
                return ((tblTransactionsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblTransactionsDataTable cln = ((tblTransactionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblTransactionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnVoucher = base.Columns["Voucher"];
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnDated = base.Columns["Dated"];
                this.columnDebit = base.Columns["Debit"];
                this.columnCredit = base.Columns["Credit"];
                this.columnNarration = base.Columns["Narration"];
                this.columnChequeNo = base.Columns["ChequeNo"];
                this.columnReferenceNo = base.Columns["ReferenceNo"];
                this.columnAccountName = base.Columns["AccountName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnVoucher = new global::System.Data.DataColumn("Voucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher);
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnDebit = new global::System.Data.DataColumn("Debit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnChequeNo = new global::System.Data.DataColumn("ChequeNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeNo);
                this.columnReferenceNo = new global::System.Data.DataColumn("ReferenceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNo);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnVoucher.MaxLength = 255;
                this.columnNarration.MaxLength = 255;
                this.columnChequeNo.MaxLength = 255;
                this.columnReferenceNo.MaxLength = 255;
                this.columnAccountName.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransactionsRow NewtblTransactionsRow() {
                return ((tblTransactionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblTransactionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblTransactionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblTransactionsRowChanged != null)) {
                    this.tblTransactionsRowChanged(this, new tblTransactionsRowChangeEvent(((tblTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblTransactionsRowChanging != null)) {
                    this.tblTransactionsRowChanging(this, new tblTransactionsRowChangeEvent(((tblTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblTransactionsRowDeleted != null)) {
                    this.tblTransactionsRowDeleted(this, new tblTransactionsRowChangeEvent(((tblTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblTransactionsRowDeleting != null)) {
                    this.tblTransactionsRowDeleting(this, new tblTransactionsRowChangeEvent(((tblTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblTransactionsRow(tblTransactionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblTransactionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblVouchersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnVoucher;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVouchersDataTable() {
                this.TableName = "tblVouchers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVouchersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblVouchersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherColumn {
                get {
                    return this.columnVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVouchersRow this[int index] {
                get {
                    return ((tblVouchersRow)(this.Rows[index]));
                }
            }
            
            public event tblVouchersRowChangeEventHandler tblVouchersRowChanging;
            
            public event tblVouchersRowChangeEventHandler tblVouchersRowChanged;
            
            public event tblVouchersRowChangeEventHandler tblVouchersRowDeleting;
            
            public event tblVouchersRowChangeEventHandler tblVouchersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblVouchersRow(tblVouchersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVouchersRow AddtblVouchersRow(string Voucher, string Description, System.DateTime DateCreated) {
                tblVouchersRow rowtblVouchersRow = ((tblVouchersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Voucher,
                        Description,
                        DateCreated};
                rowtblVouchersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblVouchersRow);
                return rowtblVouchersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVouchersRow FindByID(int ID) {
                return ((tblVouchersRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblVouchersDataTable cln = ((tblVouchersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblVouchersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnVoucher = base.Columns["Voucher"];
                this.columnDescription = base.Columns["Description"];
                this.columnDateCreated = base.Columns["DateCreated"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnVoucher = new global::System.Data.DataColumn("Voucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnVoucher.MaxLength = 255;
                this.columnDescription.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVouchersRow NewtblVouchersRow() {
                return ((tblVouchersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblVouchersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblVouchersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblVouchersRowChanged != null)) {
                    this.tblVouchersRowChanged(this, new tblVouchersRowChangeEvent(((tblVouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblVouchersRowChanging != null)) {
                    this.tblVouchersRowChanging(this, new tblVouchersRowChangeEvent(((tblVouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblVouchersRowDeleted != null)) {
                    this.tblVouchersRowDeleted(this, new tblVouchersRowChangeEvent(((tblVouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblVouchersRowDeleting != null)) {
                    this.tblVouchersRowDeleting(this, new tblVouchersRowChangeEvent(((tblVouchersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblVouchersRow(tblVouchersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblVouchersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblLedgerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAccountCode;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnVoucher;
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnDebit;
            
            private global::System.Data.DataColumn columnCredit;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnChequeNo;
            
            private global::System.Data.DataColumn columnReferenceNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLedgerDataTable() {
                this.TableName = "tblLedger";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblLedgerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblLedgerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherColumn {
                get {
                    return this.columnVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitColumn {
                get {
                    return this.columnDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeNoColumn {
                get {
                    return this.columnChequeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceNoColumn {
                get {
                    return this.columnReferenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLedgerRow this[int index] {
                get {
                    return ((tblLedgerRow)(this.Rows[index]));
                }
            }
            
            public event tblLedgerRowChangeEventHandler tblLedgerRowChanging;
            
            public event tblLedgerRowChangeEventHandler tblLedgerRowChanged;
            
            public event tblLedgerRowChangeEventHandler tblLedgerRowDeleting;
            
            public event tblLedgerRowChangeEventHandler tblLedgerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblLedgerRow(tblLedgerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLedgerRow AddtblLedgerRow(int AccountCode, string AccountName, string Voucher, int DocumentNo, double Debit, double Credit, System.DateTime Dated, double Balance, string Narration, string ChequeNo, string ReferenceNo) {
                tblLedgerRow rowtblLedgerRow = ((tblLedgerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountCode,
                        AccountName,
                        Voucher,
                        DocumentNo,
                        Debit,
                        Credit,
                        Dated,
                        Balance,
                        Narration,
                        ChequeNo,
                        ReferenceNo};
                rowtblLedgerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblLedgerRow);
                return rowtblLedgerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblLedgerDataTable cln = ((tblLedgerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblLedgerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnVoucher = base.Columns["Voucher"];
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnDebit = base.Columns["Debit"];
                this.columnCredit = base.Columns["Credit"];
                this.columnDated = base.Columns["Dated"];
                this.columnBalance = base.Columns["Balance"];
                this.columnNarration = base.Columns["Narration"];
                this.columnChequeNo = base.Columns["ChequeNo"];
                this.columnReferenceNo = base.Columns["ReferenceNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAccountCode = new global::System.Data.DataColumn("AccountCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnVoucher = new global::System.Data.DataColumn("Voucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher);
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnDebit = new global::System.Data.DataColumn("Debit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnChequeNo = new global::System.Data.DataColumn("ChequeNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeNo);
                this.columnReferenceNo = new global::System.Data.DataColumn("ReferenceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNo);
                this.columnAccountName.MaxLength = 255;
                this.columnVoucher.MaxLength = 255;
                this.columnBalance.ReadOnly = true;
                this.columnNarration.MaxLength = 255;
                this.columnChequeNo.MaxLength = 255;
                this.columnReferenceNo.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLedgerRow NewtblLedgerRow() {
                return ((tblLedgerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblLedgerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblLedgerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblLedgerRowChanged != null)) {
                    this.tblLedgerRowChanged(this, new tblLedgerRowChangeEvent(((tblLedgerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblLedgerRowChanging != null)) {
                    this.tblLedgerRowChanging(this, new tblLedgerRowChangeEvent(((tblLedgerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblLedgerRowDeleted != null)) {
                    this.tblLedgerRowDeleted(this, new tblLedgerRowChangeEvent(((tblLedgerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblLedgerRowDeleting != null)) {
                    this.tblLedgerRowDeleting(this, new tblLedgerRowChangeEvent(((tblLedgerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblLedgerRow(tblLedgerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblLedgerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_HallBooking_Search_DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnMr;
            
            private global::System.Data.DataColumn columnEvent;
            
            private global::System.Data.DataColumn columnHall1;
            
            private global::System.Data.DataColumn columnHall2;
            
            private global::System.Data.DataColumn columnHall3;
            
            private global::System.Data.DataColumn columnHall4;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnDay;
            
            private global::System.Data.DataColumn columnFromTime;
            
            private global::System.Data.DataColumn columnToTime;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_Search_DataTable() {
                this.TableName = "usp_HallBooking_Search_";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_HallBooking_Search_DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_HallBooking_Search_DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MrColumn {
                get {
                    return this.columnMr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventColumn {
                get {
                    return this.columnEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall1Column {
                get {
                    return this.columnHall1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall2Column {
                get {
                    return this.columnHall2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall3Column {
                get {
                    return this.columnHall3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall4Column {
                get {
                    return this.columnHall4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayColumn {
                get {
                    return this.columnDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_Search_Row this[int index] {
                get {
                    return ((usp_HallBooking_Search_Row)(this.Rows[index]));
                }
            }
            
            public event usp_HallBooking_Search_RowChangeEventHandler usp_HallBooking_Search_RowChanging;
            
            public event usp_HallBooking_Search_RowChangeEventHandler usp_HallBooking_Search_RowChanged;
            
            public event usp_HallBooking_Search_RowChangeEventHandler usp_HallBooking_Search_RowDeleting;
            
            public event usp_HallBooking_Search_RowChangeEventHandler usp_HallBooking_Search_RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_HallBooking_Search_Row(usp_HallBooking_Search_Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_Search_Row Addusp_HallBooking_Search_Row(
                        int SerialNo, 
                        System.DateTime Date, 
                        string Mr, 
                        string Event, 
                        bool Hall1, 
                        bool Hall2, 
                        bool Hall3, 
                        bool Hall4, 
                        System.DateTime Dated, 
                        string Day, 
                        string FromTime, 
                        string ToTime, 
                        string Remarks, 
                        string FName, 
                        string Orakh, 
                        string Amount) {
                usp_HallBooking_Search_Row rowusp_HallBooking_Search_Row = ((usp_HallBooking_Search_Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SerialNo,
                        Date,
                        Mr,
                        Event,
                        Hall1,
                        Hall2,
                        Hall3,
                        Hall4,
                        Dated,
                        Day,
                        FromTime,
                        ToTime,
                        Remarks,
                        FName,
                        Orakh,
                        Amount};
                rowusp_HallBooking_Search_Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_HallBooking_Search_Row);
                return rowusp_HallBooking_Search_Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_HallBooking_Search_DataTable cln = ((usp_HallBooking_Search_DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_HallBooking_Search_DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnDate = base.Columns["Date"];
                this.columnMr = base.Columns["Mr"];
                this.columnEvent = base.Columns["Event"];
                this.columnHall1 = base.Columns["Hall1"];
                this.columnHall2 = base.Columns["Hall2"];
                this.columnHall3 = base.Columns["Hall3"];
                this.columnHall4 = base.Columns["Hall4"];
                this.columnDated = base.Columns["Dated"];
                this.columnDay = base.Columns["Day"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToTime = base.Columns["ToTime"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnFName = base.Columns["FName"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnMr = new global::System.Data.DataColumn("Mr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMr);
                this.columnEvent = new global::System.Data.DataColumn("Event", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvent);
                this.columnHall1 = new global::System.Data.DataColumn("Hall1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall1);
                this.columnHall2 = new global::System.Data.DataColumn("Hall2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall2);
                this.columnHall3 = new global::System.Data.DataColumn("Hall3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall3);
                this.columnHall4 = new global::System.Data.DataColumn("Hall4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall4);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnDay = new global::System.Data.DataColumn("Day", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay);
                this.columnFromTime = new global::System.Data.DataColumn("FromTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnMr.MaxLength = 100;
                this.columnEvent.MaxLength = 100;
                this.columnDay.MaxLength = 50;
                this.columnFromTime.MaxLength = 50;
                this.columnToTime.MaxLength = 50;
                this.columnRemarks.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_Search_Row Newusp_HallBooking_Search_Row() {
                return ((usp_HallBooking_Search_Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_HallBooking_Search_Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_HallBooking_Search_Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_HallBooking_Search_RowChanged != null)) {
                    this.usp_HallBooking_Search_RowChanged(this, new usp_HallBooking_Search_RowChangeEvent(((usp_HallBooking_Search_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_HallBooking_Search_RowChanging != null)) {
                    this.usp_HallBooking_Search_RowChanging(this, new usp_HallBooking_Search_RowChangeEvent(((usp_HallBooking_Search_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_HallBooking_Search_RowDeleted != null)) {
                    this.usp_HallBooking_Search_RowDeleted(this, new usp_HallBooking_Search_RowChangeEvent(((usp_HallBooking_Search_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_HallBooking_Search_RowDeleting != null)) {
                    this.usp_HallBooking_Search_RowDeleting(this, new usp_HallBooking_Search_RowChangeEvent(((usp_HallBooking_Search_Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_HallBooking_Search_Row(usp_HallBooking_Search_Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_HallBooking_Search_DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_BirthDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRegNo;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnMName;
            
            private global::System.Data.DataColumn columnGFName;
            
            private global::System.Data.DataColumn columnNukh;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnRelation;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnBirthPlace;
            
            private global::System.Data.DataColumn columnRAddress;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnNadraRegNo;
            
            private global::System.Data.DataColumn columnBirthTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_BirthDataTable() {
                this.TableName = "usp_SEL_Birth";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_BirthDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_BirthDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegNoColumn {
                get {
                    return this.columnRegNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNameColumn {
                get {
                    return this.columnMName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFNameColumn {
                get {
                    return this.columnGFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhColumn {
                get {
                    return this.columnNukh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationColumn {
                get {
                    return this.columnRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthPlaceColumn {
                get {
                    return this.columnBirthPlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAddressColumn {
                get {
                    return this.columnRAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NadraRegNoColumn {
                get {
                    return this.columnNadraRegNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthTimeColumn {
                get {
                    return this.columnBirthTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_BirthRow this[int index] {
                get {
                    return ((usp_SEL_BirthRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_BirthRowChangeEventHandler usp_SEL_BirthRowChanging;
            
            public event usp_SEL_BirthRowChangeEventHandler usp_SEL_BirthRowChanged;
            
            public event usp_SEL_BirthRowChangeEventHandler usp_SEL_BirthRowDeleting;
            
            public event usp_SEL_BirthRowChangeEventHandler usp_SEL_BirthRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_BirthRow(usp_SEL_BirthRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_BirthRow Addusp_SEL_BirthRow(
                        string RegNo, 
                        string FCardNo, 
                        string Name, 
                        string FName, 
                        string MName, 
                        string GFName, 
                        string Nukh, 
                        string Orakh, 
                        string Gender, 
                        System.DateTime DOB, 
                        string Relation, 
                        string AgeGroup, 
                        string BirthPlace, 
                        string RAddress, 
                        System.DateTime EntryDate, 
                        string NadraRegNo, 
                        System.DateTime BirthTime) {
                usp_SEL_BirthRow rowusp_SEL_BirthRow = ((usp_SEL_BirthRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RegNo,
                        FCardNo,
                        Name,
                        FName,
                        MName,
                        GFName,
                        Nukh,
                        Orakh,
                        Gender,
                        DOB,
                        Relation,
                        AgeGroup,
                        BirthPlace,
                        RAddress,
                        EntryDate,
                        NadraRegNo,
                        BirthTime};
                rowusp_SEL_BirthRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_BirthRow);
                return rowusp_SEL_BirthRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_BirthRow FindByID(int ID) {
                return ((usp_SEL_BirthRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_BirthDataTable cln = ((usp_SEL_BirthDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_BirthDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRegNo = base.Columns["RegNo"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnName = base.Columns["Name"];
                this.columnFName = base.Columns["FName"];
                this.columnMName = base.Columns["MName"];
                this.columnGFName = base.Columns["GFName"];
                this.columnNukh = base.Columns["Nukh"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnGender = base.Columns["Gender"];
                this.columnDOB = base.Columns["DOB"];
                this.columnRelation = base.Columns["Relation"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnBirthPlace = base.Columns["BirthPlace"];
                this.columnRAddress = base.Columns["RAddress"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnNadraRegNo = base.Columns["NadraRegNo"];
                this.columnBirthTime = base.Columns["BirthTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRegNo = new global::System.Data.DataColumn("RegNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegNo);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnMName = new global::System.Data.DataColumn("MName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMName);
                this.columnGFName = new global::System.Data.DataColumn("GFName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFName);
                this.columnNukh = new global::System.Data.DataColumn("Nukh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukh);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnRelation = new global::System.Data.DataColumn("Relation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelation);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnBirthPlace = new global::System.Data.DataColumn("BirthPlace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthPlace);
                this.columnRAddress = new global::System.Data.DataColumn("RAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAddress);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnNadraRegNo = new global::System.Data.DataColumn("NadraRegNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNadraRegNo);
                this.columnBirthTime = new global::System.Data.DataColumn("BirthTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnRegNo.MaxLength = 50;
                this.columnFCardNo.MaxLength = 50;
                this.columnName.MaxLength = 50;
                this.columnFName.MaxLength = 50;
                this.columnMName.MaxLength = 50;
                this.columnGFName.MaxLength = 50;
                this.columnNukh.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnGender.MaxLength = 50;
                this.columnRelation.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnBirthPlace.MaxLength = 50;
                this.columnRAddress.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_BirthRow Newusp_SEL_BirthRow() {
                return ((usp_SEL_BirthRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_BirthRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_BirthRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_BirthRowChanged != null)) {
                    this.usp_SEL_BirthRowChanged(this, new usp_SEL_BirthRowChangeEvent(((usp_SEL_BirthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_BirthRowChanging != null)) {
                    this.usp_SEL_BirthRowChanging(this, new usp_SEL_BirthRowChangeEvent(((usp_SEL_BirthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_BirthRowDeleted != null)) {
                    this.usp_SEL_BirthRowDeleted(this, new usp_SEL_BirthRowChangeEvent(((usp_SEL_BirthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_BirthRowDeleting != null)) {
                    this.usp_SEL_BirthRowDeleting(this, new usp_SEL_BirthRowChangeEvent(((usp_SEL_BirthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_BirthRow(usp_SEL_BirthRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_BirthDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_DeathDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnRegNo;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnGFName;
            
            private global::System.Data.DataColumn columnNukh;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDeathDate;
            
            private global::System.Data.DataColumn columnRelation;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnRAddress;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnPlace;
            
            private global::System.Data.DataColumn columnDeathTime;
            
            private global::System.Data.DataColumn columnIsPrinted;
            
            private global::System.Data.DataColumn columnAppName;
            
            private global::System.Data.DataColumn columnAppCNIC;
            
            private global::System.Data.DataColumn columnAppRelation;
            
            private global::System.Data.DataColumn columnDRCNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DeathDataTable() {
                this.TableName = "usp_SEL_Death";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_DeathDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_DeathDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegNoColumn {
                get {
                    return this.columnRegNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFNameColumn {
                get {
                    return this.columnGFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhColumn {
                get {
                    return this.columnNukh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathDateColumn {
                get {
                    return this.columnDeathDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationColumn {
                get {
                    return this.columnRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAddressColumn {
                get {
                    return this.columnRAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceColumn {
                get {
                    return this.columnPlace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathTimeColumn {
                get {
                    return this.columnDeathTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPrintedColumn {
                get {
                    return this.columnIsPrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppNameColumn {
                get {
                    return this.columnAppName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppCNICColumn {
                get {
                    return this.columnAppCNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppRelationColumn {
                get {
                    return this.columnAppRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRCNumberColumn {
                get {
                    return this.columnDRCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DeathRow this[int index] {
                get {
                    return ((usp_SEL_DeathRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_DeathRowChangeEventHandler usp_SEL_DeathRowChanging;
            
            public event usp_SEL_DeathRowChangeEventHandler usp_SEL_DeathRowChanged;
            
            public event usp_SEL_DeathRowChangeEventHandler usp_SEL_DeathRowDeleting;
            
            public event usp_SEL_DeathRowChangeEventHandler usp_SEL_DeathRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_DeathRow(usp_SEL_DeathRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DeathRow Addusp_SEL_DeathRow(
                        string RegNo, 
                        string FCardNo, 
                        string Name, 
                        string FName, 
                        string GFName, 
                        string Nukh, 
                        string Orakh, 
                        string Gender, 
                        System.DateTime DeathDate, 
                        string Relation, 
                        string AgeGroup, 
                        string Reason, 
                        string RAddress, 
                        System.DateTime EntryDate, 
                        string Age, 
                        string Place, 
                        System.DateTime DeathTime, 
                        bool IsPrinted, 
                        string AppName, 
                        string AppCNIC, 
                        string AppRelation, 
                        string DRCNumber) {
                usp_SEL_DeathRow rowusp_SEL_DeathRow = ((usp_SEL_DeathRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RegNo,
                        FCardNo,
                        Name,
                        FName,
                        GFName,
                        Nukh,
                        Orakh,
                        Gender,
                        DeathDate,
                        Relation,
                        AgeGroup,
                        Reason,
                        RAddress,
                        EntryDate,
                        Age,
                        Place,
                        DeathTime,
                        IsPrinted,
                        AppName,
                        AppCNIC,
                        AppRelation,
                        DRCNumber};
                rowusp_SEL_DeathRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_DeathRow);
                return rowusp_SEL_DeathRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DeathRow FindByID(int ID) {
                return ((usp_SEL_DeathRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_DeathDataTable cln = ((usp_SEL_DeathDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_DeathDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnRegNo = base.Columns["RegNo"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnName = base.Columns["Name"];
                this.columnFName = base.Columns["FName"];
                this.columnGFName = base.Columns["GFName"];
                this.columnNukh = base.Columns["Nukh"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnGender = base.Columns["Gender"];
                this.columnDeathDate = base.Columns["DeathDate"];
                this.columnRelation = base.Columns["Relation"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnReason = base.Columns["Reason"];
                this.columnRAddress = base.Columns["RAddress"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnAge = base.Columns["Age"];
                this.columnPlace = base.Columns["Place"];
                this.columnDeathTime = base.Columns["DeathTime"];
                this.columnIsPrinted = base.Columns["IsPrinted"];
                this.columnAppName = base.Columns["AppName"];
                this.columnAppCNIC = base.Columns["AppCNIC"];
                this.columnAppRelation = base.Columns["AppRelation"];
                this.columnDRCNumber = base.Columns["DRCNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnRegNo = new global::System.Data.DataColumn("RegNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegNo);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnGFName = new global::System.Data.DataColumn("GFName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFName);
                this.columnNukh = new global::System.Data.DataColumn("Nukh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukh);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDeathDate = new global::System.Data.DataColumn("DeathDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathDate);
                this.columnRelation = new global::System.Data.DataColumn("Relation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelation);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnRAddress = new global::System.Data.DataColumn("RAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAddress);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnPlace = new global::System.Data.DataColumn("Place", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlace);
                this.columnDeathTime = new global::System.Data.DataColumn("DeathTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathTime);
                this.columnIsPrinted = new global::System.Data.DataColumn("IsPrinted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrinted);
                this.columnAppName = new global::System.Data.DataColumn("AppName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppName);
                this.columnAppCNIC = new global::System.Data.DataColumn("AppCNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppCNIC);
                this.columnAppRelation = new global::System.Data.DataColumn("AppRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppRelation);
                this.columnDRCNumber = new global::System.Data.DataColumn("DRCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRCNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnRegNo.MaxLength = 50;
                this.columnFCardNo.MaxLength = 50;
                this.columnName.MaxLength = 50;
                this.columnFName.MaxLength = 50;
                this.columnGFName.MaxLength = 50;
                this.columnNukh.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnGender.MaxLength = 50;
                this.columnRelation.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnReason.MaxLength = 100;
                this.columnRAddress.MaxLength = 150;
                this.columnAge.MaxLength = 3;
                this.columnPlace.MaxLength = 50;
                this.columnAppName.MaxLength = 50;
                this.columnAppCNIC.MaxLength = 50;
                this.columnAppRelation.MaxLength = 50;
                this.columnDRCNumber.MaxLength = 16;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DeathRow Newusp_SEL_DeathRow() {
                return ((usp_SEL_DeathRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_DeathRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_DeathRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_DeathRowChanged != null)) {
                    this.usp_SEL_DeathRowChanged(this, new usp_SEL_DeathRowChangeEvent(((usp_SEL_DeathRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_DeathRowChanging != null)) {
                    this.usp_SEL_DeathRowChanging(this, new usp_SEL_DeathRowChangeEvent(((usp_SEL_DeathRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_DeathRowDeleted != null)) {
                    this.usp_SEL_DeathRowDeleted(this, new usp_SEL_DeathRowChangeEvent(((usp_SEL_DeathRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_DeathRowDeleting != null)) {
                    this.usp_SEL_DeathRowDeleting(this, new usp_SEL_DeathRowChangeEvent(((usp_SEL_DeathRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_DeathRow(usp_SEL_DeathRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_DeathDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_RenewalDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnRenewalYear;
            
            private global::System.Data.DataColumn columnFee;
            
            private global::System.Data.DataColumn columnPoorFund;
            
            private global::System.Data.DataColumn columnLateFee;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnLink_Account;
            
            private global::System.Data.DataColumn columnCardFee;
            
            private global::System.Data.DataColumn columnAdultMembers;
            
            private global::System.Data.DataColumn columnTotalMembers;
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnPoorAcc;
            
            private global::System.Data.DataColumn columnRenewalTo;
            
            private global::System.Data.DataColumn columnEducationFund;
            
            private global::System.Data.DataColumn columnKabristanFund;
            
            private global::System.Data.DataColumn columnZakatFund;
            
            private global::System.Data.DataColumn columnDonationFund;
            
            private global::System.Data.DataColumn columnTamiratiFund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_RenewalDataTable() {
                this.TableName = "usp_SEL_Renewal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_RenewalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_RenewalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenewalYearColumn {
                get {
                    return this.columnRenewalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeeColumn {
                get {
                    return this.columnFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoorFundColumn {
                get {
                    return this.columnPoorFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateFeeColumn {
                get {
                    return this.columnLateFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Link_AccountColumn {
                get {
                    return this.columnLink_Account;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardFeeColumn {
                get {
                    return this.columnCardFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdultMembersColumn {
                get {
                    return this.columnAdultMembers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalMembersColumn {
                get {
                    return this.columnTotalMembers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoorAccColumn {
                get {
                    return this.columnPoorAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RenewalToColumn {
                get {
                    return this.columnRenewalTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducationFundColumn {
                get {
                    return this.columnEducationFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KabristanFundColumn {
                get {
                    return this.columnKabristanFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZakatFundColumn {
                get {
                    return this.columnZakatFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DonationFundColumn {
                get {
                    return this.columnDonationFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TamiratiFundColumn {
                get {
                    return this.columnTamiratiFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_RenewalRow this[int index] {
                get {
                    return ((usp_SEL_RenewalRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_RenewalRowChangeEventHandler usp_SEL_RenewalRowChanging;
            
            public event usp_SEL_RenewalRowChangeEventHandler usp_SEL_RenewalRowChanged;
            
            public event usp_SEL_RenewalRowChangeEventHandler usp_SEL_RenewalRowDeleting;
            
            public event usp_SEL_RenewalRowChangeEventHandler usp_SEL_RenewalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_RenewalRow(usp_SEL_RenewalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_RenewalRow Addusp_SEL_RenewalRow(
                        string FCardNo, 
                        System.DateTime Date, 
                        string RenewalYear, 
                        decimal Fee, 
                        decimal PoorFund, 
                        decimal LateFee, 
                        decimal Total, 
                        bool Link_Account, 
                        decimal CardFee, 
                        string AdultMembers, 
                        string TotalMembers, 
                        string ReceiptNo, 
                        string AccountName, 
                        string PoorAcc, 
                        string RenewalTo, 
                        decimal EducationFund, 
                        decimal KabristanFund, 
                        decimal ZakatFund, 
                        decimal DonationFund, 
                        decimal TamiratiFund) {
                usp_SEL_RenewalRow rowusp_SEL_RenewalRow = ((usp_SEL_RenewalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FCardNo,
                        Date,
                        RenewalYear,
                        Fee,
                        PoorFund,
                        LateFee,
                        Total,
                        Link_Account,
                        CardFee,
                        AdultMembers,
                        TotalMembers,
                        ReceiptNo,
                        AccountName,
                        PoorAcc,
                        RenewalTo,
                        EducationFund,
                        KabristanFund,
                        ZakatFund,
                        DonationFund,
                        TamiratiFund};
                rowusp_SEL_RenewalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_RenewalRow);
                return rowusp_SEL_RenewalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_RenewalRow FindByID(int ID) {
                return ((usp_SEL_RenewalRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_RenewalDataTable cln = ((usp_SEL_RenewalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_RenewalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnDate = base.Columns["Date"];
                this.columnRenewalYear = base.Columns["RenewalYear"];
                this.columnFee = base.Columns["Fee"];
                this.columnPoorFund = base.Columns["PoorFund"];
                this.columnLateFee = base.Columns["LateFee"];
                this.columnTotal = base.Columns["Total"];
                this.columnLink_Account = base.Columns["Link_Account"];
                this.columnCardFee = base.Columns["CardFee"];
                this.columnAdultMembers = base.Columns["AdultMembers"];
                this.columnTotalMembers = base.Columns["TotalMembers"];
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnPoorAcc = base.Columns["PoorAcc"];
                this.columnRenewalTo = base.Columns["RenewalTo"];
                this.columnEducationFund = base.Columns["EducationFund"];
                this.columnKabristanFund = base.Columns["KabristanFund"];
                this.columnZakatFund = base.Columns["ZakatFund"];
                this.columnDonationFund = base.Columns["DonationFund"];
                this.columnTamiratiFund = base.Columns["TamiratiFund"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnRenewalYear = new global::System.Data.DataColumn("RenewalYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenewalYear);
                this.columnFee = new global::System.Data.DataColumn("Fee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFee);
                this.columnPoorFund = new global::System.Data.DataColumn("PoorFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoorFund);
                this.columnLateFee = new global::System.Data.DataColumn("LateFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateFee);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnLink_Account = new global::System.Data.DataColumn("Link_Account", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLink_Account);
                this.columnCardFee = new global::System.Data.DataColumn("CardFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardFee);
                this.columnAdultMembers = new global::System.Data.DataColumn("AdultMembers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdultMembers);
                this.columnTotalMembers = new global::System.Data.DataColumn("TotalMembers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMembers);
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnPoorAcc = new global::System.Data.DataColumn("PoorAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoorAcc);
                this.columnRenewalTo = new global::System.Data.DataColumn("RenewalTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRenewalTo);
                this.columnEducationFund = new global::System.Data.DataColumn("EducationFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducationFund);
                this.columnKabristanFund = new global::System.Data.DataColumn("KabristanFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKabristanFund);
                this.columnZakatFund = new global::System.Data.DataColumn("ZakatFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZakatFund);
                this.columnDonationFund = new global::System.Data.DataColumn("DonationFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDonationFund);
                this.columnTamiratiFund = new global::System.Data.DataColumn("TamiratiFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTamiratiFund);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnFCardNo.MaxLength = 50;
                this.columnRenewalYear.MaxLength = 50;
                this.columnAdultMembers.MaxLength = 50;
                this.columnTotalMembers.MaxLength = 50;
                this.columnReceiptNo.MaxLength = 50;
                this.columnAccountName.MaxLength = 255;
                this.columnRenewalTo.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_RenewalRow Newusp_SEL_RenewalRow() {
                return ((usp_SEL_RenewalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_RenewalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_RenewalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_RenewalRowChanged != null)) {
                    this.usp_SEL_RenewalRowChanged(this, new usp_SEL_RenewalRowChangeEvent(((usp_SEL_RenewalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_RenewalRowChanging != null)) {
                    this.usp_SEL_RenewalRowChanging(this, new usp_SEL_RenewalRowChangeEvent(((usp_SEL_RenewalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_RenewalRowDeleted != null)) {
                    this.usp_SEL_RenewalRowDeleted(this, new usp_SEL_RenewalRowChangeEvent(((usp_SEL_RenewalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_RenewalRowDeleting != null)) {
                    this.usp_SEL_RenewalRowDeleting(this, new usp_SEL_RenewalRowChangeEvent(((usp_SEL_RenewalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_RenewalRow(usp_SEL_RenewalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_RenewalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblAccountsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnAccountCode;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPhone2;
            
            private global::System.Data.DataColumn columnPhone3;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnNTN;
            
            private global::System.Data.DataColumn columnSTN;
            
            private global::System.Data.DataColumn columnAccStatus;
            
            private global::System.Data.DataColumn columnIndexBook;
            
            private global::System.Data.DataColumn columnHeader;
            
            private global::System.Data.DataColumn columnHeaderType;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAccountsDataTable() {
                this.TableName = "tblAccounts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAccountsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblAccountsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone2Column {
                get {
                    return this.columnPhone2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone3Column {
                get {
                    return this.columnPhone3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTNColumn {
                get {
                    return this.columnNTN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STNColumn {
                get {
                    return this.columnSTN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccStatusColumn {
                get {
                    return this.columnAccStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexBookColumn {
                get {
                    return this.columnIndexBook;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderColumn {
                get {
                    return this.columnHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderTypeColumn {
                get {
                    return this.columnHeaderType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAccountsRow this[int index] {
                get {
                    return ((tblAccountsRow)(this.Rows[index]));
                }
            }
            
            public event tblAccountsRowChangeEventHandler tblAccountsRowChanging;
            
            public event tblAccountsRowChangeEventHandler tblAccountsRowChanged;
            
            public event tblAccountsRowChangeEventHandler tblAccountsRowDeleting;
            
            public event tblAccountsRowChangeEventHandler tblAccountsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblAccountsRow(tblAccountsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAccountsRow AddtblAccountsRow(
                        string AccountCode, 
                        string AccountName, 
                        string Phone1, 
                        string Phone2, 
                        string Phone3, 
                        string Mobile, 
                        string Fax, 
                        string Email, 
                        string Website, 
                        string City, 
                        string Address, 
                        string NTN, 
                        string STN, 
                        string AccStatus, 
                        string IndexBook, 
                        string Header, 
                        string HeaderType, 
                        string ContactPerson) {
                tblAccountsRow rowtblAccountsRow = ((tblAccountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AccountCode,
                        AccountName,
                        Phone1,
                        Phone2,
                        Phone3,
                        Mobile,
                        Fax,
                        Email,
                        Website,
                        City,
                        Address,
                        NTN,
                        STN,
                        AccStatus,
                        IndexBook,
                        Header,
                        HeaderType,
                        ContactPerson};
                rowtblAccountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblAccountsRow);
                return rowtblAccountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAccountsRow FindByID(int ID) {
                return ((tblAccountsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblAccountsDataTable cln = ((tblAccountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblAccountsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPhone2 = base.Columns["Phone2"];
                this.columnPhone3 = base.Columns["Phone3"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnFax = base.Columns["Fax"];
                this.columnEmail = base.Columns["Email"];
                this.columnWebsite = base.Columns["Website"];
                this.columnCity = base.Columns["City"];
                this.columnAddress = base.Columns["Address"];
                this.columnNTN = base.Columns["NTN"];
                this.columnSTN = base.Columns["STN"];
                this.columnAccStatus = base.Columns["AccStatus"];
                this.columnIndexBook = base.Columns["IndexBook"];
                this.columnHeader = base.Columns["Header"];
                this.columnHeaderType = base.Columns["HeaderType"];
                this.columnContactPerson = base.Columns["ContactPerson"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnAccountCode = new global::System.Data.DataColumn("AccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPhone2 = new global::System.Data.DataColumn("Phone2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone2);
                this.columnPhone3 = new global::System.Data.DataColumn("Phone3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone3);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnNTN = new global::System.Data.DataColumn("NTN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTN);
                this.columnSTN = new global::System.Data.DataColumn("STN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTN);
                this.columnAccStatus = new global::System.Data.DataColumn("AccStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccStatus);
                this.columnIndexBook = new global::System.Data.DataColumn("IndexBook", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexBook);
                this.columnHeader = new global::System.Data.DataColumn("Header", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeader);
                this.columnHeaderType = new global::System.Data.DataColumn("HeaderType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderType);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAccountCode.MaxLength = 255;
                this.columnAccountName.MaxLength = 255;
                this.columnPhone1.MaxLength = 12;
                this.columnPhone2.MaxLength = 12;
                this.columnPhone3.MaxLength = 12;
                this.columnMobile.MaxLength = 12;
                this.columnFax.MaxLength = 12;
                this.columnEmail.MaxLength = 255;
                this.columnWebsite.MaxLength = 255;
                this.columnCity.MaxLength = 255;
                this.columnAddress.MaxLength = 200;
                this.columnNTN.MaxLength = 14;
                this.columnSTN.MaxLength = 17;
                this.columnAccStatus.MaxLength = 50;
                this.columnIndexBook.MaxLength = 255;
                this.columnHeader.MaxLength = 50;
                this.columnHeaderType.MaxLength = 50;
                this.columnContactPerson.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAccountsRow NewtblAccountsRow() {
                return ((tblAccountsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblAccountsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblAccountsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblAccountsRowChanged != null)) {
                    this.tblAccountsRowChanged(this, new tblAccountsRowChangeEvent(((tblAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblAccountsRowChanging != null)) {
                    this.tblAccountsRowChanging(this, new tblAccountsRowChangeEvent(((tblAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblAccountsRowDeleted != null)) {
                    this.tblAccountsRowDeleted(this, new tblAccountsRowChangeEvent(((tblAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblAccountsRowDeleting != null)) {
                    this.tblAccountsRowDeleting(this, new tblAccountsRowChangeEvent(((tblAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblAccountsRow(tblAccountsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblAccountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_TSF_tblFamilyMemberDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFamilyMemberID;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnLeaderRelation;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnHusbandName;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnBloodGroup;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnCNIC;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnAcademicEducation;
            
            private global::System.Data.DataColumn columnTechnicalEducation;
            
            private global::System.Data.DataColumn columnProfessionalEducation;
            
            private global::System.Data.DataColumn columnBusinessName;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnBusinessAddress;
            
            private global::System.Data.DataColumn columnBusinessPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnBusinessFax;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnD_Incident;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnOutof;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnFamilyMemberID1;
            
            private global::System.Data.DataColumn columnFromFCard;
            
            private global::System.Data.DataColumn columnToFCard;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_TSF_tblFamilyMemberDataTable() {
                this.TableName = "usp_SEL_TSF_tblFamilyMember";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_TSF_tblFamilyMemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_TSF_tblFamilyMemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyMemberIDColumn {
                get {
                    return this.columnFamilyMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderRelationColumn {
                get {
                    return this.columnLeaderRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HusbandNameColumn {
                get {
                    return this.columnHusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodGroupColumn {
                get {
                    return this.columnBloodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNICColumn {
                get {
                    return this.columnCNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcademicEducationColumn {
                get {
                    return this.columnAcademicEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechnicalEducationColumn {
                get {
                    return this.columnTechnicalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfessionalEducationColumn {
                get {
                    return this.columnProfessionalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessNameColumn {
                get {
                    return this.columnBusinessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessAddressColumn {
                get {
                    return this.columnBusinessAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessPhoneColumn {
                get {
                    return this.columnBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessFaxColumn {
                get {
                    return this.columnBusinessFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D_IncidentColumn {
                get {
                    return this.columnD_Incident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutofColumn {
                get {
                    return this.columnOutof;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyMemberID1Column {
                get {
                    return this.columnFamilyMemberID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromFCardColumn {
                get {
                    return this.columnFromFCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToFCardColumn {
                get {
                    return this.columnToFCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_TSF_tblFamilyMemberRow this[int index] {
                get {
                    return ((usp_SEL_TSF_tblFamilyMemberRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_TSF_tblFamilyMemberRowChangeEventHandler usp_SEL_TSF_tblFamilyMemberRowChanging;
            
            public event usp_SEL_TSF_tblFamilyMemberRowChangeEventHandler usp_SEL_TSF_tblFamilyMemberRowChanged;
            
            public event usp_SEL_TSF_tblFamilyMemberRowChangeEventHandler usp_SEL_TSF_tblFamilyMemberRowDeleting;
            
            public event usp_SEL_TSF_tblFamilyMemberRowChangeEventHandler usp_SEL_TSF_tblFamilyMemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_TSF_tblFamilyMemberRow(usp_SEL_TSF_tblFamilyMemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_TSF_tblFamilyMemberRow Addusp_SEL_TSF_tblFamilyMemberRow(
                        string FCardNo, 
                        string MemberName, 
                        string LeaderRelation, 
                        string FatherName, 
                        string HusbandName, 
                        string DOB, 
                        string BloodGroup, 
                        string Mobile, 
                        string CNIC, 
                        string NIC, 
                        string AcademicEducation, 
                        string TechnicalEducation, 
                        string ProfessionalEducation, 
                        string BusinessName, 
                        string WorkType, 
                        string Designation, 
                        string BusinessAddress, 
                        string BusinessPhone, 
                        string Email, 
                        string Website, 
                        string BusinessFax, 
                        string Gender, 
                        string AgeGroup, 
                        bool Active, 
                        string Reason, 
                        System.DateTime D_Incident, 
                        string MaritalStatus, 
                        string Outof, 
                        System.DateTime EntryDate, 
                        string FromFCard, 
                        string ToFCard) {
                usp_SEL_TSF_tblFamilyMemberRow rowusp_SEL_TSF_tblFamilyMemberRow = ((usp_SEL_TSF_tblFamilyMemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FCardNo,
                        MemberName,
                        LeaderRelation,
                        FatherName,
                        HusbandName,
                        DOB,
                        BloodGroup,
                        Mobile,
                        CNIC,
                        NIC,
                        AcademicEducation,
                        TechnicalEducation,
                        ProfessionalEducation,
                        BusinessName,
                        WorkType,
                        Designation,
                        BusinessAddress,
                        BusinessPhone,
                        Email,
                        Website,
                        BusinessFax,
                        Gender,
                        AgeGroup,
                        Active,
                        Reason,
                        D_Incident,
                        MaritalStatus,
                        Outof,
                        EntryDate,
                        null,
                        FromFCard,
                        ToFCard};
                rowusp_SEL_TSF_tblFamilyMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_TSF_tblFamilyMemberRow);
                return rowusp_SEL_TSF_tblFamilyMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_TSF_tblFamilyMemberRow FindByFamilyMemberID(int FamilyMemberID) {
                return ((usp_SEL_TSF_tblFamilyMemberRow)(this.Rows.Find(new object[] {
                            FamilyMemberID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_TSF_tblFamilyMemberDataTable cln = ((usp_SEL_TSF_tblFamilyMemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_TSF_tblFamilyMemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFamilyMemberID = base.Columns["FamilyMemberID"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnLeaderRelation = base.Columns["LeaderRelation"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnHusbandName = base.Columns["HusbandName"];
                this.columnDOB = base.Columns["DOB"];
                this.columnBloodGroup = base.Columns["BloodGroup"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnCNIC = base.Columns["CNIC"];
                this.columnNIC = base.Columns["NIC"];
                this.columnAcademicEducation = base.Columns["AcademicEducation"];
                this.columnTechnicalEducation = base.Columns["TechnicalEducation"];
                this.columnProfessionalEducation = base.Columns["ProfessionalEducation"];
                this.columnBusinessName = base.Columns["BusinessName"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnBusinessAddress = base.Columns["BusinessAddress"];
                this.columnBusinessPhone = base.Columns["BusinessPhone"];
                this.columnEmail = base.Columns["Email"];
                this.columnWebsite = base.Columns["Website"];
                this.columnBusinessFax = base.Columns["BusinessFax"];
                this.columnGender = base.Columns["Gender"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnActive = base.Columns["Active"];
                this.columnReason = base.Columns["Reason"];
                this.columnD_Incident = base.Columns["D_Incident"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnOutof = base.Columns["Outof"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnFamilyMemberID1 = base.Columns["FamilyMemberID1"];
                this.columnFromFCard = base.Columns["FromFCard"];
                this.columnToFCard = base.Columns["ToFCard"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFamilyMemberID = new global::System.Data.DataColumn("FamilyMemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyMemberID);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnLeaderRelation = new global::System.Data.DataColumn("LeaderRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderRelation);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnHusbandName = new global::System.Data.DataColumn("HusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHusbandName);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnBloodGroup = new global::System.Data.DataColumn("BloodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodGroup);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnCNIC = new global::System.Data.DataColumn("CNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNIC);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnAcademicEducation = new global::System.Data.DataColumn("AcademicEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcademicEducation);
                this.columnTechnicalEducation = new global::System.Data.DataColumn("TechnicalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalEducation);
                this.columnProfessionalEducation = new global::System.Data.DataColumn("ProfessionalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfessionalEducation);
                this.columnBusinessName = new global::System.Data.DataColumn("BusinessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessName);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnBusinessAddress = new global::System.Data.DataColumn("BusinessAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessAddress);
                this.columnBusinessPhone = new global::System.Data.DataColumn("BusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnBusinessFax = new global::System.Data.DataColumn("BusinessFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessFax);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnD_Incident = new global::System.Data.DataColumn("D_Incident", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_Incident);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnOutof = new global::System.Data.DataColumn("Outof", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutof);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnFamilyMemberID1 = new global::System.Data.DataColumn("FamilyMemberID1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyMemberID1);
                this.columnFromFCard = new global::System.Data.DataColumn("FromFCard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromFCard);
                this.columnToFCard = new global::System.Data.DataColumn("ToFCard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToFCard);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFamilyMemberID}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnFamilyMemberID1}, false));
                this.columnFamilyMemberID.AutoIncrement = true;
                this.columnFamilyMemberID.AllowDBNull = false;
                this.columnFamilyMemberID.ReadOnly = true;
                this.columnFamilyMemberID.Unique = true;
                this.columnFCardNo.MaxLength = 50;
                this.columnMemberName.MaxLength = 100;
                this.columnLeaderRelation.MaxLength = 100;
                this.columnFatherName.MaxLength = 100;
                this.columnHusbandName.MaxLength = 100;
                this.columnDOB.MaxLength = 50;
                this.columnBloodGroup.MaxLength = 50;
                this.columnMobile.MaxLength = 50;
                this.columnCNIC.MaxLength = 100;
                this.columnNIC.MaxLength = 100;
                this.columnAcademicEducation.MaxLength = 100;
                this.columnTechnicalEducation.MaxLength = 100;
                this.columnProfessionalEducation.MaxLength = 100;
                this.columnBusinessName.MaxLength = 50;
                this.columnWorkType.MaxLength = 50;
                this.columnDesignation.MaxLength = 50;
                this.columnBusinessAddress.MaxLength = 200;
                this.columnBusinessPhone.MaxLength = 50;
                this.columnEmail.MaxLength = 100;
                this.columnWebsite.MaxLength = 100;
                this.columnBusinessFax.MaxLength = 50;
                this.columnGender.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnReason.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnOutof.MaxLength = 50;
                this.columnFamilyMemberID1.AutoIncrement = true;
                this.columnFamilyMemberID1.AllowDBNull = false;
                this.columnFamilyMemberID1.ReadOnly = true;
                this.columnFamilyMemberID1.Unique = true;
                this.columnFamilyMemberID1.Caption = "FamilyMemberID";
                this.columnFromFCard.MaxLength = 50;
                this.columnToFCard.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_TSF_tblFamilyMemberRow Newusp_SEL_TSF_tblFamilyMemberRow() {
                return ((usp_SEL_TSF_tblFamilyMemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_TSF_tblFamilyMemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_TSF_tblFamilyMemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_TSF_tblFamilyMemberRowChanged != null)) {
                    this.usp_SEL_TSF_tblFamilyMemberRowChanged(this, new usp_SEL_TSF_tblFamilyMemberRowChangeEvent(((usp_SEL_TSF_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_TSF_tblFamilyMemberRowChanging != null)) {
                    this.usp_SEL_TSF_tblFamilyMemberRowChanging(this, new usp_SEL_TSF_tblFamilyMemberRowChangeEvent(((usp_SEL_TSF_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_TSF_tblFamilyMemberRowDeleted != null)) {
                    this.usp_SEL_TSF_tblFamilyMemberRowDeleted(this, new usp_SEL_TSF_tblFamilyMemberRowChangeEvent(((usp_SEL_TSF_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_TSF_tblFamilyMemberRowDeleting != null)) {
                    this.usp_SEL_TSF_tblFamilyMemberRowDeleting(this, new usp_SEL_TSF_tblFamilyMemberRowChangeEvent(((usp_SEL_TSF_tblFamilyMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_TSF_tblFamilyMemberRow(usp_SEL_TSF_tblFamilyMemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_TSF_tblFamilyMemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblMembersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFamilyMemberID;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnLeaderRelation;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnHusbandName;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnBloodGroup;
            
            private global::System.Data.DataColumn columnAgeGroup;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnCNIC;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnAcademicEducation;
            
            private global::System.Data.DataColumn columnTechnicalEducation;
            
            private global::System.Data.DataColumn columnProfessionalEducation;
            
            private global::System.Data.DataColumn columnBusinessName;
            
            private global::System.Data.DataColumn columnWorkType;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnBusinessAddress;
            
            private global::System.Data.DataColumn columnBusinessPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWebsite;
            
            private global::System.Data.DataColumn columnBusinessFax;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnD_Incident;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnOutof;
            
            private global::System.Data.DataColumn columnEntryDate;
            
            private global::System.Data.DataColumn columnSign;
            
            private global::System.Data.DataColumn columnNukh;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnVillage;
            
            private global::System.Data.DataColumn columnFamilyLeader;
            
            private global::System.Data.DataColumn columnFamilyName;
            
            private global::System.Data.DataColumn columnIsNICPrinted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMembersDataTable() {
                this.TableName = "tblMembers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMembersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblMembersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyMemberIDColumn {
                get {
                    return this.columnFamilyMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeaderRelationColumn {
                get {
                    return this.columnLeaderRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HusbandNameColumn {
                get {
                    return this.columnHusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodGroupColumn {
                get {
                    return this.columnBloodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeGroupColumn {
                get {
                    return this.columnAgeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNICColumn {
                get {
                    return this.columnCNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcademicEducationColumn {
                get {
                    return this.columnAcademicEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechnicalEducationColumn {
                get {
                    return this.columnTechnicalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfessionalEducationColumn {
                get {
                    return this.columnProfessionalEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessNameColumn {
                get {
                    return this.columnBusinessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkTypeColumn {
                get {
                    return this.columnWorkType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessAddressColumn {
                get {
                    return this.columnBusinessAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessPhoneColumn {
                get {
                    return this.columnBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebsiteColumn {
                get {
                    return this.columnWebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessFaxColumn {
                get {
                    return this.columnBusinessFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn D_IncidentColumn {
                get {
                    return this.columnD_Incident;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutofColumn {
                get {
                    return this.columnOutof;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryDateColumn {
                get {
                    return this.columnEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignColumn {
                get {
                    return this.columnSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhColumn {
                get {
                    return this.columnNukh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VillageColumn {
                get {
                    return this.columnVillage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyLeaderColumn {
                get {
                    return this.columnFamilyLeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyNameColumn {
                get {
                    return this.columnFamilyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNICPrintedColumn {
                get {
                    return this.columnIsNICPrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMembersRow this[int index] {
                get {
                    return ((tblMembersRow)(this.Rows[index]));
                }
            }
            
            public event tblMembersRowChangeEventHandler tblMembersRowChanging;
            
            public event tblMembersRowChangeEventHandler tblMembersRowChanged;
            
            public event tblMembersRowChangeEventHandler tblMembersRowDeleting;
            
            public event tblMembersRowChangeEventHandler tblMembersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblMembersRow(tblMembersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMembersRow AddtblMembersRow(
                        string FCardNo, 
                        string MemberName, 
                        string LeaderRelation, 
                        string FatherName, 
                        string HusbandName, 
                        string Gender, 
                        string DOB, 
                        string BloodGroup, 
                        string AgeGroup, 
                        string Mobile, 
                        string CNIC, 
                        string NIC, 
                        string AcademicEducation, 
                        string TechnicalEducation, 
                        string ProfessionalEducation, 
                        string BusinessName, 
                        string WorkType, 
                        string Designation, 
                        string BusinessAddress, 
                        string BusinessPhone, 
                        string Email, 
                        string Website, 
                        string BusinessFax, 
                        bool Active, 
                        string Reason, 
                        System.DateTime D_Incident, 
                        string MaritalStatus, 
                        string Outof, 
                        System.DateTime EntryDate, 
                        string Sign, 
                        string Nukh, 
                        string City, 
                        string Area, 
                        string Country, 
                        string Village, 
                        string FamilyLeader, 
                        string FamilyName, 
                        byte IsNICPrinted) {
                tblMembersRow rowtblMembersRow = ((tblMembersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FCardNo,
                        MemberName,
                        LeaderRelation,
                        FatherName,
                        HusbandName,
                        Gender,
                        DOB,
                        BloodGroup,
                        AgeGroup,
                        Mobile,
                        CNIC,
                        NIC,
                        AcademicEducation,
                        TechnicalEducation,
                        ProfessionalEducation,
                        BusinessName,
                        WorkType,
                        Designation,
                        BusinessAddress,
                        BusinessPhone,
                        Email,
                        Website,
                        BusinessFax,
                        Active,
                        Reason,
                        D_Incident,
                        MaritalStatus,
                        Outof,
                        EntryDate,
                        Sign,
                        Nukh,
                        City,
                        Area,
                        Country,
                        Village,
                        FamilyLeader,
                        FamilyName,
                        IsNICPrinted};
                rowtblMembersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblMembersRow);
                return rowtblMembersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMembersRow FindByFamilyMemberID(long FamilyMemberID) {
                return ((tblMembersRow)(this.Rows.Find(new object[] {
                            FamilyMemberID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblMembersDataTable cln = ((tblMembersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblMembersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFamilyMemberID = base.Columns["FamilyMemberID"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnLeaderRelation = base.Columns["LeaderRelation"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnHusbandName = base.Columns["HusbandName"];
                this.columnGender = base.Columns["Gender"];
                this.columnDOB = base.Columns["DOB"];
                this.columnBloodGroup = base.Columns["BloodGroup"];
                this.columnAgeGroup = base.Columns["AgeGroup"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnCNIC = base.Columns["CNIC"];
                this.columnNIC = base.Columns["NIC"];
                this.columnAcademicEducation = base.Columns["AcademicEducation"];
                this.columnTechnicalEducation = base.Columns["TechnicalEducation"];
                this.columnProfessionalEducation = base.Columns["ProfessionalEducation"];
                this.columnBusinessName = base.Columns["BusinessName"];
                this.columnWorkType = base.Columns["WorkType"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnBusinessAddress = base.Columns["BusinessAddress"];
                this.columnBusinessPhone = base.Columns["BusinessPhone"];
                this.columnEmail = base.Columns["Email"];
                this.columnWebsite = base.Columns["Website"];
                this.columnBusinessFax = base.Columns["BusinessFax"];
                this.columnActive = base.Columns["Active"];
                this.columnReason = base.Columns["Reason"];
                this.columnD_Incident = base.Columns["D_Incident"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnOutof = base.Columns["Outof"];
                this.columnEntryDate = base.Columns["EntryDate"];
                this.columnSign = base.Columns["Sign"];
                this.columnNukh = base.Columns["Nukh"];
                this.columnCity = base.Columns["City"];
                this.columnArea = base.Columns["Area"];
                this.columnCountry = base.Columns["Country"];
                this.columnVillage = base.Columns["Village"];
                this.columnFamilyLeader = base.Columns["FamilyLeader"];
                this.columnFamilyName = base.Columns["FamilyName"];
                this.columnIsNICPrinted = base.Columns["IsNICPrinted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFamilyMemberID = new global::System.Data.DataColumn("FamilyMemberID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyMemberID);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnLeaderRelation = new global::System.Data.DataColumn("LeaderRelation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaderRelation);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnHusbandName = new global::System.Data.DataColumn("HusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHusbandName);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnBloodGroup = new global::System.Data.DataColumn("BloodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodGroup);
                this.columnAgeGroup = new global::System.Data.DataColumn("AgeGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeGroup);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnCNIC = new global::System.Data.DataColumn("CNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNIC);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnAcademicEducation = new global::System.Data.DataColumn("AcademicEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcademicEducation);
                this.columnTechnicalEducation = new global::System.Data.DataColumn("TechnicalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalEducation);
                this.columnProfessionalEducation = new global::System.Data.DataColumn("ProfessionalEducation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfessionalEducation);
                this.columnBusinessName = new global::System.Data.DataColumn("BusinessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessName);
                this.columnWorkType = new global::System.Data.DataColumn("WorkType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkType);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnBusinessAddress = new global::System.Data.DataColumn("BusinessAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessAddress);
                this.columnBusinessPhone = new global::System.Data.DataColumn("BusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWebsite = new global::System.Data.DataColumn("Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsite);
                this.columnBusinessFax = new global::System.Data.DataColumn("BusinessFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessFax);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnD_Incident = new global::System.Data.DataColumn("D_Incident", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_Incident);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnOutof = new global::System.Data.DataColumn("Outof", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutof);
                this.columnEntryDate = new global::System.Data.DataColumn("EntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryDate);
                this.columnSign = new global::System.Data.DataColumn("Sign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSign);
                this.columnNukh = new global::System.Data.DataColumn("Nukh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukh);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnVillage = new global::System.Data.DataColumn("Village", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillage);
                this.columnFamilyLeader = new global::System.Data.DataColumn("FamilyLeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyLeader);
                this.columnFamilyName = new global::System.Data.DataColumn("FamilyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyName);
                this.columnIsNICPrinted = new global::System.Data.DataColumn("IsNICPrinted", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNICPrinted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFamilyMemberID}, true));
                this.columnFamilyMemberID.AutoIncrement = true;
                this.columnFamilyMemberID.AllowDBNull = false;
                this.columnFamilyMemberID.ReadOnly = true;
                this.columnFamilyMemberID.Unique = true;
                this.columnFCardNo.MaxLength = 50;
                this.columnMemberName.MaxLength = 100;
                this.columnLeaderRelation.MaxLength = 100;
                this.columnFatherName.MaxLength = 100;
                this.columnHusbandName.MaxLength = 100;
                this.columnGender.MaxLength = 50;
                this.columnDOB.MaxLength = 50;
                this.columnBloodGroup.MaxLength = 50;
                this.columnAgeGroup.MaxLength = 50;
                this.columnMobile.MaxLength = 50;
                this.columnCNIC.MaxLength = 100;
                this.columnNIC.MaxLength = 100;
                this.columnAcademicEducation.MaxLength = 100;
                this.columnTechnicalEducation.MaxLength = 100;
                this.columnProfessionalEducation.MaxLength = 100;
                this.columnBusinessName.MaxLength = 50;
                this.columnWorkType.MaxLength = 50;
                this.columnDesignation.MaxLength = 50;
                this.columnBusinessAddress.MaxLength = 200;
                this.columnBusinessPhone.MaxLength = 50;
                this.columnEmail.MaxLength = 100;
                this.columnWebsite.MaxLength = 100;
                this.columnBusinessFax.MaxLength = 50;
                this.columnReason.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 50;
                this.columnOutof.MaxLength = 50;
                this.columnSign.MaxLength = 100;
                this.columnNukh.MaxLength = 100;
                this.columnCity.MaxLength = 100;
                this.columnArea.MaxLength = 100;
                this.columnCountry.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMembersRow NewtblMembersRow() {
                return ((tblMembersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblMembersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblMembersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblMembersRowChanged != null)) {
                    this.tblMembersRowChanged(this, new tblMembersRowChangeEvent(((tblMembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblMembersRowChanging != null)) {
                    this.tblMembersRowChanging(this, new tblMembersRowChangeEvent(((tblMembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblMembersRowDeleted != null)) {
                    this.tblMembersRowDeleted(this, new tblMembersRowChangeEvent(((tblMembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblMembersRowDeleting != null)) {
                    this.tblMembersRowDeleting(this, new tblMembersRowChangeEvent(((tblMembersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblMembersRow(tblMembersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblMembersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblTrialBalanceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnDebit;
            
            private global::System.Data.DataColumn columnCredit;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnAccountCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTrialBalanceDataTable() {
                this.TableName = "tblTrialBalance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTrialBalanceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblTrialBalanceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitColumn {
                get {
                    return this.columnDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTrialBalanceRow this[int index] {
                get {
                    return ((tblTrialBalanceRow)(this.Rows[index]));
                }
            }
            
            public event tblTrialBalanceRowChangeEventHandler tblTrialBalanceRowChanging;
            
            public event tblTrialBalanceRowChangeEventHandler tblTrialBalanceRowChanged;
            
            public event tblTrialBalanceRowChangeEventHandler tblTrialBalanceRowDeleting;
            
            public event tblTrialBalanceRowChangeEventHandler tblTrialBalanceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblTrialBalanceRow(tblTrialBalanceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTrialBalanceRow AddtblTrialBalanceRow(int Code, string AccountName, decimal Debit, decimal Credit, decimal Balance, string AccountCode) {
                tblTrialBalanceRow rowtblTrialBalanceRow = ((tblTrialBalanceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        AccountName,
                        Debit,
                        Credit,
                        Balance,
                        AccountCode};
                rowtblTrialBalanceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblTrialBalanceRow);
                return rowtblTrialBalanceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblTrialBalanceDataTable cln = ((tblTrialBalanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblTrialBalanceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnDebit = base.Columns["Debit"];
                this.columnCredit = base.Columns["Credit"];
                this.columnBalance = base.Columns["Balance"];
                this.columnAccountCode = base.Columns["AccountCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnDebit = new global::System.Data.DataColumn("Debit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnAccountCode = new global::System.Data.DataColumn("AccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnAccountName.MaxLength = 255;
                this.columnDebit.ReadOnly = true;
                this.columnCredit.ReadOnly = true;
                this.columnBalance.ReadOnly = true;
                this.columnAccountCode.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTrialBalanceRow NewtblTrialBalanceRow() {
                return ((tblTrialBalanceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblTrialBalanceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblTrialBalanceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblTrialBalanceRowChanged != null)) {
                    this.tblTrialBalanceRowChanged(this, new tblTrialBalanceRowChangeEvent(((tblTrialBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblTrialBalanceRowChanging != null)) {
                    this.tblTrialBalanceRowChanging(this, new tblTrialBalanceRowChangeEvent(((tblTrialBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblTrialBalanceRowDeleted != null)) {
                    this.tblTrialBalanceRowDeleted(this, new tblTrialBalanceRowChangeEvent(((tblTrialBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblTrialBalanceRowDeleting != null)) {
                    this.tblTrialBalanceRowDeleting(this, new tblTrialBalanceRowChangeEvent(((tblTrialBalanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblTrialBalanceRow(tblTrialBalanceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblTrialBalanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSecurityDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnInactive_FL;
            
            private global::System.Data.DataColumn columnGroupName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityDataTable() {
                this.TableName = "tblSecurity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSecurityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblSecurityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inactive_FLColumn {
                get {
                    return this.columnInactive_FL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupNameColumn {
                get {
                    return this.columnGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityRow this[int index] {
                get {
                    return ((tblSecurityRow)(this.Rows[index]));
                }
            }
            
            public event tblSecurityRowChangeEventHandler tblSecurityRowChanging;
            
            public event tblSecurityRowChangeEventHandler tblSecurityRowChanged;
            
            public event tblSecurityRowChangeEventHandler tblSecurityRowDeleting;
            
            public event tblSecurityRowChangeEventHandler tblSecurityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblSecurityRow(tblSecurityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityRow AddtblSecurityRow(string UserName, string Password, System.DateTime Date, bool Inactive_FL, string GroupName) {
                tblSecurityRow rowtblSecurityRow = ((tblSecurityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserName,
                        Password,
                        Date,
                        Inactive_FL,
                        GroupName};
                rowtblSecurityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSecurityRow);
                return rowtblSecurityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityRow FindByUserID(int UserID) {
                return ((tblSecurityRow)(this.Rows.Find(new object[] {
                            UserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblSecurityDataTable cln = ((tblSecurityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSecurityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnUserName = base.Columns["UserName"];
                this.columnPassword = base.Columns["Password"];
                this.columnDate = base.Columns["Date"];
                this.columnInactive_FL = base.Columns["Inactive_FL"];
                this.columnGroupName = base.Columns["GroupName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnInactive_FL = new global::System.Data.DataColumn("Inactive_FL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive_FL);
                this.columnGroupName = new global::System.Data.DataColumn("GroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUserID}, true));
                this.columnUserID.AutoIncrement = true;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.ReadOnly = true;
                this.columnUserID.Unique = true;
                this.columnUserName.MaxLength = 50;
                this.columnPassword.MaxLength = 50;
                this.columnGroupName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityRow NewtblSecurityRow() {
                return ((tblSecurityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSecurityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblSecurityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSecurityRowChanged != null)) {
                    this.tblSecurityRowChanged(this, new tblSecurityRowChangeEvent(((tblSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSecurityRowChanging != null)) {
                    this.tblSecurityRowChanging(this, new tblSecurityRowChangeEvent(((tblSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSecurityRowDeleted != null)) {
                    this.tblSecurityRowDeleted(this, new tblSecurityRowChangeEvent(((tblSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSecurityRowDeleting != null)) {
                    this.tblSecurityRowDeleting(this, new tblSecurityRowChangeEvent(((tblSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblSecurityRow(tblSecurityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSecurityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSecurityLevelDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSecurityLevel_ID;
            
            private global::System.Data.DataColumn columnSecurityName;
            
            private global::System.Data.DataColumn columnDatetime;
            
            private global::System.Data.DataColumn columnInactive_FL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityLevelDataTable() {
                this.TableName = "tblSecurityLevel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSecurityLevelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblSecurityLevelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecurityLevel_IDColumn {
                get {
                    return this.columnSecurityLevel_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecurityNameColumn {
                get {
                    return this.columnSecurityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatetimeColumn {
                get {
                    return this.columnDatetime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Inactive_FLColumn {
                get {
                    return this.columnInactive_FL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityLevelRow this[int index] {
                get {
                    return ((tblSecurityLevelRow)(this.Rows[index]));
                }
            }
            
            public event tblSecurityLevelRowChangeEventHandler tblSecurityLevelRowChanging;
            
            public event tblSecurityLevelRowChangeEventHandler tblSecurityLevelRowChanged;
            
            public event tblSecurityLevelRowChangeEventHandler tblSecurityLevelRowDeleting;
            
            public event tblSecurityLevelRowChangeEventHandler tblSecurityLevelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblSecurityLevelRow(tblSecurityLevelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityLevelRow AddtblSecurityLevelRow(string SecurityName, System.DateTime Datetime, bool Inactive_FL) {
                tblSecurityLevelRow rowtblSecurityLevelRow = ((tblSecurityLevelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SecurityName,
                        Datetime,
                        Inactive_FL};
                rowtblSecurityLevelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSecurityLevelRow);
                return rowtblSecurityLevelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityLevelRow FindBySecurityLevel_ID(int SecurityLevel_ID) {
                return ((tblSecurityLevelRow)(this.Rows.Find(new object[] {
                            SecurityLevel_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblSecurityLevelDataTable cln = ((tblSecurityLevelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSecurityLevelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSecurityLevel_ID = base.Columns["SecurityLevel_ID"];
                this.columnSecurityName = base.Columns["SecurityName"];
                this.columnDatetime = base.Columns["Datetime"];
                this.columnInactive_FL = base.Columns["Inactive_FL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSecurityLevel_ID = new global::System.Data.DataColumn("SecurityLevel_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityLevel_ID);
                this.columnSecurityName = new global::System.Data.DataColumn("SecurityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityName);
                this.columnDatetime = new global::System.Data.DataColumn("Datetime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatetime);
                this.columnInactive_FL = new global::System.Data.DataColumn("Inactive_FL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive_FL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSecurityLevel_ID}, true));
                this.columnSecurityLevel_ID.AutoIncrement = true;
                this.columnSecurityLevel_ID.AllowDBNull = false;
                this.columnSecurityLevel_ID.ReadOnly = true;
                this.columnSecurityLevel_ID.Unique = true;
                this.columnSecurityName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityLevelRow NewtblSecurityLevelRow() {
                return ((tblSecurityLevelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSecurityLevelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblSecurityLevelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSecurityLevelRowChanged != null)) {
                    this.tblSecurityLevelRowChanged(this, new tblSecurityLevelRowChangeEvent(((tblSecurityLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSecurityLevelRowChanging != null)) {
                    this.tblSecurityLevelRowChanging(this, new tblSecurityLevelRowChangeEvent(((tblSecurityLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSecurityLevelRowDeleted != null)) {
                    this.tblSecurityLevelRowDeleted(this, new tblSecurityLevelRowChangeEvent(((tblSecurityLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSecurityLevelRowDeleting != null)) {
                    this.tblSecurityLevelRowDeleting(this, new tblSecurityLevelRowChangeEvent(((tblSecurityLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblSecurityLevelRow(tblSecurityLevelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSecurityLevelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblLogingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnLoginTime;
            
            private global::System.Data.DataColumn columnLogoffTime;
            
            private global::System.Data.DataColumn columnR_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLogingDataTable() {
                this.TableName = "tblLoging";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblLogingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblLogingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoginTimeColumn {
                get {
                    return this.columnLoginTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoffTimeColumn {
                get {
                    return this.columnLogoffTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn R_IDColumn {
                get {
                    return this.columnR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLogingRow this[int index] {
                get {
                    return ((tblLogingRow)(this.Rows[index]));
                }
            }
            
            public event tblLogingRowChangeEventHandler tblLogingRowChanging;
            
            public event tblLogingRowChangeEventHandler tblLogingRowChanged;
            
            public event tblLogingRowChangeEventHandler tblLogingRowDeleting;
            
            public event tblLogingRowChangeEventHandler tblLogingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblLogingRow(tblLogingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLogingRow AddtblLogingRow(string UserName, System.DateTime LoginTime, System.DateTime LogoffTime, int R_ID) {
                tblLogingRow rowtblLogingRow = ((tblLogingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserName,
                        LoginTime,
                        LogoffTime,
                        R_ID};
                rowtblLogingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblLogingRow);
                return rowtblLogingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLogingRow FindByID(int ID) {
                return ((tblLogingRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblLogingDataTable cln = ((tblLogingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblLogingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnUserName = base.Columns["UserName"];
                this.columnLoginTime = base.Columns["LoginTime"];
                this.columnLogoffTime = base.Columns["LogoffTime"];
                this.columnR_ID = base.Columns["R_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnLoginTime = new global::System.Data.DataColumn("LoginTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginTime);
                this.columnLogoffTime = new global::System.Data.DataColumn("LogoffTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogoffTime);
                this.columnR_ID = new global::System.Data.DataColumn("R_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnUserName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLogingRow NewtblLogingRow() {
                return ((tblLogingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblLogingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblLogingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblLogingRowChanged != null)) {
                    this.tblLogingRowChanged(this, new tblLogingRowChangeEvent(((tblLogingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblLogingRowChanging != null)) {
                    this.tblLogingRowChanging(this, new tblLogingRowChangeEvent(((tblLogingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblLogingRowDeleted != null)) {
                    this.tblLogingRowDeleted(this, new tblLogingRowChangeEvent(((tblLogingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblLogingRowDeleting != null)) {
                    this.tblLogingRowDeleting(this, new tblLogingRowChangeEvent(((tblLogingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblLogingRow(tblLogingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblLogingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_DonationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnReceivedFrom;
            
            private global::System.Data.DataColumn columnLaagaEng;
            
            private global::System.Data.DataColumn columnLaagaMrg;
            
            private global::System.Data.DataColumn columnPoorFund;
            
            private global::System.Data.DataColumn columnZakatFund;
            
            private global::System.Data.DataColumn columnQabristanFund;
            
            private global::System.Data.DataColumn columnGeneralFund;
            
            private global::System.Data.DataColumn columnEducationFund;
            
            private global::System.Data.DataColumn columnTameratiFund;
            
            private global::System.Data.DataColumn columnNewCard;
            
            private global::System.Data.DataColumn columnOthers;
            
            private global::System.Data.DataColumn columnAccountRelation;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnTypeZ;
            
            private global::System.Data.DataColumn columnTypeG;
            
            private global::System.Data.DataColumn columnTypeE;
            
            private global::System.Data.DataColumn columnZNo;
            
            private global::System.Data.DataColumn columnGNo;
            
            private global::System.Data.DataColumn columnENo;
            
            private global::System.Data.DataColumn columnLagaAcc;
            
            private global::System.Data.DataColumn columnPoorAcc;
            
            private global::System.Data.DataColumn columnEduAcc;
            
            private global::System.Data.DataColumn columnQabAcc;
            
            private global::System.Data.DataColumn columnTamAcc;
            
            private global::System.Data.DataColumn columnZakatAcc;
            
            private global::System.Data.DataColumn columnCardAcc;
            
            private global::System.Data.DataColumn columnGenAcc;
            
            private global::System.Data.DataColumn columnOtherAcc;
            
            private global::System.Data.DataColumn columnLaagaFor;
            
            private global::System.Data.DataColumn columnLateDeath;
            
            private global::System.Data.DataColumn columnCrtfType;
            
            private global::System.Data.DataColumn columnCrtf;
            
            private global::System.Data.DataColumn columnForCrtf;
            
            private global::System.Data.DataColumn columnForBirth;
            
            private global::System.Data.DataColumn columnForDeath;
            
            private global::System.Data.DataColumn columnAccCrtf;
            
            private global::System.Data.DataColumn columnCardNo;
            
            private global::System.Data.DataColumn columnMobile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DonationDataTable() {
                this.TableName = "usp_SEL_Donation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_DonationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_DonationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedFromColumn {
                get {
                    return this.columnReceivedFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LaagaEngColumn {
                get {
                    return this.columnLaagaEng;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LaagaMrgColumn {
                get {
                    return this.columnLaagaMrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoorFundColumn {
                get {
                    return this.columnPoorFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZakatFundColumn {
                get {
                    return this.columnZakatFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QabristanFundColumn {
                get {
                    return this.columnQabristanFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralFundColumn {
                get {
                    return this.columnGeneralFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducationFundColumn {
                get {
                    return this.columnEducationFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TameratiFundColumn {
                get {
                    return this.columnTameratiFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewCardColumn {
                get {
                    return this.columnNewCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OthersColumn {
                get {
                    return this.columnOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountRelationColumn {
                get {
                    return this.columnAccountRelation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeZColumn {
                get {
                    return this.columnTypeZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeGColumn {
                get {
                    return this.columnTypeG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeEColumn {
                get {
                    return this.columnTypeE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZNoColumn {
                get {
                    return this.columnZNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GNoColumn {
                get {
                    return this.columnGNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENoColumn {
                get {
                    return this.columnENo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LagaAccColumn {
                get {
                    return this.columnLagaAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoorAccColumn {
                get {
                    return this.columnPoorAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EduAccColumn {
                get {
                    return this.columnEduAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QabAccColumn {
                get {
                    return this.columnQabAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TamAccColumn {
                get {
                    return this.columnTamAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZakatAccColumn {
                get {
                    return this.columnZakatAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardAccColumn {
                get {
                    return this.columnCardAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenAccColumn {
                get {
                    return this.columnGenAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherAccColumn {
                get {
                    return this.columnOtherAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LaagaForColumn {
                get {
                    return this.columnLaagaFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LateDeathColumn {
                get {
                    return this.columnLateDeath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrtfTypeColumn {
                get {
                    return this.columnCrtfType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CrtfColumn {
                get {
                    return this.columnCrtf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForCrtfColumn {
                get {
                    return this.columnForCrtf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForBirthColumn {
                get {
                    return this.columnForBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForDeathColumn {
                get {
                    return this.columnForDeath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccCrtfColumn {
                get {
                    return this.columnAccCrtf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardNoColumn {
                get {
                    return this.columnCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DonationRow this[int index] {
                get {
                    return ((usp_SEL_DonationRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_DonationRowChangeEventHandler usp_SEL_DonationRowChanging;
            
            public event usp_SEL_DonationRowChangeEventHandler usp_SEL_DonationRowChanged;
            
            public event usp_SEL_DonationRowChangeEventHandler usp_SEL_DonationRowDeleting;
            
            public event usp_SEL_DonationRowChangeEventHandler usp_SEL_DonationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_DonationRow(usp_SEL_DonationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DonationRow Addusp_SEL_DonationRow(
                        string ReceiptNo, 
                        System.DateTime Date, 
                        string ReceivedFrom, 
                        decimal LaagaEng, 
                        decimal LaagaMrg, 
                        decimal PoorFund, 
                        decimal ZakatFund, 
                        decimal QabristanFund, 
                        decimal GeneralFund, 
                        decimal EducationFund, 
                        decimal TameratiFund, 
                        decimal NewCard, 
                        decimal Others, 
                        bool AccountRelation, 
                        string FCardNo, 
                        decimal Total, 
                        string Orakh, 
                        string FName, 
                        bool TypeZ, 
                        bool TypeG, 
                        bool TypeE, 
                        string ZNo, 
                        string GNo, 
                        string ENo, 
                        string LagaAcc, 
                        string PoorAcc, 
                        string EduAcc, 
                        string QabAcc, 
                        string TamAcc, 
                        string ZakatAcc, 
                        string CardAcc, 
                        string GenAcc, 
                        string OtherAcc, 
                        string LaagaFor, 
                        decimal LateDeath, 
                        string CrtfType, 
                        decimal Crtf, 
                        string ForCrtf, 
                        string ForBirth, 
                        string ForDeath, 
                        string AccCrtf, 
                        string CardNo, 
                        string Mobile) {
                usp_SEL_DonationRow rowusp_SEL_DonationRow = ((usp_SEL_DonationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ReceiptNo,
                        Date,
                        ReceivedFrom,
                        LaagaEng,
                        LaagaMrg,
                        PoorFund,
                        ZakatFund,
                        QabristanFund,
                        GeneralFund,
                        EducationFund,
                        TameratiFund,
                        NewCard,
                        Others,
                        AccountRelation,
                        FCardNo,
                        Total,
                        Orakh,
                        FName,
                        TypeZ,
                        TypeG,
                        TypeE,
                        ZNo,
                        GNo,
                        ENo,
                        LagaAcc,
                        PoorAcc,
                        EduAcc,
                        QabAcc,
                        TamAcc,
                        ZakatAcc,
                        CardAcc,
                        GenAcc,
                        OtherAcc,
                        LaagaFor,
                        LateDeath,
                        CrtfType,
                        Crtf,
                        ForCrtf,
                        ForBirth,
                        ForDeath,
                        AccCrtf,
                        CardNo,
                        Mobile};
                rowusp_SEL_DonationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_DonationRow);
                return rowusp_SEL_DonationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DonationRow FindByID(int ID) {
                return ((usp_SEL_DonationRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_DonationDataTable cln = ((usp_SEL_DonationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_DonationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnDate = base.Columns["Date"];
                this.columnReceivedFrom = base.Columns["ReceivedFrom"];
                this.columnLaagaEng = base.Columns["LaagaEng"];
                this.columnLaagaMrg = base.Columns["LaagaMrg"];
                this.columnPoorFund = base.Columns["PoorFund"];
                this.columnZakatFund = base.Columns["ZakatFund"];
                this.columnQabristanFund = base.Columns["QabristanFund"];
                this.columnGeneralFund = base.Columns["GeneralFund"];
                this.columnEducationFund = base.Columns["EducationFund"];
                this.columnTameratiFund = base.Columns["TameratiFund"];
                this.columnNewCard = base.Columns["NewCard"];
                this.columnOthers = base.Columns["Others"];
                this.columnAccountRelation = base.Columns["AccountRelation"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnTotal = base.Columns["Total"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnFName = base.Columns["FName"];
                this.columnTypeZ = base.Columns["TypeZ"];
                this.columnTypeG = base.Columns["TypeG"];
                this.columnTypeE = base.Columns["TypeE"];
                this.columnZNo = base.Columns["ZNo"];
                this.columnGNo = base.Columns["GNo"];
                this.columnENo = base.Columns["ENo"];
                this.columnLagaAcc = base.Columns["LagaAcc"];
                this.columnPoorAcc = base.Columns["PoorAcc"];
                this.columnEduAcc = base.Columns["EduAcc"];
                this.columnQabAcc = base.Columns["QabAcc"];
                this.columnTamAcc = base.Columns["TamAcc"];
                this.columnZakatAcc = base.Columns["ZakatAcc"];
                this.columnCardAcc = base.Columns["CardAcc"];
                this.columnGenAcc = base.Columns["GenAcc"];
                this.columnOtherAcc = base.Columns["OtherAcc"];
                this.columnLaagaFor = base.Columns["LaagaFor"];
                this.columnLateDeath = base.Columns["LateDeath"];
                this.columnCrtfType = base.Columns["CrtfType"];
                this.columnCrtf = base.Columns["Crtf"];
                this.columnForCrtf = base.Columns["ForCrtf"];
                this.columnForBirth = base.Columns["ForBirth"];
                this.columnForDeath = base.Columns["ForDeath"];
                this.columnAccCrtf = base.Columns["AccCrtf"];
                this.columnCardNo = base.Columns["CardNo"];
                this.columnMobile = base.Columns["Mobile"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnReceivedFrom = new global::System.Data.DataColumn("ReceivedFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedFrom);
                this.columnLaagaEng = new global::System.Data.DataColumn("LaagaEng", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaagaEng);
                this.columnLaagaMrg = new global::System.Data.DataColumn("LaagaMrg", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaagaMrg);
                this.columnPoorFund = new global::System.Data.DataColumn("PoorFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoorFund);
                this.columnZakatFund = new global::System.Data.DataColumn("ZakatFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZakatFund);
                this.columnQabristanFund = new global::System.Data.DataColumn("QabristanFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQabristanFund);
                this.columnGeneralFund = new global::System.Data.DataColumn("GeneralFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralFund);
                this.columnEducationFund = new global::System.Data.DataColumn("EducationFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducationFund);
                this.columnTameratiFund = new global::System.Data.DataColumn("TameratiFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTameratiFund);
                this.columnNewCard = new global::System.Data.DataColumn("NewCard", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewCard);
                this.columnOthers = new global::System.Data.DataColumn("Others", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOthers);
                this.columnAccountRelation = new global::System.Data.DataColumn("AccountRelation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountRelation);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnTypeZ = new global::System.Data.DataColumn("TypeZ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeZ);
                this.columnTypeG = new global::System.Data.DataColumn("TypeG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeG);
                this.columnTypeE = new global::System.Data.DataColumn("TypeE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeE);
                this.columnZNo = new global::System.Data.DataColumn("ZNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZNo);
                this.columnGNo = new global::System.Data.DataColumn("GNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGNo);
                this.columnENo = new global::System.Data.DataColumn("ENo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENo);
                this.columnLagaAcc = new global::System.Data.DataColumn("LagaAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLagaAcc);
                this.columnPoorAcc = new global::System.Data.DataColumn("PoorAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoorAcc);
                this.columnEduAcc = new global::System.Data.DataColumn("EduAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEduAcc);
                this.columnQabAcc = new global::System.Data.DataColumn("QabAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQabAcc);
                this.columnTamAcc = new global::System.Data.DataColumn("TamAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTamAcc);
                this.columnZakatAcc = new global::System.Data.DataColumn("ZakatAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZakatAcc);
                this.columnCardAcc = new global::System.Data.DataColumn("CardAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardAcc);
                this.columnGenAcc = new global::System.Data.DataColumn("GenAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenAcc);
                this.columnOtherAcc = new global::System.Data.DataColumn("OtherAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAcc);
                this.columnLaagaFor = new global::System.Data.DataColumn("LaagaFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaagaFor);
                this.columnLateDeath = new global::System.Data.DataColumn("LateDeath", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateDeath);
                this.columnCrtfType = new global::System.Data.DataColumn("CrtfType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrtfType);
                this.columnCrtf = new global::System.Data.DataColumn("Crtf", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrtf);
                this.columnForCrtf = new global::System.Data.DataColumn("ForCrtf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForCrtf);
                this.columnForBirth = new global::System.Data.DataColumn("ForBirth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForBirth);
                this.columnForDeath = new global::System.Data.DataColumn("ForDeath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForDeath);
                this.columnAccCrtf = new global::System.Data.DataColumn("AccCrtf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccCrtf);
                this.columnCardNo = new global::System.Data.DataColumn("CardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardNo);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnReceiptNo.MaxLength = 50;
                this.columnReceivedFrom.MaxLength = 100;
                this.columnFCardNo.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnFName.MaxLength = 50;
                this.columnZNo.MaxLength = 50;
                this.columnGNo.MaxLength = 50;
                this.columnENo.MaxLength = 50;
                this.columnLagaAcc.ReadOnly = true;
                this.columnLagaAcc.MaxLength = 255;
                this.columnPoorAcc.ReadOnly = true;
                this.columnPoorAcc.MaxLength = 255;
                this.columnEduAcc.ReadOnly = true;
                this.columnEduAcc.MaxLength = 255;
                this.columnQabAcc.ReadOnly = true;
                this.columnQabAcc.MaxLength = 255;
                this.columnTamAcc.ReadOnly = true;
                this.columnTamAcc.MaxLength = 255;
                this.columnZakatAcc.ReadOnly = true;
                this.columnZakatAcc.MaxLength = 255;
                this.columnCardAcc.ReadOnly = true;
                this.columnCardAcc.MaxLength = 255;
                this.columnGenAcc.ReadOnly = true;
                this.columnGenAcc.MaxLength = 255;
                this.columnOtherAcc.ReadOnly = true;
                this.columnOtherAcc.MaxLength = 255;
                this.columnLaagaFor.MaxLength = 50;
                this.columnCrtfType.MaxLength = 50;
                this.columnForCrtf.MaxLength = 50;
                this.columnForBirth.MaxLength = 50;
                this.columnForDeath.MaxLength = 50;
                this.columnAccCrtf.ReadOnly = true;
                this.columnAccCrtf.MaxLength = 255;
                this.columnCardNo.MaxLength = 5;
                this.columnMobile.MaxLength = 12;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DonationRow Newusp_SEL_DonationRow() {
                return ((usp_SEL_DonationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_DonationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_DonationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_DonationRowChanged != null)) {
                    this.usp_SEL_DonationRowChanged(this, new usp_SEL_DonationRowChangeEvent(((usp_SEL_DonationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_DonationRowChanging != null)) {
                    this.usp_SEL_DonationRowChanging(this, new usp_SEL_DonationRowChangeEvent(((usp_SEL_DonationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_DonationRowDeleted != null)) {
                    this.usp_SEL_DonationRowDeleted(this, new usp_SEL_DonationRowChangeEvent(((usp_SEL_DonationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_DonationRowDeleting != null)) {
                    this.usp_SEL_DonationRowDeleting(this, new usp_SEL_DonationRowChangeEvent(((usp_SEL_DonationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_DonationRow(usp_SEL_DonationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_DonationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblUserGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnGroupName;
            
            private global::System.Data.DataColumn columnActive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupDataTable() {
                this.TableName = "tblUserGroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblUserGroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblUserGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupNameColumn {
                get {
                    return this.columnGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupRow this[int index] {
                get {
                    return ((tblUserGroupRow)(this.Rows[index]));
                }
            }
            
            public event tblUserGroupRowChangeEventHandler tblUserGroupRowChanging;
            
            public event tblUserGroupRowChangeEventHandler tblUserGroupRowChanged;
            
            public event tblUserGroupRowChangeEventHandler tblUserGroupRowDeleting;
            
            public event tblUserGroupRowChangeEventHandler tblUserGroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblUserGroupRow(tblUserGroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupRow AddtblUserGroupRow(string GroupName, bool Active) {
                tblUserGroupRow rowtblUserGroupRow = ((tblUserGroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        GroupName,
                        Active};
                rowtblUserGroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblUserGroupRow);
                return rowtblUserGroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupRow FindByID(int ID) {
                return ((tblUserGroupRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblUserGroupDataTable cln = ((tblUserGroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblUserGroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnGroupName = base.Columns["GroupName"];
                this.columnActive = base.Columns["Active"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGroupName = new global::System.Data.DataColumn("GroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupName);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnGroupName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupRow NewtblUserGroupRow() {
                return ((tblUserGroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblUserGroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblUserGroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblUserGroupRowChanged != null)) {
                    this.tblUserGroupRowChanged(this, new tblUserGroupRowChangeEvent(((tblUserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblUserGroupRowChanging != null)) {
                    this.tblUserGroupRowChanging(this, new tblUserGroupRowChangeEvent(((tblUserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblUserGroupRowDeleted != null)) {
                    this.tblUserGroupRowDeleted(this, new tblUserGroupRowChangeEvent(((tblUserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblUserGroupRowDeleting != null)) {
                    this.tblUserGroupRowDeleting(this, new tblUserGroupRowChangeEvent(((tblUserGroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblUserGroupRow(tblUserGroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblUserGroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblHelpDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnHeadofFamily;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnReceiveDate;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnCompleteDate;
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnAid;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnAidFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHelpDataTable() {
                this.TableName = "tblHelp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblHelpDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblHelpDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadofFamilyColumn {
                get {
                    return this.columnHeadofFamily;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiveDateColumn {
                get {
                    return this.columnReceiveDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompleteDateColumn {
                get {
                    return this.columnCompleteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AidColumn {
                get {
                    return this.columnAid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AidFromColumn {
                get {
                    return this.columnAidFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHelpRow this[int index] {
                get {
                    return ((tblHelpRow)(this.Rows[index]));
                }
            }
            
            public event tblHelpRowChangeEventHandler tblHelpRowChanging;
            
            public event tblHelpRowChangeEventHandler tblHelpRowChanged;
            
            public event tblHelpRowChangeEventHandler tblHelpRowDeleting;
            
            public event tblHelpRowChangeEventHandler tblHelpRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblHelpRow(tblHelpRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHelpRow AddtblHelpRow(int ID, string FCardNo, string HeadofFamily, string FName, string Orakh, System.DateTime ReceiveDate, string Status, decimal Amount, System.DateTime CompleteDate, string SerialNo, string Remarks, string Aid, string MemberName, string AidFrom) {
                tblHelpRow rowtblHelpRow = ((tblHelpRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        FCardNo,
                        HeadofFamily,
                        FName,
                        Orakh,
                        ReceiveDate,
                        Status,
                        Amount,
                        CompleteDate,
                        SerialNo,
                        Remarks,
                        Aid,
                        MemberName,
                        AidFrom};
                rowtblHelpRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblHelpRow);
                return rowtblHelpRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHelpRow FindByID(int ID) {
                return ((tblHelpRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblHelpDataTable cln = ((tblHelpDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblHelpDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnHeadofFamily = base.Columns["HeadofFamily"];
                this.columnFName = base.Columns["FName"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnReceiveDate = base.Columns["ReceiveDate"];
                this.columnStatus = base.Columns["Status"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCompleteDate = base.Columns["CompleteDate"];
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnAid = base.Columns["Aid"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnAidFrom = base.Columns["AidFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnHeadofFamily = new global::System.Data.DataColumn("HeadofFamily", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadofFamily);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnReceiveDate = new global::System.Data.DataColumn("ReceiveDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveDate);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCompleteDate = new global::System.Data.DataColumn("CompleteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteDate);
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnAid = new global::System.Data.DataColumn("Aid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAid);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnAidFrom = new global::System.Data.DataColumn("AidFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAidFrom);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnFCardNo.MaxLength = 50;
                this.columnHeadofFamily.MaxLength = 50;
                this.columnFName.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnStatus.MaxLength = 50;
                this.columnSerialNo.MaxLength = 5;
                this.columnRemarks.MaxLength = 200;
                this.columnAid.MaxLength = 50;
                this.columnMemberName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHelpRow NewtblHelpRow() {
                return ((tblHelpRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblHelpRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblHelpRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblHelpRowChanged != null)) {
                    this.tblHelpRowChanged(this, new tblHelpRowChangeEvent(((tblHelpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblHelpRowChanging != null)) {
                    this.tblHelpRowChanging(this, new tblHelpRowChangeEvent(((tblHelpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblHelpRowDeleted != null)) {
                    this.tblHelpRowDeleted(this, new tblHelpRowChangeEvent(((tblHelpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblHelpRowDeleting != null)) {
                    this.tblHelpRowDeleting(this, new tblHelpRowChangeEvent(((tblHelpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblHelpRow(tblHelpRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblHelpDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblDailyTransactionsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnVoucher;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnDebit;
            
            private global::System.Data.DataColumn columnCredit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDailyTransactionsDataTable() {
                this.TableName = "tblDailyTransactions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblDailyTransactionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblDailyTransactionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherColumn {
                get {
                    return this.columnVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitColumn {
                get {
                    return this.columnDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDailyTransactionsRow this[int index] {
                get {
                    return ((tblDailyTransactionsRow)(this.Rows[index]));
                }
            }
            
            public event tblDailyTransactionsRowChangeEventHandler tblDailyTransactionsRowChanging;
            
            public event tblDailyTransactionsRowChangeEventHandler tblDailyTransactionsRowChanged;
            
            public event tblDailyTransactionsRowChangeEventHandler tblDailyTransactionsRowDeleting;
            
            public event tblDailyTransactionsRowChangeEventHandler tblDailyTransactionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblDailyTransactionsRow(tblDailyTransactionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDailyTransactionsRow AddtblDailyTransactionsRow(int DocumentNo, string Voucher, System.DateTime Dated, string AccountName, string Narration, decimal Debit, decimal Credit) {
                tblDailyTransactionsRow rowtblDailyTransactionsRow = ((tblDailyTransactionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentNo,
                        Voucher,
                        Dated,
                        AccountName,
                        Narration,
                        Debit,
                        Credit};
                rowtblDailyTransactionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblDailyTransactionsRow);
                return rowtblDailyTransactionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblDailyTransactionsDataTable cln = ((tblDailyTransactionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblDailyTransactionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnVoucher = base.Columns["Voucher"];
                this.columnDated = base.Columns["Dated"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnNarration = base.Columns["Narration"];
                this.columnDebit = base.Columns["Debit"];
                this.columnCredit = base.Columns["Credit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnVoucher = new global::System.Data.DataColumn("Voucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnDebit = new global::System.Data.DataColumn("Debit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnVoucher.MaxLength = 50;
                this.columnAccountName.MaxLength = 255;
                this.columnNarration.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDailyTransactionsRow NewtblDailyTransactionsRow() {
                return ((tblDailyTransactionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblDailyTransactionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblDailyTransactionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblDailyTransactionsRowChanged != null)) {
                    this.tblDailyTransactionsRowChanged(this, new tblDailyTransactionsRowChangeEvent(((tblDailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblDailyTransactionsRowChanging != null)) {
                    this.tblDailyTransactionsRowChanging(this, new tblDailyTransactionsRowChangeEvent(((tblDailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblDailyTransactionsRowDeleted != null)) {
                    this.tblDailyTransactionsRowDeleted(this, new tblDailyTransactionsRowChangeEvent(((tblDailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblDailyTransactionsRowDeleting != null)) {
                    this.tblDailyTransactionsRowDeleting(this, new tblDailyTransactionsRowChangeEvent(((tblDailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblDailyTransactionsRow(tblDailyTransactionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblDailyTransactionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblAdvance1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnRecFrom;
            
            private global::System.Data.DataColumn columnPersons;
            
            private global::System.Data.DataColumn columnPerPerson;
            
            private global::System.Data.DataColumn columnAdvPercent;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvance1DataTable() {
                this.TableName = "tblAdvance1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAdvance1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblAdvance1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecFromColumn {
                get {
                    return this.columnRecFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonsColumn {
                get {
                    return this.columnPersons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerPersonColumn {
                get {
                    return this.columnPerPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvPercentColumn {
                get {
                    return this.columnAdvPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvance1Row this[int index] {
                get {
                    return ((tblAdvance1Row)(this.Rows[index]));
                }
            }
            
            public event tblAdvance1RowChangeEventHandler tblAdvance1RowChanging;
            
            public event tblAdvance1RowChangeEventHandler tblAdvance1RowChanged;
            
            public event tblAdvance1RowChangeEventHandler tblAdvance1RowDeleting;
            
            public event tblAdvance1RowChangeEventHandler tblAdvance1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblAdvance1Row(tblAdvance1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvance1Row AddtblAdvance1Row(string FCardNo, string RecFrom, decimal Persons, decimal PerPerson, decimal AdvPercent, decimal Amount, string ReceiptNo, System.DateTime Date) {
                tblAdvance1Row rowtblAdvance1Row = ((tblAdvance1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FCardNo,
                        RecFrom,
                        Persons,
                        PerPerson,
                        AdvPercent,
                        Amount,
                        ReceiptNo,
                        Date};
                rowtblAdvance1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblAdvance1Row);
                return rowtblAdvance1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvance1Row FindByID(int ID) {
                return ((tblAdvance1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblAdvance1DataTable cln = ((tblAdvance1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblAdvance1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnRecFrom = base.Columns["RecFrom"];
                this.columnPersons = base.Columns["Persons"];
                this.columnPerPerson = base.Columns["PerPerson"];
                this.columnAdvPercent = base.Columns["AdvPercent"];
                this.columnAmount = base.Columns["Amount"];
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnDate = base.Columns["Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnRecFrom = new global::System.Data.DataColumn("RecFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecFrom);
                this.columnPersons = new global::System.Data.DataColumn("Persons", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersons);
                this.columnPerPerson = new global::System.Data.DataColumn("PerPerson", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerPerson);
                this.columnAdvPercent = new global::System.Data.DataColumn("AdvPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvPercent);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnFCardNo.MaxLength = 5;
                this.columnRecFrom.MaxLength = 50;
                this.columnReceiptNo.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvance1Row NewtblAdvance1Row() {
                return ((tblAdvance1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblAdvance1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblAdvance1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblAdvance1RowChanged != null)) {
                    this.tblAdvance1RowChanged(this, new tblAdvance1RowChangeEvent(((tblAdvance1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblAdvance1RowChanging != null)) {
                    this.tblAdvance1RowChanging(this, new tblAdvance1RowChangeEvent(((tblAdvance1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblAdvance1RowDeleted != null)) {
                    this.tblAdvance1RowDeleted(this, new tblAdvance1RowChangeEvent(((tblAdvance1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblAdvance1RowDeleting != null)) {
                    this.tblAdvance1RowDeleting(this, new tblAdvance1RowChangeEvent(((tblAdvance1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblAdvance1Row(tblAdvance1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblAdvance1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblAdvanceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnHead;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnhbkReceipt;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvanceDataTable() {
                this.TableName = "tblAdvance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAdvanceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblAdvanceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadColumn {
                get {
                    return this.columnHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hbkReceiptColumn {
                get {
                    return this.columnhbkReceipt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvanceRow this[int index] {
                get {
                    return ((tblAdvanceRow)(this.Rows[index]));
                }
            }
            
            public event tblAdvanceRowChangeEventHandler tblAdvanceRowChanging;
            
            public event tblAdvanceRowChangeEventHandler tblAdvanceRowChanged;
            
            public event tblAdvanceRowChangeEventHandler tblAdvanceRowDeleting;
            
            public event tblAdvanceRowChangeEventHandler tblAdvanceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblAdvanceRow(tblAdvanceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvanceRow AddtblAdvanceRow(string ReceiptNo, System.DateTime Date, string FCardNo, string Head, string FName, string Orakh, string ContactNo, string AccountName, string hbkReceipt, decimal Amount) {
                tblAdvanceRow rowtblAdvanceRow = ((tblAdvanceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptNo,
                        Date,
                        FCardNo,
                        Head,
                        FName,
                        Orakh,
                        ContactNo,
                        AccountName,
                        hbkReceipt,
                        Amount};
                rowtblAdvanceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblAdvanceRow);
                return rowtblAdvanceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblAdvanceDataTable cln = ((tblAdvanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblAdvanceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnDate = base.Columns["Date"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnHead = base.Columns["Head"];
                this.columnFName = base.Columns["FName"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnhbkReceipt = base.Columns["hbkReceipt"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnHead = new global::System.Data.DataColumn("Head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHead);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnhbkReceipt = new global::System.Data.DataColumn("hbkReceipt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhbkReceipt);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnReceiptNo.MaxLength = 5;
                this.columnFCardNo.MaxLength = 5;
                this.columnHead.MaxLength = 50;
                this.columnFName.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnContactNo.MaxLength = 50;
                this.columnAccountName.MaxLength = 255;
                this.columnhbkReceipt.MaxLength = 5;
                this.columnAmount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvanceRow NewtblAdvanceRow() {
                return ((tblAdvanceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblAdvanceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblAdvanceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblAdvanceRowChanged != null)) {
                    this.tblAdvanceRowChanged(this, new tblAdvanceRowChangeEvent(((tblAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblAdvanceRowChanging != null)) {
                    this.tblAdvanceRowChanging(this, new tblAdvanceRowChangeEvent(((tblAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblAdvanceRowDeleted != null)) {
                    this.tblAdvanceRowDeleted(this, new tblAdvanceRowChangeEvent(((tblAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblAdvanceRowDeleting != null)) {
                    this.tblAdvanceRowDeleting(this, new tblAdvanceRowChangeEvent(((tblAdvanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblAdvanceRow(tblAdvanceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblAdvanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblNICFormDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnHead;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnOrakh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICFormDataTable() {
                this.TableName = "tblNICForm";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblNICFormDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblNICFormDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadColumn {
                get {
                    return this.columnHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICFormRow this[int index] {
                get {
                    return ((tblNICFormRow)(this.Rows[index]));
                }
            }
            
            public event tblNICFormRowChangeEventHandler tblNICFormRowChanging;
            
            public event tblNICFormRowChangeEventHandler tblNICFormRowChanged;
            
            public event tblNICFormRowChangeEventHandler tblNICFormRowDeleting;
            
            public event tblNICFormRowChangeEventHandler tblNICFormRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblNICFormRow(tblNICFormRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICFormRow AddtblNICFormRow(string ReceiptNo, System.DateTime Date, string FCardNo, string Head, string FName, string Orakh) {
                tblNICFormRow rowtblNICFormRow = ((tblNICFormRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptNo,
                        Date,
                        FCardNo,
                        Head,
                        FName,
                        Orakh};
                rowtblNICFormRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblNICFormRow);
                return rowtblNICFormRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblNICFormDataTable cln = ((tblNICFormDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblNICFormDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnDate = base.Columns["Date"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnHead = base.Columns["Head"];
                this.columnFName = base.Columns["FName"];
                this.columnOrakh = base.Columns["Orakh"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnHead = new global::System.Data.DataColumn("Head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHead);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnReceiptNo.MaxLength = 5;
                this.columnFCardNo.MaxLength = 5;
                this.columnHead.MaxLength = 50;
                this.columnFName.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICFormRow NewtblNICFormRow() {
                return ((tblNICFormRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblNICFormRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblNICFormRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblNICFormRowChanged != null)) {
                    this.tblNICFormRowChanged(this, new tblNICFormRowChangeEvent(((tblNICFormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblNICFormRowChanging != null)) {
                    this.tblNICFormRowChanging(this, new tblNICFormRowChangeEvent(((tblNICFormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblNICFormRowDeleted != null)) {
                    this.tblNICFormRowDeleted(this, new tblNICFormRowChangeEvent(((tblNICFormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblNICFormRowDeleting != null)) {
                    this.tblNICFormRowDeleting(this, new tblNICFormRowChangeEvent(((tblNICFormRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblNICFormRow(tblNICFormRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblNICFormDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblAidsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnAid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAidsDataTable() {
                this.TableName = "tblAids";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAidsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblAidsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AidColumn {
                get {
                    return this.columnAid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAidsRow this[int index] {
                get {
                    return ((tblAidsRow)(this.Rows[index]));
                }
            }
            
            public event tblAidsRowChangeEventHandler tblAidsRowChanging;
            
            public event tblAidsRowChangeEventHandler tblAidsRowChanged;
            
            public event tblAidsRowChangeEventHandler tblAidsRowDeleting;
            
            public event tblAidsRowChangeEventHandler tblAidsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblAidsRow(tblAidsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAidsRow AddtblAidsRow(string Aid) {
                tblAidsRow rowtblAidsRow = ((tblAidsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Aid};
                rowtblAidsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblAidsRow);
                return rowtblAidsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAidsRow FindByID(int ID) {
                return ((tblAidsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblAidsDataTable cln = ((tblAidsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblAidsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnAid = base.Columns["Aid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnAid = new global::System.Data.DataColumn("Aid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAid.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAidsRow NewtblAidsRow() {
                return ((tblAidsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblAidsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblAidsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblAidsRowChanged != null)) {
                    this.tblAidsRowChanged(this, new tblAidsRowChangeEvent(((tblAidsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblAidsRowChanging != null)) {
                    this.tblAidsRowChanging(this, new tblAidsRowChangeEvent(((tblAidsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblAidsRowDeleted != null)) {
                    this.tblAidsRowDeleted(this, new tblAidsRowChangeEvent(((tblAidsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblAidsRowDeleting != null)) {
                    this.tblAidsRowDeleting(this, new tblAidsRowChangeEvent(((tblAidsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblAidsRow(tblAidsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblAidsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_SEL_CancelledEventsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEventCancellationId;
            
            private global::System.Data.DataColumn columnEventId;
            
            private global::System.Data.DataColumn columnHallNo;
            
            private global::System.Data.DataColumn columnCancellationDate;
            
            private global::System.Data.DataColumn columnEventDate;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnBookingId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_CancelledEventsDataTable() {
                this.TableName = "usp_SEL_CancelledEvents";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_CancelledEventsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_SEL_CancelledEventsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventCancellationIdColumn {
                get {
                    return this.columnEventCancellationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventIdColumn {
                get {
                    return this.columnEventId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HallNoColumn {
                get {
                    return this.columnHallNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CancellationDateColumn {
                get {
                    return this.columnCancellationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventDateColumn {
                get {
                    return this.columnEventDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingIdColumn {
                get {
                    return this.columnBookingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_CancelledEventsRow this[int index] {
                get {
                    return ((usp_SEL_CancelledEventsRow)(this.Rows[index]));
                }
            }
            
            public event usp_SEL_CancelledEventsRowChangeEventHandler usp_SEL_CancelledEventsRowChanging;
            
            public event usp_SEL_CancelledEventsRowChangeEventHandler usp_SEL_CancelledEventsRowChanged;
            
            public event usp_SEL_CancelledEventsRowChangeEventHandler usp_SEL_CancelledEventsRowDeleting;
            
            public event usp_SEL_CancelledEventsRowChangeEventHandler usp_SEL_CancelledEventsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_SEL_CancelledEventsRow(usp_SEL_CancelledEventsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_CancelledEventsRow Addusp_SEL_CancelledEventsRow(long EventId, string HallNo, System.DateTime CancellationDate, System.DateTime EventDate, bool IsActive, string Comments, long BookingId) {
                usp_SEL_CancelledEventsRow rowusp_SEL_CancelledEventsRow = ((usp_SEL_CancelledEventsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EventId,
                        HallNo,
                        CancellationDate,
                        EventDate,
                        IsActive,
                        Comments,
                        BookingId};
                rowusp_SEL_CancelledEventsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_SEL_CancelledEventsRow);
                return rowusp_SEL_CancelledEventsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_CancelledEventsRow FindByEventCancellationId(long EventCancellationId) {
                return ((usp_SEL_CancelledEventsRow)(this.Rows.Find(new object[] {
                            EventCancellationId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_SEL_CancelledEventsDataTable cln = ((usp_SEL_CancelledEventsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_SEL_CancelledEventsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEventCancellationId = base.Columns["EventCancellationId"];
                this.columnEventId = base.Columns["EventId"];
                this.columnHallNo = base.Columns["HallNo"];
                this.columnCancellationDate = base.Columns["CancellationDate"];
                this.columnEventDate = base.Columns["EventDate"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnComments = base.Columns["Comments"];
                this.columnBookingId = base.Columns["BookingId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEventCancellationId = new global::System.Data.DataColumn("EventCancellationId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventCancellationId);
                this.columnEventId = new global::System.Data.DataColumn("EventId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventId);
                this.columnHallNo = new global::System.Data.DataColumn("HallNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHallNo);
                this.columnCancellationDate = new global::System.Data.DataColumn("CancellationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancellationDate);
                this.columnEventDate = new global::System.Data.DataColumn("EventDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventDate);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnBookingId = new global::System.Data.DataColumn("BookingId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEventCancellationId}, true));
                this.columnEventCancellationId.AutoIncrement = true;
                this.columnEventCancellationId.AllowDBNull = false;
                this.columnEventCancellationId.ReadOnly = true;
                this.columnEventCancellationId.Unique = true;
                this.columnHallNo.MaxLength = 50;
                this.columnComments.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_CancelledEventsRow Newusp_SEL_CancelledEventsRow() {
                return ((usp_SEL_CancelledEventsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_SEL_CancelledEventsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_SEL_CancelledEventsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_SEL_CancelledEventsRowChanged != null)) {
                    this.usp_SEL_CancelledEventsRowChanged(this, new usp_SEL_CancelledEventsRowChangeEvent(((usp_SEL_CancelledEventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_SEL_CancelledEventsRowChanging != null)) {
                    this.usp_SEL_CancelledEventsRowChanging(this, new usp_SEL_CancelledEventsRowChangeEvent(((usp_SEL_CancelledEventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_SEL_CancelledEventsRowDeleted != null)) {
                    this.usp_SEL_CancelledEventsRowDeleted(this, new usp_SEL_CancelledEventsRowChangeEvent(((usp_SEL_CancelledEventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_SEL_CancelledEventsRowDeleting != null)) {
                    this.usp_SEL_CancelledEventsRowDeleting(this, new usp_SEL_CancelledEventsRowChangeEvent(((usp_SEL_CancelledEventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_SEL_CancelledEventsRow(usp_SEL_CancelledEventsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_SEL_CancelledEventsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_RPT_DailyTransactionsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnVoucher;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnDebit;
            
            private global::System.Data.DataColumn columnCredit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_RPT_DailyTransactionsDataTable() {
                this.TableName = "usp_RPT_DailyTransactions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_RPT_DailyTransactionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_RPT_DailyTransactionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherColumn {
                get {
                    return this.columnVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitColumn {
                get {
                    return this.columnDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_RPT_DailyTransactionsRow this[int index] {
                get {
                    return ((usp_RPT_DailyTransactionsRow)(this.Rows[index]));
                }
            }
            
            public event usp_RPT_DailyTransactionsRowChangeEventHandler usp_RPT_DailyTransactionsRowChanging;
            
            public event usp_RPT_DailyTransactionsRowChangeEventHandler usp_RPT_DailyTransactionsRowChanged;
            
            public event usp_RPT_DailyTransactionsRowChangeEventHandler usp_RPT_DailyTransactionsRowDeleting;
            
            public event usp_RPT_DailyTransactionsRowChangeEventHandler usp_RPT_DailyTransactionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_RPT_DailyTransactionsRow(usp_RPT_DailyTransactionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_RPT_DailyTransactionsRow Addusp_RPT_DailyTransactionsRow(int DocumentNo, string Voucher, System.DateTime Dated, string AccountName, string Narration, decimal Debit, decimal Credit) {
                usp_RPT_DailyTransactionsRow rowusp_RPT_DailyTransactionsRow = ((usp_RPT_DailyTransactionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentNo,
                        Voucher,
                        Dated,
                        AccountName,
                        Narration,
                        Debit,
                        Credit};
                rowusp_RPT_DailyTransactionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_RPT_DailyTransactionsRow);
                return rowusp_RPT_DailyTransactionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_RPT_DailyTransactionsDataTable cln = ((usp_RPT_DailyTransactionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_RPT_DailyTransactionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnVoucher = base.Columns["Voucher"];
                this.columnDated = base.Columns["Dated"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnNarration = base.Columns["Narration"];
                this.columnDebit = base.Columns["Debit"];
                this.columnCredit = base.Columns["Credit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnVoucher = new global::System.Data.DataColumn("Voucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnDebit = new global::System.Data.DataColumn("Debit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnVoucher.MaxLength = 50;
                this.columnAccountName.MaxLength = 255;
                this.columnNarration.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_RPT_DailyTransactionsRow Newusp_RPT_DailyTransactionsRow() {
                return ((usp_RPT_DailyTransactionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_RPT_DailyTransactionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_RPT_DailyTransactionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_RPT_DailyTransactionsRowChanged != null)) {
                    this.usp_RPT_DailyTransactionsRowChanged(this, new usp_RPT_DailyTransactionsRowChangeEvent(((usp_RPT_DailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_RPT_DailyTransactionsRowChanging != null)) {
                    this.usp_RPT_DailyTransactionsRowChanging(this, new usp_RPT_DailyTransactionsRowChangeEvent(((usp_RPT_DailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_RPT_DailyTransactionsRowDeleted != null)) {
                    this.usp_RPT_DailyTransactionsRowDeleted(this, new usp_RPT_DailyTransactionsRowChangeEvent(((usp_RPT_DailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_RPT_DailyTransactionsRowDeleting != null)) {
                    this.usp_RPT_DailyTransactionsRowDeleting(this, new usp_RPT_DailyTransactionsRowChangeEvent(((usp_RPT_DailyTransactionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_RPT_DailyTransactionsRow(usp_RPT_DailyTransactionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_RPT_DailyTransactionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_DailyTransactions_ReportDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnVoucher;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnDebit;
            
            private global::System.Data.DataColumn columnCredit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_DailyTransactions_ReportDataTable() {
                this.TableName = "usp_DailyTransactions_Report";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_DailyTransactions_ReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_DailyTransactions_ReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherColumn {
                get {
                    return this.columnVoucher;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitColumn {
                get {
                    return this.columnDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditColumn {
                get {
                    return this.columnCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_DailyTransactions_ReportRow this[int index] {
                get {
                    return ((usp_DailyTransactions_ReportRow)(this.Rows[index]));
                }
            }
            
            public event usp_DailyTransactions_ReportRowChangeEventHandler usp_DailyTransactions_ReportRowChanging;
            
            public event usp_DailyTransactions_ReportRowChangeEventHandler usp_DailyTransactions_ReportRowChanged;
            
            public event usp_DailyTransactions_ReportRowChangeEventHandler usp_DailyTransactions_ReportRowDeleting;
            
            public event usp_DailyTransactions_ReportRowChangeEventHandler usp_DailyTransactions_ReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_DailyTransactions_ReportRow(usp_DailyTransactions_ReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_DailyTransactions_ReportRow Addusp_DailyTransactions_ReportRow(int DocumentNo, string Voucher, System.DateTime Dated, string AccountName, string Narration, decimal Debit, decimal Credit) {
                usp_DailyTransactions_ReportRow rowusp_DailyTransactions_ReportRow = ((usp_DailyTransactions_ReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentNo,
                        Voucher,
                        Dated,
                        AccountName,
                        Narration,
                        Debit,
                        Credit};
                rowusp_DailyTransactions_ReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_DailyTransactions_ReportRow);
                return rowusp_DailyTransactions_ReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_DailyTransactions_ReportDataTable cln = ((usp_DailyTransactions_ReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_DailyTransactions_ReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnVoucher = base.Columns["Voucher"];
                this.columnDated = base.Columns["Dated"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnNarration = base.Columns["Narration"];
                this.columnDebit = base.Columns["Debit"];
                this.columnCredit = base.Columns["Credit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnVoucher = new global::System.Data.DataColumn("Voucher", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucher);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnDebit = new global::System.Data.DataColumn("Debit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit);
                this.columnCredit = new global::System.Data.DataColumn("Credit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredit);
                this.columnVoucher.MaxLength = 50;
                this.columnAccountName.ReadOnly = true;
                this.columnAccountName.MaxLength = 255;
                this.columnNarration.MaxLength = 255;
                this.columnDebit.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_DailyTransactions_ReportRow Newusp_DailyTransactions_ReportRow() {
                return ((usp_DailyTransactions_ReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_DailyTransactions_ReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_DailyTransactions_ReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_DailyTransactions_ReportRowChanged != null)) {
                    this.usp_DailyTransactions_ReportRowChanged(this, new usp_DailyTransactions_ReportRowChangeEvent(((usp_DailyTransactions_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_DailyTransactions_ReportRowChanging != null)) {
                    this.usp_DailyTransactions_ReportRowChanging(this, new usp_DailyTransactions_ReportRowChangeEvent(((usp_DailyTransactions_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_DailyTransactions_ReportRowDeleted != null)) {
                    this.usp_DailyTransactions_ReportRowDeleted(this, new usp_DailyTransactions_ReportRowChangeEvent(((usp_DailyTransactions_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_DailyTransactions_ReportRowDeleting != null)) {
                    this.usp_DailyTransactions_ReportRowDeleting(this, new usp_DailyTransactions_ReportRowChangeEvent(((usp_DailyTransactions_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_DailyTransactions_ReportRow(usp_DailyTransactions_ReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_DailyTransactions_ReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_GetHallBookingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSerialno;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnMr;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnEvents;
            
            private global::System.Data.DataColumn columnEventDate;
            
            private global::System.Data.DataColumn columnDay;
            
            private global::System.Data.DataColumn columnFromTime;
            
            private global::System.Data.DataColumn columnToTime;
            
            private global::System.Data.DataColumn columnHall1;
            
            private global::System.Data.DataColumn columnHall2;
            
            private global::System.Data.DataColumn columnHall3;
            
            private global::System.Data.DataColumn columnHall4;
            
            private global::System.Data.DataColumn columnHall5;
            
            private global::System.Data.DataColumn columnContactNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingDataTable() {
                this.TableName = "usp_GetHallBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_GetHallBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_GetHallBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialnoColumn {
                get {
                    return this.columnSerialno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MrColumn {
                get {
                    return this.columnMr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventsColumn {
                get {
                    return this.columnEvents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventDateColumn {
                get {
                    return this.columnEventDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayColumn {
                get {
                    return this.columnDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall1Column {
                get {
                    return this.columnHall1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall2Column {
                get {
                    return this.columnHall2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall3Column {
                get {
                    return this.columnHall3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall4Column {
                get {
                    return this.columnHall4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall5Column {
                get {
                    return this.columnHall5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow this[int index] {
                get {
                    return ((usp_GetHallBookingRow)(this.Rows[index]));
                }
            }
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowChanging;
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowChanged;
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowDeleting;
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_GetHallBookingRow(usp_GetHallBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow Addusp_GetHallBookingRow(int Serialno, string FCardNo, string Mr, string Orakh, string Events, System.DateTime EventDate, System.DateTime Day, System.DateTime FromTime, System.DateTime ToTime, bool Hall1, bool Hall2, bool Hall3, bool Hall4, bool Hall5, string ContactNo) {
                usp_GetHallBookingRow rowusp_GetHallBookingRow = ((usp_GetHallBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Serialno,
                        FCardNo,
                        Mr,
                        Orakh,
                        Events,
                        EventDate,
                        Day,
                        FromTime,
                        ToTime,
                        Hall1,
                        Hall2,
                        Hall3,
                        Hall4,
                        Hall5,
                        ContactNo};
                rowusp_GetHallBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_GetHallBookingRow);
                return rowusp_GetHallBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_GetHallBookingDataTable cln = ((usp_GetHallBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_GetHallBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSerialno = base.Columns["Serialno"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnMr = base.Columns["Mr"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnEvents = base.Columns["Events"];
                this.columnEventDate = base.Columns["EventDate"];
                this.columnDay = base.Columns["Day"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToTime = base.Columns["ToTime"];
                this.columnHall1 = base.Columns["Hall1"];
                this.columnHall2 = base.Columns["Hall2"];
                this.columnHall3 = base.Columns["Hall3"];
                this.columnHall4 = base.Columns["Hall4"];
                this.columnHall5 = base.Columns["Hall5"];
                this.columnContactNo = base.Columns["ContactNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSerialno = new global::System.Data.DataColumn("Serialno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialno);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnMr = new global::System.Data.DataColumn("Mr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMr);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnEvents = new global::System.Data.DataColumn("Events", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvents);
                this.columnEventDate = new global::System.Data.DataColumn("EventDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventDate);
                this.columnDay = new global::System.Data.DataColumn("Day", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay);
                this.columnFromTime = new global::System.Data.DataColumn("FromTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.columnHall1 = new global::System.Data.DataColumn("Hall1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall1);
                this.columnHall2 = new global::System.Data.DataColumn("Hall2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall2);
                this.columnHall3 = new global::System.Data.DataColumn("Hall3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall3);
                this.columnHall4 = new global::System.Data.DataColumn("Hall4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall4);
                this.columnHall5 = new global::System.Data.DataColumn("Hall5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall5);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnFCardNo.MaxLength = 5;
                this.columnMr.MaxLength = 100;
                this.columnOrakh.MaxLength = 50;
                this.columnEvents.MaxLength = 50;
                this.columnContactNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow Newusp_GetHallBookingRow() {
                return ((usp_GetHallBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_GetHallBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_GetHallBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_GetHallBookingRowChanged != null)) {
                    this.usp_GetHallBookingRowChanged(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_GetHallBookingRowChanging != null)) {
                    this.usp_GetHallBookingRowChanging(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_GetHallBookingRowDeleted != null)) {
                    this.usp_GetHallBookingRowDeleted(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_GetHallBookingRowDeleting != null)) {
                    this.usp_GetHallBookingRowDeleting(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_GetHallBookingRow(usp_GetHallBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ComDataSet ds = new ComDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_GetHallBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_HallBooking_SearchRow : global::System.Data.DataRow {
            
            private usp_HallBooking_SearchDataTable tableusp_HallBooking_Search;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_HallBooking_SearchRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_HallBooking_Search = ((usp_HallBooking_SearchDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SerialNo {
                get {
                    try {
                        return ((int)(this[this.tableusp_HallBooking_Search.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_HallBooking_Search.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookedBy {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search.BookedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookedBy\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.BookedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Events {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search.EventsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Events\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.EventsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall1 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search.Hall1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall1\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.Hall1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall2 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search.Hall2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall2\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.Hall2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall3 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search.Hall3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall3\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.Hall3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall4 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search.Hall4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall4\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.Hall4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_HallBooking_Search.FromTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromTime\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.FromTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_HallBooking_Search.ToTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToTime\' in table \'usp_HallBooking_Search\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tableusp_HallBooking_Search.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tableusp_HallBooking_Search.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableusp_HallBooking_Search.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableusp_HallBooking_Search.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookedByNull() {
                return this.IsNull(this.tableusp_HallBooking_Search.BookedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookedByNull() {
                this[this.tableusp_HallBooking_Search.BookedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventsNull() {
                return this.IsNull(this.tableusp_HallBooking_Search.EventsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventsNull() {
                this[this.tableusp_HallBooking_Search.EventsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall1Null() {
                return this.IsNull(this.tableusp_HallBooking_Search.Hall1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall1Null() {
                this[this.tableusp_HallBooking_Search.Hall1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall2Null() {
                return this.IsNull(this.tableusp_HallBooking_Search.Hall2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall2Null() {
                this[this.tableusp_HallBooking_Search.Hall2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall3Null() {
                return this.IsNull(this.tableusp_HallBooking_Search.Hall3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall3Null() {
                this[this.tableusp_HallBooking_Search.Hall3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall4Null() {
                return this.IsNull(this.tableusp_HallBooking_Search.Hall4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall4Null() {
                this[this.tableusp_HallBooking_Search.Hall4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromTimeNull() {
                return this.IsNull(this.tableusp_HallBooking_Search.FromTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromTimeNull() {
                this[this.tableusp_HallBooking_Search.FromTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToTimeNull() {
                return this.IsNull(this.tableusp_HallBooking_Search.ToTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToTimeNull() {
                this[this.tableusp_HallBooking_Search.ToTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_DDL_USERRow : global::System.Data.DataRow {
            
            private usp_SEL_DDL_USERDataTable tableusp_SEL_DDL_USER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_DDL_USERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_DDL_USER = ((usp_SEL_DDL_USERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableusp_SEL_DDL_USER.UserIDColumn]));
                }
                set {
                    this[this.tableusp_SEL_DDL_USER.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_DDL_USER.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'usp_SEL_DDL_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_DDL_USER.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tableusp_SEL_DDL_USER.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tableusp_SEL_DDL_USER.UserNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblPermissionRow : global::System.Data.DataRow {
            
            private usp_SEL_tblPermissionDataTable tableusp_SEL_tblPermission;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblPermissionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblPermission = ((usp_SEL_tblPermissionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PermissionID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblPermission.PermissionIDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblPermission.PermissionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tableusp_SEL_tblPermission.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'usp_SEL_tblPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblPermission.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SecurityLevelID {
                get {
                    try {
                        return ((int)(this[this.tableusp_SEL_tblPermission.SecurityLevelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityLevelID\' in table \'usp_SEL_tblPermission\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblPermission.SecurityLevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Read {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_tblPermission.ReadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Read\' in table \'usp_SEL_tblPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblPermission.ReadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Write {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_tblPermission.WriteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Write\' in table \'usp_SEL_tblPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblPermission.WriteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Modify {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_tblPermission.ModifyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modify\' in table \'usp_SEL_tblPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblPermission.ModifyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Delete {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_tblPermission.DeleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Delete\' in table \'usp_SEL_tblPermission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblPermission.DeleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Inactive_FL {
                get {
                    return ((bool)(this[this.tableusp_SEL_tblPermission.Inactive_FLColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblPermission.Inactive_FLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableusp_SEL_tblPermission.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableusp_SEL_tblPermission.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecurityLevelIDNull() {
                return this.IsNull(this.tableusp_SEL_tblPermission.SecurityLevelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecurityLevelIDNull() {
                this[this.tableusp_SEL_tblPermission.SecurityLevelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReadNull() {
                return this.IsNull(this.tableusp_SEL_tblPermission.ReadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReadNull() {
                this[this.tableusp_SEL_tblPermission.ReadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWriteNull() {
                return this.IsNull(this.tableusp_SEL_tblPermission.WriteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWriteNull() {
                this[this.tableusp_SEL_tblPermission.WriteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifyNull() {
                return this.IsNull(this.tableusp_SEL_tblPermission.ModifyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifyNull() {
                this[this.tableusp_SEL_tblPermission.ModifyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleteNull() {
                return this.IsNull(this.tableusp_SEL_tblPermission.DeleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeleteNull() {
                this[this.tableusp_SEL_tblPermission.DeleteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_FAMILYRow : global::System.Data.DataRow {
            
            private usp_SEL_FAMILYDataTable tableusp_SEL_FAMILY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_FAMILYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_FAMILY = ((usp_SEL_FAMILYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    return ((string)(this[this.tableusp_SEL_FAMILY.FCardNoColumn]));
                }
                set {
                    this[this.tableusp_SEL_FAMILY.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.FamilyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyName\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.FamilyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyLeader {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.FamilyLeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyLeader\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.FamilyLeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResidentAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.ResidentAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidentAddress\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.ResidentAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResidentPhone {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.ResidentPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidentPhone\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.ResidentPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.BusinessNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessName\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.BusinessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.BusinessAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessAddress\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.BusinessAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.BusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessPhone\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.BusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessFax {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.BusinessFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessFax\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.BusinessFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sign {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.SignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sign\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.SignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nukh {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.NukhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nukh\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.NukhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Village {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.VillageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Village\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.VillageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime IssueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_FAMILY.IssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueDate\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.IssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_FAMILY.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Restricted {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.RestrictedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Restricted\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.RestrictedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reason\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentFCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.ParentFCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentFCardNo\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.ParentFCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RenewalDueFrom {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.RenewalDueFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenewalDueFrom\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.RenewalDueFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardRenewalTo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_FAMILY.CardRenewalToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardRenewalTo\' in table \'usp_SEL_FAMILY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_FAMILY.CardRenewalToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyNameNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.FamilyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyNameNull() {
                this[this.tableusp_SEL_FAMILY.FamilyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyLeaderNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.FamilyLeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyLeaderNull() {
                this[this.tableusp_SEL_FAMILY.FamilyLeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableusp_SEL_FAMILY.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableusp_SEL_FAMILY.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tableusp_SEL_FAMILY.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidentAddressNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.ResidentAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidentAddressNull() {
                this[this.tableusp_SEL_FAMILY.ResidentAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidentPhoneNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.ResidentPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidentPhoneNull() {
                this[this.tableusp_SEL_FAMILY.ResidentPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableusp_SEL_FAMILY.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessNameNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.BusinessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessNameNull() {
                this[this.tableusp_SEL_FAMILY.BusinessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableusp_SEL_FAMILY.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableusp_SEL_FAMILY.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessAddressNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.BusinessAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessAddressNull() {
                this[this.tableusp_SEL_FAMILY.BusinessAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessPhoneNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.BusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessPhoneNull() {
                this[this.tableusp_SEL_FAMILY.BusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessFaxNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.BusinessFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessFaxNull() {
                this[this.tableusp_SEL_FAMILY.BusinessFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableusp_SEL_FAMILY.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tableusp_SEL_FAMILY.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.SignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignNull() {
                this[this.tableusp_SEL_FAMILY.SignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.NukhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhNull() {
                this[this.tableusp_SEL_FAMILY.NukhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVillageNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.VillageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVillageNull() {
                this[this.tableusp_SEL_FAMILY.VillageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueDateNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.IssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueDateNull() {
                this[this.tableusp_SEL_FAMILY.IssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_SEL_FAMILY.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableusp_SEL_FAMILY.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tableusp_SEL_FAMILY.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestrictedNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.RestrictedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestrictedNull() {
                this[this.tableusp_SEL_FAMILY.RestrictedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tableusp_SEL_FAMILY.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentFCardNoNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.ParentFCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentFCardNoNull() {
                this[this.tableusp_SEL_FAMILY.ParentFCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRenewalDueFromNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.RenewalDueFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRenewalDueFromNull() {
                this[this.tableusp_SEL_FAMILY.RenewalDueFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableusp_SEL_FAMILY.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardRenewalToNull() {
                return this.IsNull(this.tableusp_SEL_FAMILY.CardRenewalToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardRenewalToNull() {
                this[this.tableusp_SEL_FAMILY.CardRenewalToColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblNukhRow : global::System.Data.DataRow {
            
            private usp_SEL_tblNukhDataTable tableusp_SEL_tblNukh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblNukhRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblNukh = ((usp_SEL_tblNukhDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblNukh.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblNukh.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NukhName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblNukh.NukhNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NukhName\' in table \'usp_SEL_tblNukh\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblNukh.NukhNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhNameNull() {
                return this.IsNull(this.tableusp_SEL_tblNukh.NukhNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhNameNull() {
                this[this.tableusp_SEL_tblNukh.NukhNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblOrakhRow : global::System.Data.DataRow {
            
            private usp_SEL_tblOrakhDataTable tableusp_SEL_tblOrakh;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblOrakhRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblOrakh = ((usp_SEL_tblOrakhDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblOrakh.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblOrakh.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrakhName {
                get {
                    return ((string)(this[this.tableusp_SEL_tblOrakh.OrakhNameColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblOrakh.OrakhNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblCityRow : global::System.Data.DataRow {
            
            private usp_SEL_tblCityDataTable tableusp_SEL_tblCity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblCityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblCity = ((usp_SEL_tblCityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblCity.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblCity.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblCity.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'usp_SEL_tblCity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblCity.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableusp_SEL_tblCity.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableusp_SEL_tblCity.CityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblVillageRow : global::System.Data.DataRow {
            
            private usp_SEL_tblVillageDataTable tableusp_SEL_tblVillage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblVillageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblVillage = ((usp_SEL_tblVillageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblVillage.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblVillage.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Village {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblVillage.VillageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Village\' in table \'usp_SEL_tblVillage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblVillage.VillageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVillageNull() {
                return this.IsNull(this.tableusp_SEL_tblVillage.VillageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVillageNull() {
                this[this.tableusp_SEL_tblVillage.VillageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblFamilyMemberRow : global::System.Data.DataRow {
            
            private usp_SEL_tblFamilyMemberDataTable tableusp_SEL_tblFamilyMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblFamilyMemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblFamilyMember = ((usp_SEL_tblFamilyMemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaderRelation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.LeaderRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaderRelation\' in table \'usp_SEL_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.LeaderRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.BloodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodGroup\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.BloodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.CNICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNIC\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.CNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcademicEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.AcademicEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcademicEducation\' in table \'usp_SEL_tblFamilyMember\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.AcademicEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TechnicalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.TechnicalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnicalEducation\' in table \'usp_SEL_tblFamilyMember\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.TechnicalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProfessionalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.ProfessionalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfessionalEducation\' in table \'usp_SEL_tblFamilyMember\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.ProfessionalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.BusinessNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessName\' in table \'usp_SEL_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.BusinessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.BusinessAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessAddress\' in table \'usp_SEL_tblFamilyMember\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.BusinessAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.BusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessPhone\' in table \'usp_SEL_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.BusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessFax {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.BusinessFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessFax\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.BusinessFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_tblFamilyMember.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reason\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime D_Incident {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_tblFamilyMember.D_IncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D_Incident\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.D_IncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HusbandName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.HusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HusbandName\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.HusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'usp_SEL_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outof {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.OutofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outof\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.OutofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FamilyMemberID {
                get {
                    return ((long)(this[this.tableusp_SEL_tblFamilyMember.FamilyMemberIDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.FamilyMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_tblFamilyMember.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromFCard {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.FromFCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromFCard\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.FromFCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToFCard {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.ToFCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToFCard\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.ToFCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNicPrinted {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_tblFamilyMember.IsNicPrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNicPrinted\' in table \'usp_SEL_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.IsNicPrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TempDOB {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblFamilyMember.TempDOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempDOB\' in table \'usp_SEL_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblFamilyMember.TempDOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_SEL_tblFamilyMember.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tableusp_SEL_tblFamilyMember.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderRelationNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.LeaderRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderRelationNull() {
                this[this.tableusp_SEL_tblFamilyMember.LeaderRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodGroupNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.BloodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodGroupNull() {
                this[this.tableusp_SEL_tblFamilyMember.BloodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNICNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.CNICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNICNull() {
                this[this.tableusp_SEL_tblFamilyMember.CNICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tableusp_SEL_tblFamilyMember.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcademicEducationNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.AcademicEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcademicEducationNull() {
                this[this.tableusp_SEL_tblFamilyMember.AcademicEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTechnicalEducationNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.TechnicalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTechnicalEducationNull() {
                this[this.tableusp_SEL_tblFamilyMember.TechnicalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfessionalEducationNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.ProfessionalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfessionalEducationNull() {
                this[this.tableusp_SEL_tblFamilyMember.ProfessionalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessNameNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.BusinessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessNameNull() {
                this[this.tableusp_SEL_tblFamilyMember.BusinessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableusp_SEL_tblFamilyMember.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableusp_SEL_tblFamilyMember.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessAddressNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.BusinessAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessAddressNull() {
                this[this.tableusp_SEL_tblFamilyMember.BusinessAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessPhoneNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.BusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessPhoneNull() {
                this[this.tableusp_SEL_tblFamilyMember.BusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableusp_SEL_tblFamilyMember.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tableusp_SEL_tblFamilyMember.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessFaxNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.BusinessFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessFaxNull() {
                this[this.tableusp_SEL_tblFamilyMember.BusinessFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableusp_SEL_tblFamilyMember.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tableusp_SEL_tblFamilyMember.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tableusp_SEL_tblFamilyMember.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tableusp_SEL_tblFamilyMember.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD_IncidentNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.D_IncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD_IncidentNull() {
                this[this.tableusp_SEL_tblFamilyMember.D_IncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameNull() {
                this[this.tableusp_SEL_tblFamilyMember.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHusbandNameNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.HusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHusbandNameNull() {
                this[this.tableusp_SEL_tblFamilyMember.HusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableusp_SEL_tblFamilyMember.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutofNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.OutofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutofNull() {
                this[this.tableusp_SEL_tblFamilyMember.OutofColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableusp_SEL_tblFamilyMember.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableusp_SEL_tblFamilyMember.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_SEL_tblFamilyMember.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromFCardNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.FromFCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromFCardNull() {
                this[this.tableusp_SEL_tblFamilyMember.FromFCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToFCardNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.ToFCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToFCardNull() {
                this[this.tableusp_SEL_tblFamilyMember.ToFCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNicPrintedNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.IsNicPrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNicPrintedNull() {
                this[this.tableusp_SEL_tblFamilyMember.IsNicPrintedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTempDOBNull() {
                return this.IsNull(this.tableusp_SEL_tblFamilyMember.TempDOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTempDOBNull() {
                this[this.tableusp_SEL_tblFamilyMember.TempDOBColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblBloodGroupRow : global::System.Data.DataRow {
            
            private usp_SEL_tblBloodGroupDataTable tableusp_SEL_tblBloodGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblBloodGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblBloodGroup = ((usp_SEL_tblBloodGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblBloodGroup.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblBloodGroup.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblBloodGroup.BloodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodGroup\' in table \'usp_SEL_tblBloodGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblBloodGroup.BloodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodGroupNull() {
                return this.IsNull(this.tableusp_SEL_tblBloodGroup.BloodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodGroupNull() {
                this[this.tableusp_SEL_tblBloodGroup.BloodGroupColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblAreaRow : global::System.Data.DataRow {
            
            private usp_SEL_tblAreaDataTable tableusp_SEL_tblArea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblAreaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblArea = ((usp_SEL_tblAreaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblArea.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblArea.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblArea.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'usp_SEL_tblArea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblArea.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tableusp_SEL_tblArea.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tableusp_SEL_tblArea.AreaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_EngagementRow : global::System.Data.DataRow {
            
            private usp_SEL_EngagementDataTable tableusp_SEL_Engagement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_EngagementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_Engagement = ((usp_SEL_EngagementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SerialNo {
                get {
                    return ((string)(this[this.tableusp_SEL_Engagement.SerialNoColumn]));
                }
                set {
                    this[this.tableusp_SEL_Engagement.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Engagement.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNoM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.FCardNoMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNoM\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.FCardNoMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NukhM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.NukhMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NukhM\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.NukhMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrakhM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.OrakhMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrakhM\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.OrakhMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.NameMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameM\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.NameMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FNameM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.FNameMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FNameM\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.FNameMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNoF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.FCardNoFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNoF\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.FCardNoFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NukhF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.NukhFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NukhF\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.NukhFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrakhF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.OrakhFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrakhF\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.OrakhFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.NameFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameF\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.NameFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FNameF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.FNameFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FNameF\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.FNameFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArrangedBy {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.ArrangedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrangedBy\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.ArrangedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateofAction {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Engagement.DateofActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateofAction\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.DateofActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.AgeMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeM\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.AgeMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.AgeFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeF\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.AgeFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GFNameM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.GFNameMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GFNameM\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.GFNameMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GFNameF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.GFNameFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GFNameF\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.GFNameFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Marriage {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Engagement.MarriageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marriage\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.MarriageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Engagement.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReasonCancel {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Engagement.ReasonCancelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonCancel\' in table \'usp_SEL_Engagement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Engagement.ReasonCancelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableusp_SEL_Engagement.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoMNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.FCardNoMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoMNull() {
                this[this.tableusp_SEL_Engagement.FCardNoMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhMNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.NukhMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhMNull() {
                this[this.tableusp_SEL_Engagement.NukhMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhMNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.OrakhMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhMNull() {
                this[this.tableusp_SEL_Engagement.OrakhMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameMNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.NameMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameMNull() {
                this[this.tableusp_SEL_Engagement.NameMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameMNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.FNameMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameMNull() {
                this[this.tableusp_SEL_Engagement.FNameMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoFNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.FCardNoFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoFNull() {
                this[this.tableusp_SEL_Engagement.FCardNoFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhFNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.NukhFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhFNull() {
                this[this.tableusp_SEL_Engagement.NukhFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhFNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.OrakhFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhFNull() {
                this[this.tableusp_SEL_Engagement.OrakhFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameFNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.NameFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameFNull() {
                this[this.tableusp_SEL_Engagement.NameFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameFNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.FNameFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameFNull() {
                this[this.tableusp_SEL_Engagement.FNameFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrangedByNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.ArrangedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrangedByNull() {
                this[this.tableusp_SEL_Engagement.ArrangedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateofActionNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.DateofActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateofActionNull() {
                this[this.tableusp_SEL_Engagement.DateofActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeMNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.AgeMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeMNull() {
                this[this.tableusp_SEL_Engagement.AgeMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeFNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.AgeFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeFNull() {
                this[this.tableusp_SEL_Engagement.AgeFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFNameMNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.GFNameMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFNameMNull() {
                this[this.tableusp_SEL_Engagement.GFNameMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFNameFNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.GFNameFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFNameFNull() {
                this[this.tableusp_SEL_Engagement.GFNameFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.MarriageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageNull() {
                this[this.tableusp_SEL_Engagement.MarriageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tableusp_SEL_Engagement.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonCancelNull() {
                return this.IsNull(this.tableusp_SEL_Engagement.ReasonCancelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonCancelNull() {
                this[this.tableusp_SEL_Engagement.ReasonCancelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_Male_tblFamilyMemberRow : global::System.Data.DataRow {
            
            private usp_Male_tblFamilyMemberDataTable tableusp_Male_tblFamilyMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_Male_tblFamilyMemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_Male_tblFamilyMember = ((usp_Male_tblFamilyMemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FamilyMemberID {
                get {
                    return ((long)(this[this.tableusp_Male_tblFamilyMember.FamilyMemberIDColumn]));
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.FamilyMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    return ((string)(this[this.tableusp_Male_tblFamilyMember.FCardNoColumn]));
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaderRelation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.LeaderRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaderRelation\' in table \'usp_Male_tblFamilyMember\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.LeaderRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HusbandName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.HusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HusbandName\' in table \'usp_Male_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.HusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.BloodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodGroup\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.BloodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.CNICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNIC\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.CNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcademicEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.AcademicEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcademicEducation\' in table \'usp_Male_tblFamilyMember\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.AcademicEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TechnicalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.TechnicalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnicalEducation\' in table \'usp_Male_tblFamilyMember\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.TechnicalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProfessionalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.ProfessionalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfessionalEducation\' in table \'usp_Male_tblFamilyMember\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.ProfessionalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.BusinessNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessName\' in table \'usp_Male_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.BusinessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'usp_Male_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.BusinessAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessAddress\' in table \'usp_Male_tblFamilyMember\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.BusinessAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.BusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessPhone\' in table \'usp_Male_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.BusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessFax {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.BusinessFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessFax\' in table \'usp_Male_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.BusinessFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tableusp_Male_tblFamilyMember.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'usp_Male_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outof {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.OutofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outof\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.OutofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_Male_tblFamilyMember.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_Male_tblFamilyMember.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_Male_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Male_tblFamilyMember.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tableusp_Male_tblFamilyMember.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderRelationNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.LeaderRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderRelationNull() {
                this[this.tableusp_Male_tblFamilyMember.LeaderRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameNull() {
                this[this.tableusp_Male_tblFamilyMember.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHusbandNameNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.HusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHusbandNameNull() {
                this[this.tableusp_Male_tblFamilyMember.HusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodGroupNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.BloodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodGroupNull() {
                this[this.tableusp_Male_tblFamilyMember.BloodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tableusp_Male_tblFamilyMember.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableusp_Male_tblFamilyMember.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNICNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.CNICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNICNull() {
                this[this.tableusp_Male_tblFamilyMember.CNICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tableusp_Male_tblFamilyMember.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcademicEducationNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.AcademicEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcademicEducationNull() {
                this[this.tableusp_Male_tblFamilyMember.AcademicEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTechnicalEducationNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.TechnicalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTechnicalEducationNull() {
                this[this.tableusp_Male_tblFamilyMember.TechnicalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfessionalEducationNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.ProfessionalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfessionalEducationNull() {
                this[this.tableusp_Male_tblFamilyMember.ProfessionalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessNameNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.BusinessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessNameNull() {
                this[this.tableusp_Male_tblFamilyMember.BusinessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableusp_Male_tblFamilyMember.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableusp_Male_tblFamilyMember.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessAddressNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.BusinessAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessAddressNull() {
                this[this.tableusp_Male_tblFamilyMember.BusinessAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessPhoneNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.BusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessPhoneNull() {
                this[this.tableusp_Male_tblFamilyMember.BusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableusp_Male_tblFamilyMember.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tableusp_Male_tblFamilyMember.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessFaxNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.BusinessFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessFaxNull() {
                this[this.tableusp_Male_tblFamilyMember.BusinessFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tableusp_Male_tblFamilyMember.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableusp_Male_tblFamilyMember.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutofNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.OutofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutofNull() {
                this[this.tableusp_Male_tblFamilyMember.OutofColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableusp_Male_tblFamilyMember.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableusp_Male_tblFamilyMember.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_Male_tblFamilyMember.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_Male_tblFamilyMember.GenderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_Female_tblFamilyMemberRow : global::System.Data.DataRow {
            
            private usp_Female_tblFamilyMemberDataTable tableusp_Female_tblFamilyMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_Female_tblFamilyMemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_Female_tblFamilyMember = ((usp_Female_tblFamilyMemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FamilyMemberID {
                get {
                    return ((long)(this[this.tableusp_Female_tblFamilyMember.FamilyMemberIDColumn]));
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.FamilyMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    return ((string)(this[this.tableusp_Female_tblFamilyMember.FCardNoColumn]));
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'usp_Female_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaderRelation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.LeaderRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaderRelation\' in table \'usp_Female_tblFamilyMember\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.LeaderRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'usp_Female_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HusbandName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.HusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HusbandName\' in table \'usp_Female_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.HusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.BloodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodGroup\' in table \'usp_Female_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.BloodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.CNICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNIC\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.CNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcademicEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.AcademicEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcademicEducation\' in table \'usp_Female_tblFamilyMember\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.AcademicEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TechnicalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.TechnicalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnicalEducation\' in table \'usp_Female_tblFamilyMember\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.TechnicalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProfessionalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.ProfessionalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfessionalEducation\' in table \'usp_Female_tblFamilyMember" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.ProfessionalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessName {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.BusinessNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessName\' in table \'usp_Female_tblFamilyMember\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.BusinessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'usp_Female_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.BusinessAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessAddress\' in table \'usp_Female_tblFamilyMember\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.BusinessAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.BusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessPhone\' in table \'usp_Female_tblFamilyMember\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.BusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessFax {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.BusinessFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessFax\' in table \'usp_Female_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.BusinessFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender1 {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.Gender1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender1\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.Gender1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tableusp_Female_tblFamilyMember.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'usp_Female_tblFamilyMember\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outof {
                get {
                    try {
                        return ((string)(this[this.tableusp_Female_tblFamilyMember.OutofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outof\' in table \'usp_Female_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.OutofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_Female_tblFamilyMember.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'usp_Female_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_Female_tblFamilyMember.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tableusp_Female_tblFamilyMember.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderRelationNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.LeaderRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderRelationNull() {
                this[this.tableusp_Female_tblFamilyMember.LeaderRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameNull() {
                this[this.tableusp_Female_tblFamilyMember.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHusbandNameNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.HusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHusbandNameNull() {
                this[this.tableusp_Female_tblFamilyMember.HusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableusp_Female_tblFamilyMember.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodGroupNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.BloodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodGroupNull() {
                this[this.tableusp_Female_tblFamilyMember.BloodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_Female_tblFamilyMember.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tableusp_Female_tblFamilyMember.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableusp_Female_tblFamilyMember.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNICNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.CNICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNICNull() {
                this[this.tableusp_Female_tblFamilyMember.CNICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tableusp_Female_tblFamilyMember.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcademicEducationNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.AcademicEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcademicEducationNull() {
                this[this.tableusp_Female_tblFamilyMember.AcademicEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTechnicalEducationNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.TechnicalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTechnicalEducationNull() {
                this[this.tableusp_Female_tblFamilyMember.TechnicalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfessionalEducationNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.ProfessionalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfessionalEducationNull() {
                this[this.tableusp_Female_tblFamilyMember.ProfessionalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessNameNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.BusinessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessNameNull() {
                this[this.tableusp_Female_tblFamilyMember.BusinessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableusp_Female_tblFamilyMember.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableusp_Female_tblFamilyMember.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessAddressNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.BusinessAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessAddressNull() {
                this[this.tableusp_Female_tblFamilyMember.BusinessAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessPhoneNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.BusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessPhoneNull() {
                this[this.tableusp_Female_tblFamilyMember.BusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableusp_Female_tblFamilyMember.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tableusp_Female_tblFamilyMember.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessFaxNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.BusinessFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessFaxNull() {
                this[this.tableusp_Female_tblFamilyMember.BusinessFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGender1Null() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.Gender1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGender1Null() {
                this[this.tableusp_Female_tblFamilyMember.Gender1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tableusp_Female_tblFamilyMember.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableusp_Female_tblFamilyMember.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutofNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.OutofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutofNull() {
                this[this.tableusp_Female_tblFamilyMember.OutofColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableusp_Female_tblFamilyMember.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableusp_Female_tblFamilyMember.EntryDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_MarriageRow : global::System.Data.DataRow {
            
            private usp_SEL_MarriageDataTable tableusp_SEL_Marriage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_MarriageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_Marriage = ((usp_SEL_MarriageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SerialNo {
                get {
                    return ((string)(this[this.tableusp_SEL_Marriage.SerialNoColumn]));
                }
                set {
                    this[this.tableusp_SEL_Marriage.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MarriageDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Marriage.MarriageDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageDate\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.MarriageDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNoM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.FCardNoMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNoM\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.FCardNoMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NukhM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.NukhMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NukhM\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.NukhMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrakhM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.OrakhMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrakhM\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.OrakhMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.NameMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameM\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.NameMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FNameM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.FNameMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FNameM\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.FNameMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.AgeMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeM\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.AgeMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNoF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.FCardNoFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNoF\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.FCardNoFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NukhF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.NukhFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NukhF\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.NukhFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrakhF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.OrakhFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrakhF\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.OrakhFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.NameFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameF\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.NameFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FNameF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.FNameFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FNameF\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.FNameFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.AgeFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeF\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.AgeFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateofEngagement {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Marriage.DateofEngagementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateofEngagement\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.DateofEngagementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Marriage.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GFNameM {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.GFNameMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GFNameM\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.GFNameMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GFNameF {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.GFNameFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GFNameF\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.GFNameFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Marriage.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string atTime {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Marriage.atTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'atTime\' in table \'usp_SEL_Marriage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Marriage.atTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageDateNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.MarriageDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageDateNull() {
                this[this.tableusp_SEL_Marriage.MarriageDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoMNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.FCardNoMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoMNull() {
                this[this.tableusp_SEL_Marriage.FCardNoMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhMNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.NukhMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhMNull() {
                this[this.tableusp_SEL_Marriage.NukhMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhMNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.OrakhMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhMNull() {
                this[this.tableusp_SEL_Marriage.OrakhMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameMNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.NameMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameMNull() {
                this[this.tableusp_SEL_Marriage.NameMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameMNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.FNameMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameMNull() {
                this[this.tableusp_SEL_Marriage.FNameMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeMNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.AgeMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeMNull() {
                this[this.tableusp_SEL_Marriage.AgeMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoFNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.FCardNoFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoFNull() {
                this[this.tableusp_SEL_Marriage.FCardNoFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhFNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.NukhFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhFNull() {
                this[this.tableusp_SEL_Marriage.NukhFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhFNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.OrakhFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhFNull() {
                this[this.tableusp_SEL_Marriage.OrakhFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameFNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.NameFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameFNull() {
                this[this.tableusp_SEL_Marriage.NameFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameFNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.FNameFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameFNull() {
                this[this.tableusp_SEL_Marriage.FNameFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeFNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.AgeFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeFNull() {
                this[this.tableusp_SEL_Marriage.AgeFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateofEngagementNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.DateofEngagementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateofEngagementNull() {
                this[this.tableusp_SEL_Marriage.DateofEngagementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableusp_SEL_Marriage.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFNameMNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.GFNameMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFNameMNull() {
                this[this.tableusp_SEL_Marriage.GFNameMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFNameFNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.GFNameFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFNameFNull() {
                this[this.tableusp_SEL_Marriage.GFNameFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tableusp_SEL_Marriage.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsatTimeNull() {
                return this.IsNull(this.tableusp_SEL_Marriage.atTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetatTimeNull() {
                this[this.tableusp_SEL_Marriage.atTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_tblWorkTypeRow : global::System.Data.DataRow {
            
            private usp_SEL_tblWorkTypeDataTable tableusp_SEL_tblWorkType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_tblWorkTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_tblWorkType = ((usp_SEL_tblWorkTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_tblWorkType.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_tblWorkType.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_tblWorkType.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'usp_SEL_tblWorkType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_tblWorkType.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableusp_SEL_tblWorkType.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableusp_SEL_tblWorkType.WorkTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_rpt_MembersRow : global::System.Data.DataRow {
            
            private usp_rpt_MembersDataTable tableusp_rpt_Members;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_rpt_MembersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_rpt_Members = ((usp_rpt_MembersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    return ((string)(this[this.tableusp_rpt_Members.FCardNoColumn]));
                }
                set {
                    this[this.tableusp_rpt_Members.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyLeader {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.FamilyLeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyLeader\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.FamilyLeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nukh {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.NukhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nukh\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.NukhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sign {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.SignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sign\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.SignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Village {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.VillageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Village\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.VillageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaderRelation {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.LeaderRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaderRelation\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.LeaderRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HusbandName {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.HusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HusbandName\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.HusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outof {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.OutofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outof\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.OutofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcademicEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.AcademicEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcademicEducation\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.AcademicEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableusp_rpt_Members.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'usp_rpt_Members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_rpt_Members.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyLeaderNull() {
                return this.IsNull(this.tableusp_rpt_Members.FamilyLeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyLeaderNull() {
                this[this.tableusp_rpt_Members.FamilyLeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhNull() {
                return this.IsNull(this.tableusp_rpt_Members.NukhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhNull() {
                this[this.tableusp_rpt_Members.NukhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignNull() {
                return this.IsNull(this.tableusp_rpt_Members.SignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignNull() {
                this[this.tableusp_rpt_Members.SignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVillageNull() {
                return this.IsNull(this.tableusp_rpt_Members.VillageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVillageNull() {
                this[this.tableusp_rpt_Members.VillageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tableusp_rpt_Members.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tableusp_rpt_Members.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderRelationNull() {
                return this.IsNull(this.tableusp_rpt_Members.LeaderRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderRelationNull() {
                this[this.tableusp_rpt_Members.LeaderRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tableusp_rpt_Members.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameNull() {
                this[this.tableusp_rpt_Members.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHusbandNameNull() {
                return this.IsNull(this.tableusp_rpt_Members.HusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHusbandNameNull() {
                this[this.tableusp_rpt_Members.HusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableusp_rpt_Members.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableusp_rpt_Members.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_rpt_Members.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_rpt_Members.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tableusp_rpt_Members.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tableusp_rpt_Members.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableusp_rpt_Members.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableusp_rpt_Members.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutofNull() {
                return this.IsNull(this.tableusp_rpt_Members.OutofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutofNull() {
                this[this.tableusp_rpt_Members.OutofColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcademicEducationNull() {
                return this.IsNull(this.tableusp_rpt_Members.AcademicEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcademicEducationNull() {
                this[this.tableusp_rpt_Members.AcademicEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableusp_rpt_Members.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableusp_rpt_Members.WorkTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblTransactionsRow : global::System.Data.DataRow {
            
            private tblTransactionsDataTable tabletblTransactions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTransactionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblTransactions = ((tblTransactionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblTransactions.IDColumn]));
                }
                set {
                    this[this.tabletblTransactions.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher {
                get {
                    try {
                        return ((string)(this[this.tabletblTransactions.VoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.VoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentNo {
                get {
                    try {
                        return ((int)(this[this.tabletblTransactions.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblTransactions.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Debit {
                get {
                    try {
                        return ((double)(this[this.tabletblTransactions.DebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debit\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.DebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Credit {
                get {
                    try {
                        return ((double)(this[this.tabletblTransactions.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tabletblTransactions.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChequeNo {
                get {
                    try {
                        return ((string)(this[this.tabletblTransactions.ChequeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeNo\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.ChequeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceNo {
                get {
                    try {
                        return ((string)(this[this.tabletblTransactions.ReferenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceNo\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.ReferenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tabletblTransactions.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'tblTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTransactions.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNull() {
                return this.IsNull(this.tabletblTransactions.VoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNull() {
                this[this.tabletblTransactions.VoucherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tabletblTransactions.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNoNull() {
                this[this.tabletblTransactions.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tabletblTransactions.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tabletblTransactions.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNull() {
                return this.IsNull(this.tabletblTransactions.DebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNull() {
                this[this.tabletblTransactions.DebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tabletblTransactions.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tabletblTransactions.CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tabletblTransactions.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tabletblTransactions.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNoNull() {
                return this.IsNull(this.tabletblTransactions.ChequeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNoNull() {
                this[this.tabletblTransactions.ChequeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNoNull() {
                return this.IsNull(this.tabletblTransactions.ReferenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNoNull() {
                this[this.tabletblTransactions.ReferenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tabletblTransactions.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tabletblTransactions.AccountNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblVouchersRow : global::System.Data.DataRow {
            
            private tblVouchersDataTable tabletblVouchers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVouchersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblVouchers = ((tblVouchersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblVouchers.IDColumn]));
                }
                set {
                    this[this.tabletblVouchers.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher {
                get {
                    try {
                        return ((string)(this[this.tabletblVouchers.VoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher\' in table \'tblVouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVouchers.VoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabletblVouchers.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'tblVouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVouchers.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblVouchers.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'tblVouchers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVouchers.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNull() {
                return this.IsNull(this.tabletblVouchers.VoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNull() {
                this[this.tabletblVouchers.VoucherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabletblVouchers.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabletblVouchers.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tabletblVouchers.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateCreatedNull() {
                this[this.tabletblVouchers.DateCreatedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblLedgerRow : global::System.Data.DataRow {
            
            private tblLedgerDataTable tabletblLedger;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblLedgerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblLedger = ((tblLedgerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccountCode {
                get {
                    try {
                        return ((int)(this[this.tabletblLedger.AccountCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountCode\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.AccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tabletblLedger.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher {
                get {
                    try {
                        return ((string)(this[this.tabletblLedger.VoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.VoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentNo {
                get {
                    try {
                        return ((int)(this[this.tabletblLedger.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Debit {
                get {
                    try {
                        return ((double)(this[this.tabletblLedger.DebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debit\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.DebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Credit {
                get {
                    try {
                        return ((double)(this[this.tabletblLedger.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblLedger.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Balance {
                get {
                    try {
                        return ((double)(this[this.tabletblLedger.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tabletblLedger.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChequeNo {
                get {
                    try {
                        return ((string)(this[this.tabletblLedger.ChequeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeNo\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.ChequeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceNo {
                get {
                    try {
                        return ((string)(this[this.tabletblLedger.ReferenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceNo\' in table \'tblLedger\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLedger.ReferenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountCodeNull() {
                return this.IsNull(this.tabletblLedger.AccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountCodeNull() {
                this[this.tabletblLedger.AccountCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tabletblLedger.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tabletblLedger.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNull() {
                return this.IsNull(this.tabletblLedger.VoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNull() {
                this[this.tabletblLedger.VoucherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tabletblLedger.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNoNull() {
                this[this.tabletblLedger.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNull() {
                return this.IsNull(this.tabletblLedger.DebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNull() {
                this[this.tabletblLedger.DebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tabletblLedger.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tabletblLedger.CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tabletblLedger.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tabletblLedger.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabletblLedger.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tabletblLedger.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tabletblLedger.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tabletblLedger.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNoNull() {
                return this.IsNull(this.tabletblLedger.ChequeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNoNull() {
                this[this.tabletblLedger.ChequeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNoNull() {
                return this.IsNull(this.tabletblLedger.ReferenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNoNull() {
                this[this.tabletblLedger.ReferenceNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_HallBooking_Search_Row : global::System.Data.DataRow {
            
            private usp_HallBooking_Search_DataTable tableusp_HallBooking_Search_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_HallBooking_Search_Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_HallBooking_Search_ = ((usp_HallBooking_Search_DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SerialNo {
                get {
                    try {
                        return ((int)(this[this.tableusp_HallBooking_Search_.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_HallBooking_Search_.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mr {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.MrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mr\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.MrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Event {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.EventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Event\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.EventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall1 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search_.Hall1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall1\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.Hall1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall2 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search_.Hall2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall2\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.Hall2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall3 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search_.Hall3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall3\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.Hall3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall4 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_HallBooking_Search_.Hall4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall4\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.Hall4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_HallBooking_Search_.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.DayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromTime {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.FromTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromTime\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.FromTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToTime {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.ToTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToTime\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableusp_HallBooking_Search_.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'usp_HallBooking_Search_\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_HallBooking_Search_.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tableusp_HallBooking_Search_.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableusp_HallBooking_Search_.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMrNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.MrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMrNull() {
                this[this.tableusp_HallBooking_Search_.MrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.EventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventNull() {
                this[this.tableusp_HallBooking_Search_.EventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall1Null() {
                return this.IsNull(this.tableusp_HallBooking_Search_.Hall1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall1Null() {
                this[this.tableusp_HallBooking_Search_.Hall1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall2Null() {
                return this.IsNull(this.tableusp_HallBooking_Search_.Hall2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall2Null() {
                this[this.tableusp_HallBooking_Search_.Hall2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall3Null() {
                return this.IsNull(this.tableusp_HallBooking_Search_.Hall3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall3Null() {
                this[this.tableusp_HallBooking_Search_.Hall3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall4Null() {
                return this.IsNull(this.tableusp_HallBooking_Search_.Hall4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall4Null() {
                this[this.tableusp_HallBooking_Search_.Hall4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tableusp_HallBooking_Search_.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.DayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNull() {
                this[this.tableusp_HallBooking_Search_.DayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromTimeNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.FromTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromTimeNull() {
                this[this.tableusp_HallBooking_Search_.FromTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToTimeNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.ToTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToTimeNull() {
                this[this.tableusp_HallBooking_Search_.ToTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableusp_HallBooking_Search_.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tableusp_HallBooking_Search_.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tableusp_HallBooking_Search_.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableusp_HallBooking_Search_.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableusp_HallBooking_Search_.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_BirthRow : global::System.Data.DataRow {
            
            private usp_SEL_BirthDataTable tableusp_SEL_Birth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_BirthRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_Birth = ((usp_SEL_BirthDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_Birth.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_Birth.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.RegNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegNo\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.RegNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.MNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MName\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.MNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GFName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.GFNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GFName\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.GFNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nukh {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.NukhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nukh\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.NukhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Birth.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Relation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.RelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relation\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.RelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BirthPlace {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.BirthPlaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthPlace\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.BirthPlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.RAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAddress\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.RAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Birth.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NadraRegNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Birth.NadraRegNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NadraRegNo\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.NadraRegNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BirthTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Birth.BirthTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthTime\' in table \'usp_SEL_Birth\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Birth.BirthTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegNoNull() {
                return this.IsNull(this.tableusp_SEL_Birth.RegNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegNoNull() {
                this[this.tableusp_SEL_Birth.RegNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_SEL_Birth.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_SEL_Birth.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableusp_SEL_Birth.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableusp_SEL_Birth.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tableusp_SEL_Birth.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tableusp_SEL_Birth.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNameNull() {
                return this.IsNull(this.tableusp_SEL_Birth.MNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNameNull() {
                this[this.tableusp_SEL_Birth.MNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFNameNull() {
                return this.IsNull(this.tableusp_SEL_Birth.GFNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFNameNull() {
                this[this.tableusp_SEL_Birth.GFNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhNull() {
                return this.IsNull(this.tableusp_SEL_Birth.NukhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhNull() {
                this[this.tableusp_SEL_Birth.NukhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tableusp_SEL_Birth.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tableusp_SEL_Birth.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_SEL_Birth.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_SEL_Birth.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableusp_SEL_Birth.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableusp_SEL_Birth.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationNull() {
                return this.IsNull(this.tableusp_SEL_Birth.RelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationNull() {
                this[this.tableusp_SEL_Birth.RelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tableusp_SEL_Birth.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tableusp_SEL_Birth.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthPlaceNull() {
                return this.IsNull(this.tableusp_SEL_Birth.BirthPlaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthPlaceNull() {
                this[this.tableusp_SEL_Birth.BirthPlaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAddressNull() {
                return this.IsNull(this.tableusp_SEL_Birth.RAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAddressNull() {
                this[this.tableusp_SEL_Birth.RAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableusp_SEL_Birth.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableusp_SEL_Birth.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNadraRegNoNull() {
                return this.IsNull(this.tableusp_SEL_Birth.NadraRegNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNadraRegNoNull() {
                this[this.tableusp_SEL_Birth.NadraRegNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthTimeNull() {
                return this.IsNull(this.tableusp_SEL_Birth.BirthTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthTimeNull() {
                this[this.tableusp_SEL_Birth.BirthTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_DeathRow : global::System.Data.DataRow {
            
            private usp_SEL_DeathDataTable tableusp_SEL_Death;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_DeathRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_Death = ((usp_SEL_DeathDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_Death.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_Death.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.RegNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegNo\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.RegNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GFName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.GFNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GFName\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.GFNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nukh {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.NukhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nukh\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.NukhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeathDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Death.DeathDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathDate\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.DeathDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Relation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.RelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Relation\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.RelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reason\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.RAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAddress\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.RAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Death.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Place {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.PlaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Place\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.PlaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeathTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Death.DeathTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathTime\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.DeathTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrinted {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Death.IsPrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPrinted\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.IsPrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.AppNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppName\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.AppNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppCNIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.AppCNICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppCNIC\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.AppCNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppRelation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.AppRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppRelation\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.AppRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRCNumber {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Death.DRCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRCNumber\' in table \'usp_SEL_Death\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Death.DRCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegNoNull() {
                return this.IsNull(this.tableusp_SEL_Death.RegNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegNoNull() {
                this[this.tableusp_SEL_Death.RegNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_SEL_Death.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_SEL_Death.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableusp_SEL_Death.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableusp_SEL_Death.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tableusp_SEL_Death.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tableusp_SEL_Death.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFNameNull() {
                return this.IsNull(this.tableusp_SEL_Death.GFNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFNameNull() {
                this[this.tableusp_SEL_Death.GFNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhNull() {
                return this.IsNull(this.tableusp_SEL_Death.NukhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhNull() {
                this[this.tableusp_SEL_Death.NukhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tableusp_SEL_Death.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tableusp_SEL_Death.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_SEL_Death.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_SEL_Death.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathDateNull() {
                return this.IsNull(this.tableusp_SEL_Death.DeathDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathDateNull() {
                this[this.tableusp_SEL_Death.DeathDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationNull() {
                return this.IsNull(this.tableusp_SEL_Death.RelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationNull() {
                this[this.tableusp_SEL_Death.RelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tableusp_SEL_Death.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tableusp_SEL_Death.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tableusp_SEL_Death.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tableusp_SEL_Death.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAddressNull() {
                return this.IsNull(this.tableusp_SEL_Death.RAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAddressNull() {
                this[this.tableusp_SEL_Death.RAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableusp_SEL_Death.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableusp_SEL_Death.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tableusp_SEL_Death.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tableusp_SEL_Death.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceNull() {
                return this.IsNull(this.tableusp_SEL_Death.PlaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceNull() {
                this[this.tableusp_SEL_Death.PlaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathTimeNull() {
                return this.IsNull(this.tableusp_SEL_Death.DeathTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathTimeNull() {
                this[this.tableusp_SEL_Death.DeathTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPrintedNull() {
                return this.IsNull(this.tableusp_SEL_Death.IsPrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPrintedNull() {
                this[this.tableusp_SEL_Death.IsPrintedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppNameNull() {
                return this.IsNull(this.tableusp_SEL_Death.AppNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppNameNull() {
                this[this.tableusp_SEL_Death.AppNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppCNICNull() {
                return this.IsNull(this.tableusp_SEL_Death.AppCNICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppCNICNull() {
                this[this.tableusp_SEL_Death.AppCNICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppRelationNull() {
                return this.IsNull(this.tableusp_SEL_Death.AppRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppRelationNull() {
                this[this.tableusp_SEL_Death.AppRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRCNumberNull() {
                return this.IsNull(this.tableusp_SEL_Death.DRCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRCNumberNull() {
                this[this.tableusp_SEL_Death.DRCNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_RenewalRow : global::System.Data.DataRow {
            
            private usp_SEL_RenewalDataTable tableusp_SEL_Renewal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_RenewalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_Renewal = ((usp_SEL_RenewalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_Renewal.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_Renewal.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Renewal.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RenewalYear {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.RenewalYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenewalYear\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.RenewalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Fee {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.FeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fee\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.FeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PoorFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.PoorFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoorFund\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.PoorFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateFee {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.LateFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateFee\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.LateFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Link_Account {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Renewal.Link_AccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Link_Account\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.Link_AccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CardFee {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.CardFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardFee\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.CardFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AdultMembers {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.AdultMembersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdultMembers\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.AdultMembersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalMembers {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.TotalMembersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMembers\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.TotalMembersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoorAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.PoorAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoorAcc\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.PoorAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RenewalTo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Renewal.RenewalToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RenewalTo\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.RenewalToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EducationFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.EducationFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EducationFund\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.EducationFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KabristanFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.KabristanFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KabristanFund\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.KabristanFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZakatFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.ZakatFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZakatFund\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.ZakatFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DonationFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.DonationFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DonationFund\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.DonationFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TamiratiFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Renewal.TamiratiFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TamiratiFund\' in table \'usp_SEL_Renewal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Renewal.TamiratiFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_SEL_Renewal.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableusp_SEL_Renewal.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRenewalYearNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.RenewalYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRenewalYearNull() {
                this[this.tableusp_SEL_Renewal.RenewalYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeeNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.FeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeeNull() {
                this[this.tableusp_SEL_Renewal.FeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoorFundNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.PoorFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoorFundNull() {
                this[this.tableusp_SEL_Renewal.PoorFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateFeeNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.LateFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateFeeNull() {
                this[this.tableusp_SEL_Renewal.LateFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableusp_SEL_Renewal.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLink_AccountNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.Link_AccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLink_AccountNull() {
                this[this.tableusp_SEL_Renewal.Link_AccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardFeeNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.CardFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardFeeNull() {
                this[this.tableusp_SEL_Renewal.CardFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdultMembersNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.AdultMembersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdultMembersNull() {
                this[this.tableusp_SEL_Renewal.AdultMembersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalMembersNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.TotalMembersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalMembersNull() {
                this[this.tableusp_SEL_Renewal.TotalMembersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNoNull() {
                this[this.tableusp_SEL_Renewal.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tableusp_SEL_Renewal.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoorAccNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.PoorAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoorAccNull() {
                this[this.tableusp_SEL_Renewal.PoorAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRenewalToNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.RenewalToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRenewalToNull() {
                this[this.tableusp_SEL_Renewal.RenewalToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEducationFundNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.EducationFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEducationFundNull() {
                this[this.tableusp_SEL_Renewal.EducationFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKabristanFundNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.KabristanFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKabristanFundNull() {
                this[this.tableusp_SEL_Renewal.KabristanFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZakatFundNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.ZakatFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZakatFundNull() {
                this[this.tableusp_SEL_Renewal.ZakatFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDonationFundNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.DonationFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDonationFundNull() {
                this[this.tableusp_SEL_Renewal.DonationFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTamiratiFundNull() {
                return this.IsNull(this.tableusp_SEL_Renewal.TamiratiFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTamiratiFundNull() {
                this[this.tableusp_SEL_Renewal.TamiratiFundColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblAccountsRow : global::System.Data.DataRow {
            
            private tblAccountsDataTable tabletblAccounts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAccountsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblAccounts = ((tblAccountsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblAccounts.IDColumn]));
                }
                set {
                    this[this.tabletblAccounts.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountCode {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.AccountCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountCode\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.AccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone2 {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.Phone2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone2\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.Phone2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone3 {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.Phone3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone3\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.Phone3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NTN {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.NTNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTN\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.NTNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STN {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.STNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STN\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.STNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccStatus {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.AccStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccStatus\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.AccStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IndexBook {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.IndexBookColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IndexBook\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.IndexBookColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Header {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.HeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Header\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.HeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderType {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.HeaderTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderType\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.HeaderTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPerson {
                get {
                    try {
                        return ((string)(this[this.tabletblAccounts.ContactPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPerson\' in table \'tblAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAccounts.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountCodeNull() {
                return this.IsNull(this.tabletblAccounts.AccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountCodeNull() {
                this[this.tabletblAccounts.AccountCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tabletblAccounts.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tabletblAccounts.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tabletblAccounts.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tabletblAccounts.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone2Null() {
                return this.IsNull(this.tabletblAccounts.Phone2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone2Null() {
                this[this.tabletblAccounts.Phone2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone3Null() {
                return this.IsNull(this.tabletblAccounts.Phone3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone3Null() {
                this[this.tabletblAccounts.Phone3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tabletblAccounts.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tabletblAccounts.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tabletblAccounts.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tabletblAccounts.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabletblAccounts.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabletblAccounts.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tabletblAccounts.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tabletblAccounts.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabletblAccounts.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabletblAccounts.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tabletblAccounts.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tabletblAccounts.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTNNull() {
                return this.IsNull(this.tabletblAccounts.NTNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTNNull() {
                this[this.tabletblAccounts.NTNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTNNull() {
                return this.IsNull(this.tabletblAccounts.STNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTNNull() {
                this[this.tabletblAccounts.STNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccStatusNull() {
                return this.IsNull(this.tabletblAccounts.AccStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccStatusNull() {
                this[this.tabletblAccounts.AccStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndexBookNull() {
                return this.IsNull(this.tabletblAccounts.IndexBookColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndexBookNull() {
                this[this.tabletblAccounts.IndexBookColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderNull() {
                return this.IsNull(this.tabletblAccounts.HeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderNull() {
                this[this.tabletblAccounts.HeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderTypeNull() {
                return this.IsNull(this.tabletblAccounts.HeaderTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderTypeNull() {
                this[this.tabletblAccounts.HeaderTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonNull() {
                return this.IsNull(this.tabletblAccounts.ContactPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonNull() {
                this[this.tabletblAccounts.ContactPersonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_TSF_tblFamilyMemberRow : global::System.Data.DataRow {
            
            private usp_SEL_TSF_tblFamilyMemberDataTable tableusp_SEL_TSF_tblFamilyMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_TSF_tblFamilyMemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_TSF_tblFamilyMember = ((usp_SEL_TSF_tblFamilyMemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FamilyMemberID {
                get {
                    return ((int)(this[this.tableusp_SEL_TSF_tblFamilyMember.FamilyMemberIDColumn]));
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.FamilyMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaderRelation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.LeaderRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaderRelation\' in table \'usp_SEL_TSF_tblFamilyMember\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.LeaderRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HusbandName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.HusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HusbandName\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.HusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.BloodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodGroup\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.BloodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.CNICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNIC\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.CNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcademicEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.AcademicEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcademicEducation\' in table \'usp_SEL_TSF_tblFamilyMember\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.AcademicEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TechnicalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.TechnicalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnicalEducation\' in table \'usp_SEL_TSF_tblFamilyMember\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.TechnicalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProfessionalEducation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.ProfessionalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfessionalEducation\' in table \'usp_SEL_TSF_tblFamilyMembe" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.ProfessionalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessName\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessAddress {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessAddress\' in table \'usp_SEL_TSF_tblFamilyMember\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessPhone\' in table \'usp_SEL_TSF_tblFamilyMember\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessFax {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessFax\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_TSF_tblFamilyMember.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reason\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime D_Incident {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_TSF_tblFamilyMember.D_IncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D_Incident\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.D_IncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'usp_SEL_TSF_tblFamilyMember\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outof {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.OutofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outof\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.OutofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_TSF_tblFamilyMember.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FamilyMemberID1 {
                get {
                    return ((long)(this[this.tableusp_SEL_TSF_tblFamilyMember.FamilyMemberID1Column]));
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.FamilyMemberID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromFCard {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.FromFCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromFCard\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.FromFCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToFCard {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_TSF_tblFamilyMember.ToFCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToFCard\' in table \'usp_SEL_TSF_tblFamilyMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_TSF_tblFamilyMember.ToFCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderRelationNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.LeaderRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderRelationNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.LeaderRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHusbandNameNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.HusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHusbandNameNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.HusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodGroupNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.BloodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodGroupNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.BloodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNICNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.CNICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNICNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.CNICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcademicEducationNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.AcademicEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcademicEducationNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.AcademicEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTechnicalEducationNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.TechnicalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTechnicalEducationNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.TechnicalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfessionalEducationNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.ProfessionalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfessionalEducationNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.ProfessionalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessNameNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.BusinessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessNameNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessAddressNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.BusinessAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessAddressNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessPhoneNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.BusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessPhoneNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessFaxNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.BusinessFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessFaxNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.BusinessFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD_IncidentNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.D_IncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD_IncidentNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.D_IncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutofNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.OutofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutofNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.OutofColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromFCardNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.FromFCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromFCardNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.FromFCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToFCardNull() {
                return this.IsNull(this.tableusp_SEL_TSF_tblFamilyMember.ToFCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToFCardNull() {
                this[this.tableusp_SEL_TSF_tblFamilyMember.ToFCardColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblMembersRow : global::System.Data.DataRow {
            
            private tblMembersDataTable tabletblMembers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblMembersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblMembers = ((tblMembersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FamilyMemberID {
                get {
                    return ((long)(this[this.tabletblMembers.FamilyMemberIDColumn]));
                }
                set {
                    this[this.tabletblMembers.FamilyMemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeaderRelation {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.LeaderRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaderRelation\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.LeaderRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HusbandName {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.HusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HusbandName\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.HusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodGroup {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.BloodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodGroup\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.BloodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeGroup {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.AgeGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeGroup\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.AgeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNIC {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.CNICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNIC\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.CNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcademicEducation {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.AcademicEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcademicEducation\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.AcademicEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TechnicalEducation {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.TechnicalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnicalEducation\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.TechnicalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProfessionalEducation {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.ProfessionalEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfessionalEducation\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.ProfessionalEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessName {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.BusinessNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessName\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.BusinessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkType {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.WorkTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkType\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.WorkTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessAddress {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.BusinessAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessAddress\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.BusinessAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.BusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessPhone\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.BusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Website {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Website\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessFax {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.BusinessFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessFax\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.BusinessFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tabletblMembers.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reason\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime D_Incident {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblMembers.D_IncidentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D_Incident\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.D_IncidentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outof {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.OutofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outof\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.OutofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblMembers.EntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryDate\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.EntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sign {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.SignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sign\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.SignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nukh {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.NukhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nukh\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.NukhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Village {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.VillageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Village\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.VillageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyLeader {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.FamilyLeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyLeader\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.FamilyLeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyName {
                get {
                    try {
                        return ((string)(this[this.tabletblMembers.FamilyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyName\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.FamilyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte IsNICPrinted {
                get {
                    try {
                        return ((byte)(this[this.tabletblMembers.IsNICPrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNICPrinted\' in table \'tblMembers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMembers.IsNICPrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tabletblMembers.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tabletblMembers.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tabletblMembers.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tabletblMembers.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeaderRelationNull() {
                return this.IsNull(this.tabletblMembers.LeaderRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeaderRelationNull() {
                this[this.tabletblMembers.LeaderRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tabletblMembers.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameNull() {
                this[this.tabletblMembers.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHusbandNameNull() {
                return this.IsNull(this.tabletblMembers.HusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHusbandNameNull() {
                this[this.tabletblMembers.HusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tabletblMembers.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tabletblMembers.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tabletblMembers.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tabletblMembers.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodGroupNull() {
                return this.IsNull(this.tabletblMembers.BloodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodGroupNull() {
                this[this.tabletblMembers.BloodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeGroupNull() {
                return this.IsNull(this.tabletblMembers.AgeGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeGroupNull() {
                this[this.tabletblMembers.AgeGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tabletblMembers.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tabletblMembers.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNICNull() {
                return this.IsNull(this.tabletblMembers.CNICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNICNull() {
                this[this.tabletblMembers.CNICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tabletblMembers.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tabletblMembers.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcademicEducationNull() {
                return this.IsNull(this.tabletblMembers.AcademicEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcademicEducationNull() {
                this[this.tabletblMembers.AcademicEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTechnicalEducationNull() {
                return this.IsNull(this.tabletblMembers.TechnicalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTechnicalEducationNull() {
                this[this.tabletblMembers.TechnicalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfessionalEducationNull() {
                return this.IsNull(this.tabletblMembers.ProfessionalEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfessionalEducationNull() {
                this[this.tabletblMembers.ProfessionalEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessNameNull() {
                return this.IsNull(this.tabletblMembers.BusinessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessNameNull() {
                this[this.tabletblMembers.BusinessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkTypeNull() {
                return this.IsNull(this.tabletblMembers.WorkTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkTypeNull() {
                this[this.tabletblMembers.WorkTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tabletblMembers.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tabletblMembers.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessAddressNull() {
                return this.IsNull(this.tabletblMembers.BusinessAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessAddressNull() {
                this[this.tabletblMembers.BusinessAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessPhoneNull() {
                return this.IsNull(this.tabletblMembers.BusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessPhoneNull() {
                this[this.tabletblMembers.BusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tabletblMembers.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tabletblMembers.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebsiteNull() {
                return this.IsNull(this.tabletblMembers.WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebsiteNull() {
                this[this.tabletblMembers.WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessFaxNull() {
                return this.IsNull(this.tabletblMembers.BusinessFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessFaxNull() {
                this[this.tabletblMembers.BusinessFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tabletblMembers.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tabletblMembers.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tabletblMembers.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tabletblMembers.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsD_IncidentNull() {
                return this.IsNull(this.tabletblMembers.D_IncidentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetD_IncidentNull() {
                this[this.tabletblMembers.D_IncidentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tabletblMembers.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tabletblMembers.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutofNull() {
                return this.IsNull(this.tabletblMembers.OutofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutofNull() {
                this[this.tabletblMembers.OutofColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryDateNull() {
                return this.IsNull(this.tabletblMembers.EntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryDateNull() {
                this[this.tabletblMembers.EntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignNull() {
                return this.IsNull(this.tabletblMembers.SignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignNull() {
                this[this.tabletblMembers.SignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhNull() {
                return this.IsNull(this.tabletblMembers.NukhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhNull() {
                this[this.tabletblMembers.NukhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tabletblMembers.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tabletblMembers.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tabletblMembers.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tabletblMembers.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tabletblMembers.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tabletblMembers.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVillageNull() {
                return this.IsNull(this.tabletblMembers.VillageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVillageNull() {
                this[this.tabletblMembers.VillageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyLeaderNull() {
                return this.IsNull(this.tabletblMembers.FamilyLeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyLeaderNull() {
                this[this.tabletblMembers.FamilyLeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyNameNull() {
                return this.IsNull(this.tabletblMembers.FamilyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyNameNull() {
                this[this.tabletblMembers.FamilyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNICPrintedNull() {
                return this.IsNull(this.tabletblMembers.IsNICPrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNICPrintedNull() {
                this[this.tabletblMembers.IsNICPrintedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblTrialBalanceRow : global::System.Data.DataRow {
            
            private tblTrialBalanceDataTable tabletblTrialBalance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblTrialBalanceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblTrialBalance = ((tblTrialBalanceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Code {
                get {
                    try {
                        return ((int)(this[this.tabletblTrialBalance.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'tblTrialBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTrialBalance.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tabletblTrialBalance.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'tblTrialBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTrialBalance.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Debit {
                get {
                    try {
                        return ((decimal)(this[this.tabletblTrialBalance.DebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debit\' in table \'tblTrialBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTrialBalance.DebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Credit {
                get {
                    try {
                        return ((decimal)(this[this.tabletblTrialBalance.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'tblTrialBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTrialBalance.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tabletblTrialBalance.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'tblTrialBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTrialBalance.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountCode {
                get {
                    try {
                        return ((string)(this[this.tabletblTrialBalance.AccountCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountCode\' in table \'tblTrialBalance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblTrialBalance.AccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tabletblTrialBalance.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tabletblTrialBalance.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tabletblTrialBalance.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tabletblTrialBalance.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNull() {
                return this.IsNull(this.tabletblTrialBalance.DebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNull() {
                this[this.tabletblTrialBalance.DebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tabletblTrialBalance.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tabletblTrialBalance.CreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabletblTrialBalance.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tabletblTrialBalance.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountCodeNull() {
                return this.IsNull(this.tabletblTrialBalance.AccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountCodeNull() {
                this[this.tabletblTrialBalance.AccountCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblSecurityRow : global::System.Data.DataRow {
            
            private tblSecurityDataTable tabletblSecurity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSecurityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSecurity = ((tblSecurityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tabletblSecurity.UserIDColumn]));
                }
                set {
                    this[this.tabletblSecurity.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tabletblSecurity.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'tblSecurity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurity.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Password {
                get {
                    try {
                        return ((string)(this[this.tabletblSecurity.PasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Password\' in table \'tblSecurity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurity.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSecurity.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'tblSecurity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurity.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Inactive_FL {
                get {
                    try {
                        return ((bool)(this[this.tabletblSecurity.Inactive_FLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inactive_FL\' in table \'tblSecurity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurity.Inactive_FLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupName {
                get {
                    try {
                        return ((string)(this[this.tabletblSecurity.GroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupName\' in table \'tblSecurity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurity.GroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tabletblSecurity.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tabletblSecurity.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPasswordNull() {
                return this.IsNull(this.tabletblSecurity.PasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPasswordNull() {
                this[this.tabletblSecurity.PasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabletblSecurity.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabletblSecurity.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInactive_FLNull() {
                return this.IsNull(this.tabletblSecurity.Inactive_FLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInactive_FLNull() {
                this[this.tabletblSecurity.Inactive_FLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupNameNull() {
                return this.IsNull(this.tabletblSecurity.GroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupNameNull() {
                this[this.tabletblSecurity.GroupNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblSecurityLevelRow : global::System.Data.DataRow {
            
            private tblSecurityLevelDataTable tabletblSecurityLevel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblSecurityLevelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSecurityLevel = ((tblSecurityLevelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SecurityLevel_ID {
                get {
                    return ((int)(this[this.tabletblSecurityLevel.SecurityLevel_IDColumn]));
                }
                set {
                    this[this.tabletblSecurityLevel.SecurityLevel_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecurityName {
                get {
                    try {
                        return ((string)(this[this.tabletblSecurityLevel.SecurityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityName\' in table \'tblSecurityLevel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurityLevel.SecurityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Datetime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSecurityLevel.DatetimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Datetime\' in table \'tblSecurityLevel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurityLevel.DatetimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Inactive_FL {
                get {
                    try {
                        return ((bool)(this[this.tabletblSecurityLevel.Inactive_FLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inactive_FL\' in table \'tblSecurityLevel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSecurityLevel.Inactive_FLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecurityNameNull() {
                return this.IsNull(this.tabletblSecurityLevel.SecurityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecurityNameNull() {
                this[this.tabletblSecurityLevel.SecurityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatetimeNull() {
                return this.IsNull(this.tabletblSecurityLevel.DatetimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatetimeNull() {
                this[this.tabletblSecurityLevel.DatetimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInactive_FLNull() {
                return this.IsNull(this.tabletblSecurityLevel.Inactive_FLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInactive_FLNull() {
                this[this.tabletblSecurityLevel.Inactive_FLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblLogingRow : global::System.Data.DataRow {
            
            private tblLogingDataTable tabletblLoging;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblLogingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblLoging = ((tblLogingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblLoging.IDColumn]));
                }
                set {
                    this[this.tabletblLoging.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tabletblLoging.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'tblLoging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLoging.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LoginTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblLoging.LoginTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginTime\' in table \'tblLoging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLoging.LoginTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LogoffTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblLoging.LogoffTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogoffTime\' in table \'tblLoging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLoging.LogoffTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int R_ID {
                get {
                    try {
                        return ((int)(this[this.tabletblLoging.R_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'R_ID\' in table \'tblLoging\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLoging.R_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tabletblLoging.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tabletblLoging.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoginTimeNull() {
                return this.IsNull(this.tabletblLoging.LoginTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoginTimeNull() {
                this[this.tabletblLoging.LoginTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoffTimeNull() {
                return this.IsNull(this.tabletblLoging.LogoffTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoffTimeNull() {
                this[this.tabletblLoging.LogoffTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsR_IDNull() {
                return this.IsNull(this.tabletblLoging.R_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetR_IDNull() {
                this[this.tabletblLoging.R_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_DonationRow : global::System.Data.DataRow {
            
            private usp_SEL_DonationDataTable tableusp_SEL_Donation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_DonationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_Donation = ((usp_SEL_DonationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableusp_SEL_Donation.IDColumn]));
                }
                set {
                    this[this.tableusp_SEL_Donation.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_Donation.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedFrom {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ReceivedFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedFrom\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ReceivedFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LaagaEng {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.LaagaEngColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LaagaEng\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.LaagaEngColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LaagaMrg {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.LaagaMrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LaagaMrg\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.LaagaMrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PoorFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.PoorFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoorFund\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.PoorFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZakatFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.ZakatFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZakatFund\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ZakatFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QabristanFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.QabristanFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QabristanFund\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.QabristanFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GeneralFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.GeneralFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralFund\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.GeneralFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EducationFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.EducationFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EducationFund\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.EducationFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TameratiFund {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.TameratiFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TameratiFund\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.TameratiFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NewCard {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.NewCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewCard\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.NewCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Others {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.OthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Others\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.OthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AccountRelation {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Donation.AccountRelationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountRelation\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.AccountRelationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeZ {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Donation.TypeZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeZ\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.TypeZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeG {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Donation.TypeGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeG\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.TypeGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TypeE {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_Donation.TypeEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeE\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.TypeEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ZNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZNo\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ZNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.GNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GNo\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.GNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ENoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENo\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ENoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LagaAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.LagaAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LagaAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.LagaAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PoorAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.PoorAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoorAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.PoorAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EduAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.EduAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EduAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.EduAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QabAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.QabAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QabAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.QabAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TamAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.TamAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TamAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.TamAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZakatAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ZakatAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZakatAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ZakatAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.CardAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.CardAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GenAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.GenAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.GenAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherAcc {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.OtherAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAcc\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.OtherAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LaagaFor {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.LaagaForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LaagaFor\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.LaagaForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LateDeath {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.LateDeathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateDeath\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.LateDeathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CrtfType {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.CrtfTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrtfType\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.CrtfTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Crtf {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_SEL_Donation.CrtfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Crtf\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.CrtfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForCrtf {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ForCrtfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForCrtf\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ForCrtfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForBirth {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ForBirthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForBirth\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ForBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForDeath {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.ForDeathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForDeath\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.ForDeathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccCrtf {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.AccCrtfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccCrtf\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.AccCrtfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.CardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardNo\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.CardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_Donation.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'usp_SEL_Donation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_Donation.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNoNull() {
                this[this.tableusp_SEL_Donation.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableusp_SEL_Donation.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableusp_SEL_Donation.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedFromNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ReceivedFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedFromNull() {
                this[this.tableusp_SEL_Donation.ReceivedFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaagaEngNull() {
                return this.IsNull(this.tableusp_SEL_Donation.LaagaEngColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaagaEngNull() {
                this[this.tableusp_SEL_Donation.LaagaEngColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaagaMrgNull() {
                return this.IsNull(this.tableusp_SEL_Donation.LaagaMrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaagaMrgNull() {
                this[this.tableusp_SEL_Donation.LaagaMrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoorFundNull() {
                return this.IsNull(this.tableusp_SEL_Donation.PoorFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoorFundNull() {
                this[this.tableusp_SEL_Donation.PoorFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZakatFundNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ZakatFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZakatFundNull() {
                this[this.tableusp_SEL_Donation.ZakatFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQabristanFundNull() {
                return this.IsNull(this.tableusp_SEL_Donation.QabristanFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQabristanFundNull() {
                this[this.tableusp_SEL_Donation.QabristanFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralFundNull() {
                return this.IsNull(this.tableusp_SEL_Donation.GeneralFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralFundNull() {
                this[this.tableusp_SEL_Donation.GeneralFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEducationFundNull() {
                return this.IsNull(this.tableusp_SEL_Donation.EducationFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEducationFundNull() {
                this[this.tableusp_SEL_Donation.EducationFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTameratiFundNull() {
                return this.IsNull(this.tableusp_SEL_Donation.TameratiFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTameratiFundNull() {
                this[this.tableusp_SEL_Donation.TameratiFundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewCardNull() {
                return this.IsNull(this.tableusp_SEL_Donation.NewCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewCardNull() {
                this[this.tableusp_SEL_Donation.NewCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOthersNull() {
                return this.IsNull(this.tableusp_SEL_Donation.OthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOthersNull() {
                this[this.tableusp_SEL_Donation.OthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountRelationNull() {
                return this.IsNull(this.tableusp_SEL_Donation.AccountRelationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountRelationNull() {
                this[this.tableusp_SEL_Donation.AccountRelationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_SEL_Donation.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_SEL_Donation.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableusp_SEL_Donation.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableusp_SEL_Donation.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tableusp_SEL_Donation.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tableusp_SEL_Donation.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tableusp_SEL_Donation.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tableusp_SEL_Donation.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeZNull() {
                return this.IsNull(this.tableusp_SEL_Donation.TypeZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeZNull() {
                this[this.tableusp_SEL_Donation.TypeZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeGNull() {
                return this.IsNull(this.tableusp_SEL_Donation.TypeGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeGNull() {
                this[this.tableusp_SEL_Donation.TypeGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeENull() {
                return this.IsNull(this.tableusp_SEL_Donation.TypeEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeENull() {
                this[this.tableusp_SEL_Donation.TypeEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZNoNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ZNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZNoNull() {
                this[this.tableusp_SEL_Donation.ZNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGNoNull() {
                return this.IsNull(this.tableusp_SEL_Donation.GNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGNoNull() {
                this[this.tableusp_SEL_Donation.GNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENoNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ENoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENoNull() {
                this[this.tableusp_SEL_Donation.ENoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLagaAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.LagaAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLagaAccNull() {
                this[this.tableusp_SEL_Donation.LagaAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoorAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.PoorAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoorAccNull() {
                this[this.tableusp_SEL_Donation.PoorAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEduAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.EduAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEduAccNull() {
                this[this.tableusp_SEL_Donation.EduAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQabAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.QabAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQabAccNull() {
                this[this.tableusp_SEL_Donation.QabAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTamAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.TamAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTamAccNull() {
                this[this.tableusp_SEL_Donation.TamAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZakatAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ZakatAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZakatAccNull() {
                this[this.tableusp_SEL_Donation.ZakatAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.CardAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardAccNull() {
                this[this.tableusp_SEL_Donation.CardAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.GenAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenAccNull() {
                this[this.tableusp_SEL_Donation.GenAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAccNull() {
                return this.IsNull(this.tableusp_SEL_Donation.OtherAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAccNull() {
                this[this.tableusp_SEL_Donation.OtherAccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaagaForNull() {
                return this.IsNull(this.tableusp_SEL_Donation.LaagaForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaagaForNull() {
                this[this.tableusp_SEL_Donation.LaagaForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLateDeathNull() {
                return this.IsNull(this.tableusp_SEL_Donation.LateDeathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLateDeathNull() {
                this[this.tableusp_SEL_Donation.LateDeathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrtfTypeNull() {
                return this.IsNull(this.tableusp_SEL_Donation.CrtfTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrtfTypeNull() {
                this[this.tableusp_SEL_Donation.CrtfTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCrtfNull() {
                return this.IsNull(this.tableusp_SEL_Donation.CrtfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCrtfNull() {
                this[this.tableusp_SEL_Donation.CrtfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForCrtfNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ForCrtfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForCrtfNull() {
                this[this.tableusp_SEL_Donation.ForCrtfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForBirthNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ForBirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForBirthNull() {
                this[this.tableusp_SEL_Donation.ForBirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForDeathNull() {
                return this.IsNull(this.tableusp_SEL_Donation.ForDeathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForDeathNull() {
                this[this.tableusp_SEL_Donation.ForDeathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccCrtfNull() {
                return this.IsNull(this.tableusp_SEL_Donation.AccCrtfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccCrtfNull() {
                this[this.tableusp_SEL_Donation.AccCrtfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardNoNull() {
                return this.IsNull(this.tableusp_SEL_Donation.CardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardNoNull() {
                this[this.tableusp_SEL_Donation.CardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableusp_SEL_Donation.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableusp_SEL_Donation.MobileColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblUserGroupRow : global::System.Data.DataRow {
            
            private tblUserGroupDataTable tabletblUserGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblUserGroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblUserGroup = ((tblUserGroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblUserGroup.IDColumn]));
                }
                set {
                    this[this.tabletblUserGroup.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupName {
                get {
                    try {
                        return ((string)(this[this.tabletblUserGroup.GroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupName\' in table \'tblUserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblUserGroup.GroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Active {
                get {
                    try {
                        return ((bool)(this[this.tabletblUserGroup.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'tblUserGroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblUserGroup.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupNameNull() {
                return this.IsNull(this.tabletblUserGroup.GroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupNameNull() {
                this[this.tabletblUserGroup.GroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActiveNull() {
                return this.IsNull(this.tabletblUserGroup.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActiveNull() {
                this[this.tabletblUserGroup.ActiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblHelpRow : global::System.Data.DataRow {
            
            private tblHelpDataTable tabletblHelp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblHelpRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblHelp = ((tblHelpDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblHelp.IDColumn]));
                }
                set {
                    this[this.tabletblHelp.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeadofFamily {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.HeadofFamilyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadofFamily\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.HeadofFamilyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiveDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblHelp.ReceiveDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiveDate\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.ReceiveDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblHelp.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CompleteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblHelp.CompleteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteDate\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.CompleteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SerialNo {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Aid {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.AidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aid\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.AidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AidFrom {
                get {
                    try {
                        return ((string)(this[this.tabletblHelp.AidFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AidFrom\' in table \'tblHelp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHelp.AidFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tabletblHelp.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tabletblHelp.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadofFamilyNull() {
                return this.IsNull(this.tabletblHelp.HeadofFamilyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadofFamilyNull() {
                this[this.tabletblHelp.HeadofFamilyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tabletblHelp.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tabletblHelp.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tabletblHelp.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tabletblHelp.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveDateNull() {
                return this.IsNull(this.tabletblHelp.ReceiveDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveDateNull() {
                this[this.tabletblHelp.ReceiveDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabletblHelp.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabletblHelp.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblHelp.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblHelp.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompleteDateNull() {
                return this.IsNull(this.tabletblHelp.CompleteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompleteDateNull() {
                this[this.tabletblHelp.CompleteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tabletblHelp.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tabletblHelp.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabletblHelp.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabletblHelp.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAidNull() {
                return this.IsNull(this.tabletblHelp.AidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAidNull() {
                this[this.tabletblHelp.AidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tabletblHelp.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tabletblHelp.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAidFromNull() {
                return this.IsNull(this.tabletblHelp.AidFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAidFromNull() {
                this[this.tabletblHelp.AidFromColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblDailyTransactionsRow : global::System.Data.DataRow {
            
            private tblDailyTransactionsDataTable tabletblDailyTransactions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblDailyTransactionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblDailyTransactions = ((tblDailyTransactionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentNo {
                get {
                    try {
                        return ((int)(this[this.tabletblDailyTransactions.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'tblDailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDailyTransactions.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher {
                get {
                    try {
                        return ((string)(this[this.tabletblDailyTransactions.VoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher\' in table \'tblDailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDailyTransactions.VoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblDailyTransactions.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'tblDailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDailyTransactions.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tabletblDailyTransactions.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'tblDailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDailyTransactions.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tabletblDailyTransactions.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'tblDailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDailyTransactions.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Debit {
                get {
                    try {
                        return ((decimal)(this[this.tabletblDailyTransactions.DebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debit\' in table \'tblDailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDailyTransactions.DebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Credit {
                get {
                    try {
                        return ((decimal)(this[this.tabletblDailyTransactions.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'tblDailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblDailyTransactions.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tabletblDailyTransactions.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNoNull() {
                this[this.tabletblDailyTransactions.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNull() {
                return this.IsNull(this.tabletblDailyTransactions.VoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNull() {
                this[this.tabletblDailyTransactions.VoucherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tabletblDailyTransactions.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tabletblDailyTransactions.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tabletblDailyTransactions.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tabletblDailyTransactions.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tabletblDailyTransactions.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tabletblDailyTransactions.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNull() {
                return this.IsNull(this.tabletblDailyTransactions.DebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNull() {
                this[this.tabletblDailyTransactions.DebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tabletblDailyTransactions.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tabletblDailyTransactions.CreditColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblAdvance1Row : global::System.Data.DataRow {
            
            private tblAdvance1DataTable tabletblAdvance1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAdvance1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblAdvance1 = ((tblAdvance1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblAdvance1.IDColumn]));
                }
                set {
                    this[this.tabletblAdvance1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance1.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecFrom {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance1.RecFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecFrom\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.RecFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Persons {
                get {
                    try {
                        return ((decimal)(this[this.tabletblAdvance1.PersonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Persons\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.PersonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PerPerson {
                get {
                    try {
                        return ((decimal)(this[this.tabletblAdvance1.PerPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerPerson\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.PerPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvPercent {
                get {
                    try {
                        return ((decimal)(this[this.tabletblAdvance1.AdvPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvPercent\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.AdvPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblAdvance1.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance1.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblAdvance1.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'tblAdvance1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance1.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tabletblAdvance1.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tabletblAdvance1.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecFromNull() {
                return this.IsNull(this.tabletblAdvance1.RecFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecFromNull() {
                this[this.tabletblAdvance1.RecFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonsNull() {
                return this.IsNull(this.tabletblAdvance1.PersonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonsNull() {
                this[this.tabletblAdvance1.PersonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerPersonNull() {
                return this.IsNull(this.tabletblAdvance1.PerPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerPersonNull() {
                this[this.tabletblAdvance1.PerPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvPercentNull() {
                return this.IsNull(this.tabletblAdvance1.AdvPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvPercentNull() {
                this[this.tabletblAdvance1.AdvPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblAdvance1.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblAdvance1.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tabletblAdvance1.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNoNull() {
                this[this.tabletblAdvance1.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabletblAdvance1.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabletblAdvance1.DateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblAdvanceRow : global::System.Data.DataRow {
            
            private tblAdvanceDataTable tabletblAdvance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAdvanceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblAdvance = ((tblAdvanceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblAdvance.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Head {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.HeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Head\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.HeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hbkReceipt {
                get {
                    try {
                        return ((string)(this[this.tabletblAdvance.hbkReceiptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hbkReceipt\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.hbkReceiptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblAdvance.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblAdvance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAdvance.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tabletblAdvance.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNoNull() {
                this[this.tabletblAdvance.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabletblAdvance.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabletblAdvance.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tabletblAdvance.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tabletblAdvance.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadNull() {
                return this.IsNull(this.tabletblAdvance.HeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadNull() {
                this[this.tabletblAdvance.HeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tabletblAdvance.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tabletblAdvance.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tabletblAdvance.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tabletblAdvance.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNoNull() {
                return this.IsNull(this.tabletblAdvance.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNoNull() {
                this[this.tabletblAdvance.ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tabletblAdvance.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tabletblAdvance.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshbkReceiptNull() {
                return this.IsNull(this.tabletblAdvance.hbkReceiptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethbkReceiptNull() {
                this[this.tabletblAdvance.hbkReceiptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblAdvance.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblAdvance.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblNICFormRow : global::System.Data.DataRow {
            
            private tblNICFormDataTable tabletblNICForm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblNICFormRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblNICForm = ((tblNICFormDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tabletblNICForm.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'tblNICForm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNICForm.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblNICForm.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'tblNICForm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNICForm.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tabletblNICForm.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'tblNICForm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNICForm.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Head {
                get {
                    try {
                        return ((string)(this[this.tabletblNICForm.HeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Head\' in table \'tblNICForm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNICForm.HeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tabletblNICForm.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'tblNICForm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNICForm.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tabletblNICForm.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'tblNICForm\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNICForm.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tabletblNICForm.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptNoNull() {
                this[this.tabletblNICForm.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabletblNICForm.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabletblNICForm.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tabletblNICForm.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tabletblNICForm.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadNull() {
                return this.IsNull(this.tabletblNICForm.HeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadNull() {
                this[this.tabletblNICForm.HeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tabletblNICForm.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tabletblNICForm.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tabletblNICForm.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tabletblNICForm.OrakhColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblAidsRow : global::System.Data.DataRow {
            
            private tblAidsDataTable tabletblAids;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblAidsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblAids = ((tblAidsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblAids.IDColumn]));
                }
                set {
                    this[this.tabletblAids.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Aid {
                get {
                    try {
                        return ((string)(this[this.tabletblAids.AidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aid\' in table \'tblAids\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblAids.AidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAidNull() {
                return this.IsNull(this.tabletblAids.AidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAidNull() {
                this[this.tabletblAids.AidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_SEL_CancelledEventsRow : global::System.Data.DataRow {
            
            private usp_SEL_CancelledEventsDataTable tableusp_SEL_CancelledEvents;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_SEL_CancelledEventsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_SEL_CancelledEvents = ((usp_SEL_CancelledEventsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long EventCancellationId {
                get {
                    return ((long)(this[this.tableusp_SEL_CancelledEvents.EventCancellationIdColumn]));
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.EventCancellationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long EventId {
                get {
                    try {
                        return ((long)(this[this.tableusp_SEL_CancelledEvents.EventIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventId\' in table \'usp_SEL_CancelledEvents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.EventIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HallNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_CancelledEvents.HallNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HallNo\' in table \'usp_SEL_CancelledEvents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.HallNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CancellationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_CancelledEvents.CancellationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CancellationDate\' in table \'usp_SEL_CancelledEvents\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.CancellationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EventDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_SEL_CancelledEvents.EventDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventDate\' in table \'usp_SEL_CancelledEvents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.EventDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableusp_SEL_CancelledEvents.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'usp_SEL_CancelledEvents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableusp_SEL_CancelledEvents.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'usp_SEL_CancelledEvents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BookingId {
                get {
                    try {
                        return ((long)(this[this.tableusp_SEL_CancelledEvents.BookingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingId\' in table \'usp_SEL_CancelledEvents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_SEL_CancelledEvents.BookingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventIdNull() {
                return this.IsNull(this.tableusp_SEL_CancelledEvents.EventIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventIdNull() {
                this[this.tableusp_SEL_CancelledEvents.EventIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHallNoNull() {
                return this.IsNull(this.tableusp_SEL_CancelledEvents.HallNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHallNoNull() {
                this[this.tableusp_SEL_CancelledEvents.HallNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCancellationDateNull() {
                return this.IsNull(this.tableusp_SEL_CancelledEvents.CancellationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCancellationDateNull() {
                this[this.tableusp_SEL_CancelledEvents.CancellationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventDateNull() {
                return this.IsNull(this.tableusp_SEL_CancelledEvents.EventDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventDateNull() {
                this[this.tableusp_SEL_CancelledEvents.EventDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableusp_SEL_CancelledEvents.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableusp_SEL_CancelledEvents.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableusp_SEL_CancelledEvents.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableusp_SEL_CancelledEvents.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingIdNull() {
                return this.IsNull(this.tableusp_SEL_CancelledEvents.BookingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingIdNull() {
                this[this.tableusp_SEL_CancelledEvents.BookingIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_RPT_DailyTransactionsRow : global::System.Data.DataRow {
            
            private usp_RPT_DailyTransactionsDataTable tableusp_RPT_DailyTransactions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_RPT_DailyTransactionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_RPT_DailyTransactions = ((usp_RPT_DailyTransactionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentNo {
                get {
                    try {
                        return ((int)(this[this.tableusp_RPT_DailyTransactions.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'usp_RPT_DailyTransactions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_RPT_DailyTransactions.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher {
                get {
                    try {
                        return ((string)(this[this.tableusp_RPT_DailyTransactions.VoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher\' in table \'usp_RPT_DailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_RPT_DailyTransactions.VoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_RPT_DailyTransactions.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'usp_RPT_DailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_RPT_DailyTransactions.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tableusp_RPT_DailyTransactions.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'usp_RPT_DailyTransactions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableusp_RPT_DailyTransactions.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableusp_RPT_DailyTransactions.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'usp_RPT_DailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_RPT_DailyTransactions.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Debit {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_RPT_DailyTransactions.DebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debit\' in table \'usp_RPT_DailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_RPT_DailyTransactions.DebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Credit {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_RPT_DailyTransactions.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'usp_RPT_DailyTransactions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_RPT_DailyTransactions.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tableusp_RPT_DailyTransactions.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNoNull() {
                this[this.tableusp_RPT_DailyTransactions.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNull() {
                return this.IsNull(this.tableusp_RPT_DailyTransactions.VoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNull() {
                this[this.tableusp_RPT_DailyTransactions.VoucherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tableusp_RPT_DailyTransactions.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tableusp_RPT_DailyTransactions.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tableusp_RPT_DailyTransactions.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tableusp_RPT_DailyTransactions.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableusp_RPT_DailyTransactions.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableusp_RPT_DailyTransactions.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNull() {
                return this.IsNull(this.tableusp_RPT_DailyTransactions.DebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNull() {
                this[this.tableusp_RPT_DailyTransactions.DebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tableusp_RPT_DailyTransactions.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tableusp_RPT_DailyTransactions.CreditColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_DailyTransactions_ReportRow : global::System.Data.DataRow {
            
            private usp_DailyTransactions_ReportDataTable tableusp_DailyTransactions_Report;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_DailyTransactions_ReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_DailyTransactions_Report = ((usp_DailyTransactions_ReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentNo {
                get {
                    try {
                        return ((int)(this[this.tableusp_DailyTransactions_Report.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'usp_DailyTransactions_Report\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableusp_DailyTransactions_Report.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voucher {
                get {
                    try {
                        return ((string)(this[this.tableusp_DailyTransactions_Report.VoucherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voucher\' in table \'usp_DailyTransactions_Report\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableusp_DailyTransactions_Report.VoucherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_DailyTransactions_Report.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'usp_DailyTransactions_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_DailyTransactions_Report.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tableusp_DailyTransactions_Report.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'usp_DailyTransactions_Report\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableusp_DailyTransactions_Report.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableusp_DailyTransactions_Report.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'usp_DailyTransactions_Report\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableusp_DailyTransactions_Report.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Debit {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_DailyTransactions_Report.DebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debit\' in table \'usp_DailyTransactions_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_DailyTransactions_Report.DebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Credit {
                get {
                    try {
                        return ((decimal)(this[this.tableusp_DailyTransactions_Report.CreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credit\' in table \'usp_DailyTransactions_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_DailyTransactions_Report.CreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tableusp_DailyTransactions_Report.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNoNull() {
                this[this.tableusp_DailyTransactions_Report.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNull() {
                return this.IsNull(this.tableusp_DailyTransactions_Report.VoucherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNull() {
                this[this.tableusp_DailyTransactions_Report.VoucherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tableusp_DailyTransactions_Report.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tableusp_DailyTransactions_Report.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tableusp_DailyTransactions_Report.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tableusp_DailyTransactions_Report.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableusp_DailyTransactions_Report.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableusp_DailyTransactions_Report.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNull() {
                return this.IsNull(this.tableusp_DailyTransactions_Report.DebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNull() {
                this[this.tableusp_DailyTransactions_Report.DebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNull() {
                return this.IsNull(this.tableusp_DailyTransactions_Report.CreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNull() {
                this[this.tableusp_DailyTransactions_Report.CreditColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_GetHallBookingRow : global::System.Data.DataRow {
            
            private usp_GetHallBookingDataTable tableusp_GetHallBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_GetHallBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_GetHallBooking = ((usp_GetHallBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Serialno {
                get {
                    try {
                        return ((int)(this[this.tableusp_GetHallBooking.SerialnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serialno\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.SerialnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mr {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.MrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mr\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.MrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Events {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.EventsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Events\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.EventsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EventDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.EventDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventDate\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.EventDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Day {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.DayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.FromTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromTime\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.FromTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.ToTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToTime\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall1 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall1\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall2 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall2\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall3 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall3\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall4 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall4\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall5 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall5\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialnoNull() {
                return this.IsNull(this.tableusp_GetHallBooking.SerialnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialnoNull() {
                this[this.tableusp_GetHallBooking.SerialnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_GetHallBooking.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_GetHallBooking.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMrNull() {
                return this.IsNull(this.tableusp_GetHallBooking.MrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMrNull() {
                this[this.tableusp_GetHallBooking.MrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tableusp_GetHallBooking.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tableusp_GetHallBooking.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventsNull() {
                return this.IsNull(this.tableusp_GetHallBooking.EventsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventsNull() {
                this[this.tableusp_GetHallBooking.EventsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventDateNull() {
                return this.IsNull(this.tableusp_GetHallBooking.EventDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventDateNull() {
                this[this.tableusp_GetHallBooking.EventDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNull() {
                return this.IsNull(this.tableusp_GetHallBooking.DayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNull() {
                this[this.tableusp_GetHallBooking.DayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromTimeNull() {
                return this.IsNull(this.tableusp_GetHallBooking.FromTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromTimeNull() {
                this[this.tableusp_GetHallBooking.FromTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToTimeNull() {
                return this.IsNull(this.tableusp_GetHallBooking.ToTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToTimeNull() {
                this[this.tableusp_GetHallBooking.ToTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall1Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall1Null() {
                this[this.tableusp_GetHallBooking.Hall1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall2Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall2Null() {
                this[this.tableusp_GetHallBooking.Hall2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall3Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall3Null() {
                this[this.tableusp_GetHallBooking.Hall3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall4Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall4Null() {
                this[this.tableusp_GetHallBooking.Hall4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall5Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall5Null() {
                this[this.tableusp_GetHallBooking.Hall5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNoNull() {
                return this.IsNull(this.tableusp_GetHallBooking.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNoNull() {
                this[this.tableusp_GetHallBooking.ContactNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_HallBooking_SearchRowChangeEvent : global::System.EventArgs {
            
            private usp_HallBooking_SearchRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_SearchRowChangeEvent(usp_HallBooking_SearchRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_SearchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_DDL_USERRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_DDL_USERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DDL_USERRowChangeEvent(usp_SEL_DDL_USERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DDL_USERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblPermissionRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblPermissionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblPermissionRowChangeEvent(usp_SEL_tblPermissionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblPermissionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_FAMILYRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_FAMILYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_FAMILYRowChangeEvent(usp_SEL_FAMILYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_FAMILYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblNukhRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblNukhRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblNukhRowChangeEvent(usp_SEL_tblNukhRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblNukhRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblOrakhRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblOrakhRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblOrakhRowChangeEvent(usp_SEL_tblOrakhRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblOrakhRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblCityRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblCityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblCityRowChangeEvent(usp_SEL_tblCityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblCityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblVillageRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblVillageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblVillageRowChangeEvent(usp_SEL_tblVillageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblVillageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblFamilyMemberRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblFamilyMemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblFamilyMemberRowChangeEvent(usp_SEL_tblFamilyMemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblFamilyMemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblBloodGroupRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblBloodGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblBloodGroupRowChangeEvent(usp_SEL_tblBloodGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblBloodGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblAreaRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblAreaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblAreaRowChangeEvent(usp_SEL_tblAreaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblAreaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_EngagementRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_EngagementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_EngagementRowChangeEvent(usp_SEL_EngagementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_EngagementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_Male_tblFamilyMemberRowChangeEvent : global::System.EventArgs {
            
            private usp_Male_tblFamilyMemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Male_tblFamilyMemberRowChangeEvent(usp_Male_tblFamilyMemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Male_tblFamilyMemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_Female_tblFamilyMemberRowChangeEvent : global::System.EventArgs {
            
            private usp_Female_tblFamilyMemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Female_tblFamilyMemberRowChangeEvent(usp_Female_tblFamilyMemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_Female_tblFamilyMemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_MarriageRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_MarriageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_MarriageRowChangeEvent(usp_SEL_MarriageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_MarriageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_tblWorkTypeRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_tblWorkTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblWorkTypeRowChangeEvent(usp_SEL_tblWorkTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_tblWorkTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_rpt_MembersRowChangeEvent : global::System.EventArgs {
            
            private usp_rpt_MembersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_rpt_MembersRowChangeEvent(usp_rpt_MembersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_rpt_MembersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblTransactionsRowChangeEvent : global::System.EventArgs {
            
            private tblTransactionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransactionsRowChangeEvent(tblTransactionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTransactionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblVouchersRowChangeEvent : global::System.EventArgs {
            
            private tblVouchersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVouchersRowChangeEvent(tblVouchersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVouchersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblLedgerRowChangeEvent : global::System.EventArgs {
            
            private tblLedgerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLedgerRowChangeEvent(tblLedgerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLedgerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_HallBooking_Search_RowChangeEvent : global::System.EventArgs {
            
            private usp_HallBooking_Search_Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_Search_RowChangeEvent(usp_HallBooking_Search_Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_HallBooking_Search_Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_BirthRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_BirthRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_BirthRowChangeEvent(usp_SEL_BirthRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_BirthRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_DeathRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_DeathRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DeathRowChangeEvent(usp_SEL_DeathRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DeathRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_RenewalRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_RenewalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_RenewalRowChangeEvent(usp_SEL_RenewalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_RenewalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblAccountsRowChangeEvent : global::System.EventArgs {
            
            private tblAccountsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAccountsRowChangeEvent(tblAccountsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAccountsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_TSF_tblFamilyMemberRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_TSF_tblFamilyMemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_TSF_tblFamilyMemberRowChangeEvent(usp_SEL_TSF_tblFamilyMemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_TSF_tblFamilyMemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblMembersRowChangeEvent : global::System.EventArgs {
            
            private tblMembersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMembersRowChangeEvent(tblMembersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblMembersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblTrialBalanceRowChangeEvent : global::System.EventArgs {
            
            private tblTrialBalanceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTrialBalanceRowChangeEvent(tblTrialBalanceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblTrialBalanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblSecurityRowChangeEvent : global::System.EventArgs {
            
            private tblSecurityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityRowChangeEvent(tblSecurityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblSecurityLevelRowChangeEvent : global::System.EventArgs {
            
            private tblSecurityLevelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityLevelRowChangeEvent(tblSecurityLevelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblSecurityLevelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblLogingRowChangeEvent : global::System.EventArgs {
            
            private tblLogingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLogingRowChangeEvent(tblLogingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblLogingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_DonationRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_DonationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DonationRowChangeEvent(usp_SEL_DonationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_DonationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblUserGroupRowChangeEvent : global::System.EventArgs {
            
            private tblUserGroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupRowChangeEvent(tblUserGroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblUserGroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblHelpRowChangeEvent : global::System.EventArgs {
            
            private tblHelpRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHelpRowChangeEvent(tblHelpRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHelpRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblDailyTransactionsRowChangeEvent : global::System.EventArgs {
            
            private tblDailyTransactionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDailyTransactionsRowChangeEvent(tblDailyTransactionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblDailyTransactionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblAdvance1RowChangeEvent : global::System.EventArgs {
            
            private tblAdvance1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvance1RowChangeEvent(tblAdvance1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvance1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblAdvanceRowChangeEvent : global::System.EventArgs {
            
            private tblAdvanceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvanceRowChangeEvent(tblAdvanceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAdvanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblNICFormRowChangeEvent : global::System.EventArgs {
            
            private tblNICFormRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICFormRowChangeEvent(tblNICFormRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICFormRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblAidsRowChangeEvent : global::System.EventArgs {
            
            private tblAidsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAidsRowChangeEvent(tblAidsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblAidsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_SEL_CancelledEventsRowChangeEvent : global::System.EventArgs {
            
            private usp_SEL_CancelledEventsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_CancelledEventsRowChangeEvent(usp_SEL_CancelledEventsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_SEL_CancelledEventsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_RPT_DailyTransactionsRowChangeEvent : global::System.EventArgs {
            
            private usp_RPT_DailyTransactionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_RPT_DailyTransactionsRowChangeEvent(usp_RPT_DailyTransactionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_RPT_DailyTransactionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_DailyTransactions_ReportRowChangeEvent : global::System.EventArgs {
            
            private usp_DailyTransactions_ReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_DailyTransactions_ReportRowChangeEvent(usp_DailyTransactions_ReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_DailyTransactions_ReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_GetHallBookingRowChangeEvent : global::System.EventArgs {
            
            private usp_GetHallBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRowChangeEvent(usp_GetHallBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MCKJ.ComDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_HallBooking_SearchTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_HallBooking_SearchTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_HallBooking_Search";
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("BookedBy", "BookedBy");
            tableMapping.ColumnMappings.Add("Events", "Events");
            tableMapping.ColumnMappings.Add("Hall1", "Hall1");
            tableMapping.ColumnMappings.Add("Hall2", "Hall2");
            tableMapping.ColumnMappings.Add("Hall3", "Hall3");
            tableMapping.ColumnMappings.Add("Hall4", "Hall4");
            tableMapping.ColumnMappings.Add("FromTime", "FromTime");
            tableMapping.ColumnMappings.Add("ToTime", "ToTime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     tblHallBooking.SerialNo, tblHallBooking.Date, tblHallBooking.Mr + ' ' + tblHallBooking.FName + ' ' + tblHallBooking.Orakh AS BookedBy, 
                      tblEvents.Events, tblHallBooking.Hall1, tblHallBooking.Hall2, tblHallBooking.Hall3, tblHallBooking.Hall4, tblHallBooking.FromTime, 
                      tblHallBooking.ToTime
FROM         tblHallBooking INNER JOIN
                      tblEvents ON tblHallBooking.Event = tblEvents.ID
WHERE     (tblHallBooking.Dated = @Dated)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dated", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Dated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_HallBooking_SearchDataTable dataTable, global::System.Nullable<global::System.DateTime> Dated) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Dated.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_HallBooking_SearchDataTable GetData(global::System.Nullable<global::System.DateTime> Dated) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Dated.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_HallBooking_SearchDataTable dataTable = new ComDataSet.usp_HallBooking_SearchDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_DDL_USERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_DDL_USERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_DDL_USER";
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserName", "UserName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_DDL_USER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_CHK_tblSecutity";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_DDL_USERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_DDL_USERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_DDL_USERDataTable dataTable = new ComDataSet.usp_SEL_DDL_USERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object CheckLogin(global::System.Nullable<int> UserID, string Password) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(UserID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Password == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Password));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblPermissionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblPermissionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblPermission";
            tableMapping.ColumnMappings.Add("PermissionID", "PermissionID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("SecurityLevelID", "SecurityLevelID");
            tableMapping.ColumnMappings.Add("Read", "Read");
            tableMapping.ColumnMappings.Add("Write", "Write");
            tableMapping.ColumnMappings.Add("Modify", "Modify");
            tableMapping.ColumnMappings.Add("Delete", "Delete");
            tableMapping.ColumnMappings.Add("Inactive_FL", "Inactive_FL");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblPermission";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE from tblPermission where UserID = @UserID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO tblPermission (UserID,SecurityLevelID,[Read],Write,Modify,[Delete],In" +
                "active_FL) VALUES(@UserID,@SecurityLevelID,@Read,@Write,@Modify,@Delete,@Inactiv" +
                "e_FL)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityLevelID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityLevelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Read", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Read", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Write", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Write", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modify", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Modify", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delete", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Delete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE tblPermission\r\n\t\tSET\r\n\t\t\tUserID = @UserID,\r\n\t\t\tSecurityLevelID = @Security" +
                "LevelID,\r\n\t\t\t[Read] = @Read,\r\n\t\t\tWrite = @Write,\r\n\t\t\tModify = @Modify,\r\n\t\t\t[Dele" +
                "te] = @Delete,\r\n\t\t\tInactive_FL = @Inactive_FL\r\n\r\n\t\tWHERE\r\n\t\t\tPermissionID = @Per" +
                "missionID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityLevelID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityLevelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Read", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Read", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Write", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Write", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modify", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Modify", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Delete", global::System.Data.SqlDbType.Int, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Delete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PermissionID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PermissionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblPermissionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblPermissionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblPermissionDataTable dataTable = new ComDataSet.usp_SEL_tblPermissionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeletePermission(global::System.Nullable<int> UserID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserID.HasValue == true)) {
                command.Parameters[0].Value = ((int)(UserID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertPermissions(global::System.Nullable<int> UserID, global::System.Nullable<int> SecurityLevelID, global::System.Nullable<int> Read, global::System.Nullable<int> Write, global::System.Nullable<int> Modify, global::System.Nullable<int> Delete, int Inactive_FL) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((UserID.HasValue == true)) {
                command.Parameters[0].Value = ((int)(UserID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SecurityLevelID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(SecurityLevelID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Read.HasValue == true)) {
                command.Parameters[2].Value = ((int)(Read.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Write.HasValue == true)) {
                command.Parameters[3].Value = ((int)(Write.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Modify.HasValue == true)) {
                command.Parameters[4].Value = ((int)(Modify.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Delete.HasValue == true)) {
                command.Parameters[5].Value = ((int)(Delete.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            command.Parameters[6].Value = ((int)(Inactive_FL));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdatePermissions(global::System.Nullable<int> UserID, global::System.Nullable<int> SecurityLevelID, global::System.Nullable<int> Read, global::System.Nullable<int> Write, global::System.Nullable<int> Modify, global::System.Nullable<int> Delete, int Inactive_FL, int PermissionID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((UserID.HasValue == true)) {
                command.Parameters[0].Value = ((int)(UserID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SecurityLevelID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(SecurityLevelID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Read.HasValue == true)) {
                command.Parameters[2].Value = ((int)(Read.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Write.HasValue == true)) {
                command.Parameters[3].Value = ((int)(Write.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Modify.HasValue == true)) {
                command.Parameters[4].Value = ((int)(Modify.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Delete.HasValue == true)) {
                command.Parameters[5].Value = ((int)(Delete.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            command.Parameters[6].Value = ((int)(Inactive_FL));
            command.Parameters[7].Value = ((int)(PermissionID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_FAMILYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_FAMILYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_FAMILY";
            tableMapping.ColumnMappings.Add("FamilyName", "FamilyName");
            tableMapping.ColumnMappings.Add("FamilyLeader", "FamilyLeader");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Area", "Area");
            tableMapping.ColumnMappings.Add("ResidentAddress", "ResidentAddress");
            tableMapping.ColumnMappings.Add("ResidentPhone", "ResidentPhone");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("BusinessName", "BusinessName");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("BusinessAddress", "BusinessAddress");
            tableMapping.ColumnMappings.Add("BusinessPhone", "BusinessPhone");
            tableMapping.ColumnMappings.Add("BusinessFax", "BusinessFax");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("Sign", "Sign");
            tableMapping.ColumnMappings.Add("Nukh", "Nukh");
            tableMapping.ColumnMappings.Add("Village", "Village");
            tableMapping.ColumnMappings.Add("IssueDate", "IssueDate");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("Restricted", "Restricted");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[7];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_FAMILY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE tblFamily Set Active = @Active , Restricted = @Restricted , Reason = @Reas" +
                "on Where FCardNo = @FCardNo";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Restricted", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Restricted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_DEL_FAMILY";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT FCardNo, FamilyName, FamilyLeader, Sign, Nukh, Village, Country, City, Area, ResidentAddress, ResidentPhone, Mobile, BusinessName, WorkType, Designation, BusinessAddress, BusinessPhone, BusinessFax, Email, Website, DOB, IssueDate, Gender, Active, Restricted, Reason FROM tblFamily";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.usp_ADD_FAMILY";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@issueDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyLeader", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sign", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Village", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResidentAddress", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResidentPhone", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessAddress", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessPhone", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessFax", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParentFCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenewalDueFrom", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.usp_SEL_LEADER_FAMILY";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "dbo.usp_UPD_FAMILY";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyLeader", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sign", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Village", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResidentAddress", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResidentPhone", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessAddress", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessPhone", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessFax", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parentFCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@renewalDueFrom", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userID", global::System.Data.SqlDbType.Int, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_FAMILYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_FAMILYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_FAMILYDataTable dataTable = new ComDataSet.usp_SEL_FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAll(ComDataSet.usp_SEL_FAMILYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_FAMILYDataTable GetDataBy5() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            ComDataSet.usp_SEL_FAMILYDataTable dataTable = new ComDataSet.usp_SEL_FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Leader(ComDataSet.usp_SEL_FAMILYDataTable dataTable, string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_FAMILYDataTable GetDataBy3(string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            ComDataSet.usp_SEL_FAMILYDataTable dataTable = new ComDataSet.usp_SEL_FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int Cancel_Active(global::System.Nullable<bool> Active, string Restricted, string Reason, string FCardNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Active.HasValue == true)) {
                command.Parameters[0].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Restricted == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Restricted));
            }
            if ((Reason == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Reason));
            }
            if ((FCardNo == null)) {
                throw new global::System.ArgumentNullException("FCardNo");
            }
            else {
                command.Parameters[3].Value = ((string)(FCardNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(string FCardNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((FCardNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(FCardNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(
                    string FCardNo, 
                    global::System.Nullable<global::System.DateTime> issueDate, 
                    string FamilyName, 
                    string FamilyLeader, 
                    string Gender, 
                    string DOB, 
                    string Country, 
                    string City, 
                    string Nukh, 
                    string Sign, 
                    string Village, 
                    string Area, 
                    string ResidentAddress, 
                    string ResidentPhone, 
                    string Mobile, 
                    string BusinessName, 
                    string WorkType, 
                    string Designation, 
                    string BusinessAddress, 
                    string BusinessPhone, 
                    string BusinessFax, 
                    string Email, 
                    string Website, 
                    global::System.Nullable<bool> Active, 
                    string ParentFCardNo, 
                    string RenewalDueFrom, 
                    int userID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((FCardNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((issueDate.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(issueDate.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FamilyName == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FamilyName));
            }
            if ((FamilyLeader == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FamilyLeader));
            }
            if ((Gender == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Gender));
            }
            if ((DOB == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(DOB));
            }
            if ((Country == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Country));
            }
            if ((City == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(City));
            }
            if ((Nukh == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Nukh));
            }
            if ((Sign == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Sign));
            }
            if ((Village == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Village));
            }
            if ((Area == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Area));
            }
            if ((ResidentAddress == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(ResidentAddress));
            }
            if ((ResidentPhone == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(ResidentPhone));
            }
            if ((Mobile == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Mobile));
            }
            if ((BusinessName == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(BusinessName));
            }
            if ((WorkType == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(WorkType));
            }
            if ((Designation == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Designation));
            }
            if ((BusinessAddress == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(BusinessAddress));
            }
            if ((BusinessPhone == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(BusinessPhone));
            }
            if ((BusinessFax == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(BusinessFax));
            }
            if ((Email == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(Email));
            }
            if ((Website == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(Website));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[24].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ParentFCardNo == null)) {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[25].Value = ((string)(ParentFCardNo));
            }
            if ((RenewalDueFrom == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(RenewalDueFrom));
            }
            command.Parameters[27].Value = ((int)(userID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(
                    string FCardNo, 
                    global::System.Nullable<global::System.DateTime> IssueDate, 
                    string FamilyName, 
                    string FamilyLeader, 
                    string Gender, 
                    string DOB, 
                    string Country, 
                    string City, 
                    string Nukh, 
                    string Sign, 
                    string Village, 
                    string Area, 
                    string ResidentAddress, 
                    string ResidentPhone, 
                    string Mobile, 
                    string BusinessName, 
                    string WorkType, 
                    string Designation, 
                    string BusinessAddress, 
                    string BusinessPhone, 
                    string BusinessFax, 
                    string Email, 
                    string Website, 
                    global::System.Nullable<bool> Active, 
                    string parentFCardNo, 
                    string renewalDueFrom, 
                    int userID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((FCardNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((IssueDate.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(IssueDate.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FamilyName == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FamilyName));
            }
            if ((FamilyLeader == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FamilyLeader));
            }
            if ((Gender == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Gender));
            }
            if ((DOB == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(DOB));
            }
            if ((Country == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Country));
            }
            if ((City == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(City));
            }
            if ((Nukh == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Nukh));
            }
            if ((Sign == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Sign));
            }
            if ((Village == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Village));
            }
            if ((Area == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Area));
            }
            if ((ResidentAddress == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(ResidentAddress));
            }
            if ((ResidentPhone == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(ResidentPhone));
            }
            if ((Mobile == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Mobile));
            }
            if ((BusinessName == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(BusinessName));
            }
            if ((WorkType == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(WorkType));
            }
            if ((Designation == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Designation));
            }
            if ((BusinessAddress == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(BusinessAddress));
            }
            if ((BusinessPhone == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(BusinessPhone));
            }
            if ((BusinessFax == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(BusinessFax));
            }
            if ((Email == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(Email));
            }
            if ((Website == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(Website));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[24].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((parentFCardNo == null)) {
                throw new global::System.ArgumentNullException("parentFCardNo");
            }
            else {
                command.Parameters[25].Value = ((string)(parentFCardNo));
            }
            if ((renewalDueFrom == null)) {
                throw new global::System.ArgumentNullException("renewalDueFrom");
            }
            else {
                command.Parameters[26].Value = ((string)(renewalDueFrom));
            }
            command.Parameters[27].Value = ((int)(userID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblNukhTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblNukhTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblNukh";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("NukhName", "NukhName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblNukh";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_tblNukh";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_tblNukh";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_tblNukh";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewNukh", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldNukh", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblNukhDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblNukhDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblNukhDataTable dataTable = new ComDataSet.usp_SEL_tblNukhDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(string NukhName) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((NukhName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NukhName));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(string NewNukh, string OldNukh) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((NewNukh == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NewNukh));
            }
            if ((OldNukh == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(OldNukh));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblOrakhTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblOrakhTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblOrakh";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("OrakhName", "OrakhName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblOrakh";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_tblOrakh";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_tblOrakh";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_tblOrakh";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewOrakh", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldOrakh", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblOrakhDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblOrakhDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblOrakhDataTable dataTable = new ComDataSet.usp_SEL_tblOrakhDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(string OrakhName) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((OrakhName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(OrakhName));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(string NewOrakh, string OldOrakh) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((NewOrakh == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NewOrakh));
            }
            if ((OldOrakh == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(OldOrakh));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblCityTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblCityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblCity";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("City", "City");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblCity";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_tblCity";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_tblCity";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_tblCity";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCity", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldCity", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblCityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblCityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblCityDataTable dataTable = new ComDataSet.usp_SEL_tblCityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(string City) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((City == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(City));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(string NewCity, string OldCity) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((NewCity == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NewCity));
            }
            if ((OldCity == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(OldCity));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblVillageTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblVillageTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblVillage";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Village", "Village");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblVillage";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_tblVillage";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_tblVillage";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Village", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_tblVillage";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewVillage", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldVillage", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblVillageDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblVillageDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblVillageDataTable dataTable = new ComDataSet.usp_SEL_tblVillageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(string Village) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Village == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Village));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(string NewVillage, string OldVillage) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((NewVillage == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NewVillage));
            }
            if ((OldVillage == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(OldVillage));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblFamilyMemberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblFamilyMemberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblFamilyMember";
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            tableMapping.ColumnMappings.Add("LeaderRelation", "LeaderRelation");
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup");
            tableMapping.ColumnMappings.Add("CNIC", "CNIC");
            tableMapping.ColumnMappings.Add("NIC", "NIC");
            tableMapping.ColumnMappings.Add("AcademicEducation", "AcademicEducation");
            tableMapping.ColumnMappings.Add("TechnicalEducation", "TechnicalEducation");
            tableMapping.ColumnMappings.Add("ProfessionalEducation", "ProfessionalEducation");
            tableMapping.ColumnMappings.Add("BusinessName", "BusinessName");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("BusinessAddress", "BusinessAddress");
            tableMapping.ColumnMappings.Add("BusinessPhone", "BusinessPhone");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("BusinessFax", "BusinessFax");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("D_Incident", "D_Incident");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("HusbandName", "HusbandName");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Outof", "Outof");
            tableMapping.ColumnMappings.Add("FamilyMemberID", "FamilyMemberID");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("FromFCard", "FromFCard");
            tableMapping.ColumnMappings.Add("ToFCard", "ToFCard");
            tableMapping.ColumnMappings.Add("IsNicPrinted", "IsNicPrinted");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[11];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_ALL_tblFamilyMember";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_tblFamilyMember";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT FamilyMemberID, FCardNo, MemberName, LeaderRelation, FatherName, HusbandName, DOB, BloodGroup, Mobile, CNIC, NIC, AcademicEducation, TechnicalEducation, ProfessionalEducation, BusinessName, WorkType, Designation, BusinessAddress, BusinessPhone, Email, Website, BusinessFax, Gender, AgeGroup, Active, Reason, D_Incident, MaritalStatus, Outof, EntryDate, FromFCard, ToFCard FROM tblFamilyMember";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_SEL_tblFamilyMember";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.usp_ADULT_Male_tblFamilyMember";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.usp_ADD_tblFamilyMember";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderRelation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FatherName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HusbandName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BloodGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNIC", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcademicEducation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TechnicalEducation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfessionalEducation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessAddress", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessPhone", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessFax", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_Incident", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outof", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromFCard", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToFCard", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TempDOB", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameU", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameU", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HusbandNameU", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "UPDATE    tblFamilyMember\r\nSET              CNIC = @CNIC, NIC = @NIC, WorkType = " +
                "@WorkType, Mobile = @Mobile, BloodGroup = @BloodGroup\r\nWHERE     (FamilyMemberID" +
                " = @ID)";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNIC", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "CNIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BloodGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BloodGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMemberID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "dbo.usp_UPD_AgeGroup";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = @"UPDATE tblFamilyMember Set FCardNo = @FCardNo , MemberName = @MemberName, LeaderRelation = @LeaderRelation, FatherName = @FatherName , DOB=@DOB, Gender = @Gender , AgeGroup = @AgeGroup, Active = @Active , MaritalStatus=@MaritalStatus,EntryDate = @EntryDate WHERE FamilyMemberID=@FamilyMemberID";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderRelation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FatherName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "FatherName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "AgeGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMemberID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "UPDATE tblFamilyMember Set FCardNo = @FCardNo  , Active = @Active  , Reason = @Re" +
                "ason  , D_Incident = @D_Incident WHERE FamilyMemberID= @FamilyMemberID";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_Incident", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "D_Incident", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMemberID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "dbo.usp_UPD_tblFamilyMember";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderRelation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FatherName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HusbandName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BloodGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNIC", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcademicEducation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TechnicalEducation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfessionalEducation", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessAddress", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessPhone", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessFax", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_Incident", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutOf", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromFCard", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToFCard", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TempDOB", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameU", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameU", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HusbandNameU", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable, string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblFamilyMemberDataTable GetData(string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable = new ComDataSet.usp_SEL_tblFamilyMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill_ALL_CHK(ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_tblFamilyMemberDataTable GetDataBy8() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable = new ComDataSet.usp_SEL_tblFamilyMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillActive(ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable, string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_tblFamilyMemberDataTable GetDataBy3(string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable = new ComDataSet.usp_SEL_tblFamilyMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAdult(ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable, string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_tblFamilyMemberDataTable GetDataBy4(string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            ComDataSet.usp_SEL_tblFamilyMemberDataTable dataTable = new ComDataSet.usp_SEL_tblFamilyMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(global::System.Nullable<int> FamilyMemberID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((FamilyMemberID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(FamilyMemberID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(
                    string FCardNo, 
                    string MemberName, 
                    string LeaderRelation, 
                    string FatherName, 
                    string HusbandName, 
                    string DOB, 
                    string BloodGroup, 
                    string Gender, 
                    string AgeGroup, 
                    string Mobile, 
                    string CNIC, 
                    string NIC, 
                    string AcademicEducation, 
                    string TechnicalEducation, 
                    string ProfessionalEducation, 
                    string BusinessName, 
                    string WorkType, 
                    string Designation, 
                    string BusinessAddress, 
                    string BusinessPhone, 
                    string Email, 
                    string Website, 
                    string BusinessFax, 
                    global::System.Nullable<bool> Active, 
                    string Reason, 
                    global::System.Nullable<global::System.DateTime> D_Incident, 
                    string MaritalStatus, 
                    string Outof, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    string FromFCard, 
                    string ToFCard, 
                    global::System.Nullable<global::System.DateTime> TempDOB, 
                    string NameU, 
                    string FNameU, 
                    string HusbandNameU, 
                    int userID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((FCardNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((MemberName == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(MemberName));
            }
            if ((LeaderRelation == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(LeaderRelation));
            }
            if ((FatherName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FatherName));
            }
            if ((HusbandName == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(HusbandName));
            }
            if ((DOB == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(DOB));
            }
            if ((BloodGroup == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(BloodGroup));
            }
            if ((Gender == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Gender));
            }
            if ((AgeGroup == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(AgeGroup));
            }
            if ((Mobile == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Mobile));
            }
            if ((CNIC == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(CNIC));
            }
            if ((NIC == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NIC));
            }
            if ((AcademicEducation == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(AcademicEducation));
            }
            if ((TechnicalEducation == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(TechnicalEducation));
            }
            if ((ProfessionalEducation == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(ProfessionalEducation));
            }
            if ((BusinessName == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(BusinessName));
            }
            if ((WorkType == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(WorkType));
            }
            if ((Designation == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Designation));
            }
            if ((BusinessAddress == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(BusinessAddress));
            }
            if ((BusinessPhone == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(BusinessPhone));
            }
            if ((Email == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(Email));
            }
            if ((Website == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(Website));
            }
            if ((BusinessFax == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(BusinessFax));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[24].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Reason == null)) {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[25].Value = ((string)(Reason));
            }
            if ((D_Incident.HasValue == true)) {
                command.Parameters[26].Value = ((System.DateTime)(D_Incident.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((MaritalStatus == null)) {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[27].Value = ((string)(MaritalStatus));
            }
            if ((Outof == null)) {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(Outof));
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[29].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((FromFCard == null)) {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[30].Value = ((string)(FromFCard));
            }
            if ((ToFCard == null)) {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[31].Value = ((string)(ToFCard));
            }
            if ((TempDOB.HasValue == true)) {
                command.Parameters[32].Value = ((System.DateTime)(TempDOB.Value));
            }
            else {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((NameU == null)) {
                throw new global::System.ArgumentNullException("NameU");
            }
            else {
                command.Parameters[33].Value = ((string)(NameU));
            }
            if ((FNameU == null)) {
                throw new global::System.ArgumentNullException("FNameU");
            }
            else {
                command.Parameters[34].Value = ((string)(FNameU));
            }
            if ((HusbandNameU == null)) {
                throw new global::System.ArgumentNullException("HusbandNameU");
            }
            else {
                command.Parameters[35].Value = ((string)(HusbandNameU));
            }
            command.Parameters[36].Value = ((int)(userID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int Upd_NIC(string CNIC, string NIC, string WorkType, string Mobile, string BloodGroup, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((CNIC == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(CNIC));
            }
            if ((NIC == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NIC));
            }
            if ((WorkType == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(WorkType));
            }
            if ((Mobile == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Mobile));
            }
            if ((BloodGroup == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(BloodGroup));
            }
            command.Parameters[5].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int updAgeGroup(global::System.Nullable<long> FamilyMemberID, string FCardNo, string AgeGroup) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[7];
            if ((FamilyMemberID.HasValue == true)) {
                command.Parameters[1].Value = ((long)(FamilyMemberID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((AgeGroup == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(AgeGroup));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int Update_Birth(string FCardNo, string MemberName, string LeaderRelation, string FatherName, string DOB, string Gender, string AgeGroup, global::System.Nullable<bool> Active, string MaritalStatus, global::System.Nullable<global::System.DateTime> EntryDate, int FamilyMemberID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[8];
            if ((FCardNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((MemberName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(MemberName));
            }
            if ((LeaderRelation == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(LeaderRelation));
            }
            if ((FatherName == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FatherName));
            }
            if ((DOB == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(DOB));
            }
            if ((Gender == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Gender));
            }
            if ((AgeGroup == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(AgeGroup));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[7].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((MaritalStatus == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(MaritalStatus));
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            command.Parameters[10].Value = ((int)(FamilyMemberID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int Update_Death(string FCardNo, global::System.Nullable<bool> Active, string Reason, global::System.Nullable<global::System.DateTime> D_Incident, int FamilyMemberID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[9];
            if ((FCardNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Reason == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Reason));
            }
            if ((D_Incident.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(D_Incident.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            command.Parameters[4].Value = ((int)(FamilyMemberID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(
                    global::System.Nullable<long> FamilyMemberID, 
                    string FCardNo, 
                    string MemberName, 
                    string LeaderRelation, 
                    string FatherName, 
                    string HusbandName, 
                    string DOB, 
                    string BloodGroup, 
                    string Gender, 
                    string AgeGroup, 
                    string Mobile, 
                    string CNIC, 
                    string NIC, 
                    string AcademicEducation, 
                    string TechnicalEducation, 
                    string ProfessionalEducation, 
                    string BusinessName, 
                    string WorkType, 
                    string Designation, 
                    string BusinessAddress, 
                    string BusinessPhone, 
                    string Email, 
                    string Website, 
                    string BusinessFax, 
                    global::System.Nullable<bool> Active, 
                    string Reason, 
                    global::System.Nullable<global::System.DateTime> D_Incident, 
                    string MaritalStatus, 
                    string OutOf, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    string FromFCard, 
                    string ToFCard, 
                    global::System.Nullable<global::System.DateTime> TempDOB, 
                    string NameU, 
                    string FNameU, 
                    string HusbandNameU, 
                    int userID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[10];
            if ((FamilyMemberID.HasValue == true)) {
                command.Parameters[1].Value = ((long)(FamilyMemberID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((MemberName == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(MemberName));
            }
            if ((LeaderRelation == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(LeaderRelation));
            }
            if ((FatherName == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(FatherName));
            }
            if ((HusbandName == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(HusbandName));
            }
            if ((DOB == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(DOB));
            }
            if ((BloodGroup == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(BloodGroup));
            }
            if ((Gender == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Gender));
            }
            if ((AgeGroup == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(AgeGroup));
            }
            if ((Mobile == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Mobile));
            }
            if ((CNIC == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(CNIC));
            }
            if ((NIC == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(NIC));
            }
            if ((AcademicEducation == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(AcademicEducation));
            }
            if ((TechnicalEducation == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(TechnicalEducation));
            }
            if ((ProfessionalEducation == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(ProfessionalEducation));
            }
            if ((BusinessName == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(BusinessName));
            }
            if ((WorkType == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(WorkType));
            }
            if ((Designation == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(Designation));
            }
            if ((BusinessAddress == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(BusinessAddress));
            }
            if ((BusinessPhone == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(BusinessPhone));
            }
            if ((Email == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(Email));
            }
            if ((Website == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(Website));
            }
            if ((BusinessFax == null)) {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[24].Value = ((string)(BusinessFax));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[25].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Reason == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(Reason));
            }
            if ((D_Incident.HasValue == true)) {
                command.Parameters[27].Value = ((System.DateTime)(D_Incident.Value));
            }
            else {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((MaritalStatus == null)) {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(MaritalStatus));
            }
            if ((OutOf == null)) {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[29].Value = ((string)(OutOf));
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[30].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((FromFCard == null)) {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[31].Value = ((string)(FromFCard));
            }
            if ((ToFCard == null)) {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[32].Value = ((string)(ToFCard));
            }
            if ((TempDOB.HasValue == true)) {
                command.Parameters[33].Value = ((System.DateTime)(TempDOB.Value));
            }
            else {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((NameU == null)) {
                throw new global::System.ArgumentNullException("NameU");
            }
            else {
                command.Parameters[34].Value = ((string)(NameU));
            }
            if ((FNameU == null)) {
                throw new global::System.ArgumentNullException("FNameU");
            }
            else {
                command.Parameters[35].Value = ((string)(FNameU));
            }
            if ((HusbandNameU == null)) {
                throw new global::System.ArgumentNullException("HusbandNameU");
            }
            else {
                command.Parameters[36].Value = ((string)(HusbandNameU));
            }
            command.Parameters[37].Value = ((int)(userID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblBloodGroupTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblBloodGroupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblBloodGroup";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblBloodGroup";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblBloodGroupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblBloodGroupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblBloodGroupDataTable dataTable = new ComDataSet.usp_SEL_tblBloodGroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblAreaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblAreaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblArea";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Area", "Area");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblArea";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_tblArea";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_tblArea";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Area", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_tblArea";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewArea", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldArea", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblAreaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblAreaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblAreaDataTable dataTable = new ComDataSet.usp_SEL_tblAreaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(string Area) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Area == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Area));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(string NewArea, string OldArea) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((NewArea == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NewArea));
            }
            if ((OldArea == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(OldArea));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_EngagementTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_EngagementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_Engagement";
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("FCardNoM", "FCardNoM");
            tableMapping.ColumnMappings.Add("NukhM", "NukhM");
            tableMapping.ColumnMappings.Add("OrakhM", "OrakhM");
            tableMapping.ColumnMappings.Add("NameM", "NameM");
            tableMapping.ColumnMappings.Add("FNameM", "FNameM");
            tableMapping.ColumnMappings.Add("FCardNoF", "FCardNoF");
            tableMapping.ColumnMappings.Add("NukhF", "NukhF");
            tableMapping.ColumnMappings.Add("OrakhF", "OrakhF");
            tableMapping.ColumnMappings.Add("NameF", "NameF");
            tableMapping.ColumnMappings.Add("FNameF", "FNameF");
            tableMapping.ColumnMappings.Add("ArrangedBy", "ArrangedBy");
            tableMapping.ColumnMappings.Add("DateofAction", "DateofAction");
            tableMapping.ColumnMappings.Add("AgeM", "AgeM");
            tableMapping.ColumnMappings.Add("AgeF", "AgeF");
            tableMapping.ColumnMappings.Add("GFNameM", "GFNameM");
            tableMapping.ColumnMappings.Add("GFNameF", "GFNameF");
            tableMapping.ColumnMappings.Add("Marriage", "Marriage");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("ReasonCancel", "ReasonCancel");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[9];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_Engagement";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_Cancel_Engagement";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReasonCancel", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_SEL_Canceled";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_DEL_Engagement";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.usp_SEL_Only_Engagement";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.usp_SEL_Only_MARRIED";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarriageDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "dbo.usp_ADD_Engagement";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrangedBy", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateofAction", global::System.Data.SqlDbType.DateTime, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marriage", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "Select * ,tblMarriage.MarriageDate from tblEngagement INNER JOIN tblMarriage ON t" +
                "blEngagement.SerialNo = tblMarriage.SerialNo WHERE tblEngagement.Marriage = 1 an" +
                "d tblMarriage.MarriageDate <=  @MarriageDate AND tblEngagement.Active = 1";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarriageDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "MarriageDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "dbo.usp_UPD_Engagement";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrangedBy", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateofAction", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marriage", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oldSerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_EngagementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_EngagementDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_EngagementDataTable dataTable = new ComDataSet.usp_SEL_EngagementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Cancelled(ComDataSet.usp_SEL_EngagementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_EngagementDataTable GetDataBy6() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            ComDataSet.usp_SEL_EngagementDataTable dataTable = new ComDataSet.usp_SEL_EngagementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillOnlyEngagement(ComDataSet.usp_SEL_EngagementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_EngagementDataTable GetDataBy3() {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            ComDataSet.usp_SEL_EngagementDataTable dataTable = new ComDataSet.usp_SEL_EngagementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillOnlyMarried(ComDataSet.usp_SEL_EngagementDataTable dataTable, global::System.Nullable<global::System.DateTime> MarriageDate) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((MarriageDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(MarriageDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_EngagementDataTable GetDataBy4(global::System.Nullable<global::System.DateTime> MarriageDate) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((MarriageDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(MarriageDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_SEL_EngagementDataTable dataTable = new ComDataSet.usp_SEL_EngagementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Marriage(ComDataSet.usp_SEL_EngagementDataTable dataTable, global::System.Nullable<global::System.DateTime> MarriageDate) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((MarriageDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(MarriageDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_EngagementDataTable GetDataBy7(global::System.Nullable<global::System.DateTime> MarriageDate) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((MarriageDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(MarriageDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_SEL_EngagementDataTable dataTable = new ComDataSet.usp_SEL_EngagementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Cancel(string SerialNo, global::System.Nullable<bool> Active, string ReasonCancel) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[2].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ReasonCancel == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(ReasonCancel));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(string SerialNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(
                    string SerialNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string FCardNoM, 
                    string NukhM, 
                    string OrakhM, 
                    string NameM, 
                    string FNameM, 
                    string GFNameM, 
                    string AgeM, 
                    string FCardNoF, 
                    string NukhF, 
                    string OrakhF, 
                    string NameF, 
                    string FNameF, 
                    string GFNameF, 
                    string AgeF, 
                    string ArrangedBy, 
                    global::System.Nullable<global::System.DateTime> DateofAction, 
                    global::System.Nullable<bool> Marriage, 
                    global::System.Nullable<bool> Active) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FCardNoM == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FCardNoM));
            }
            if ((NukhM == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(NukhM));
            }
            if ((OrakhM == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(OrakhM));
            }
            if ((NameM == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(NameM));
            }
            if ((FNameM == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(FNameM));
            }
            if ((GFNameM == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(GFNameM));
            }
            if ((AgeM == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(AgeM));
            }
            if ((FCardNoF == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(FCardNoF));
            }
            if ((NukhF == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(NukhF));
            }
            if ((OrakhF == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(OrakhF));
            }
            if ((NameF == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(NameF));
            }
            if ((FNameF == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(FNameF));
            }
            if ((GFNameF == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(GFNameF));
            }
            if ((AgeF == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(AgeF));
            }
            if ((ArrangedBy == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(ArrangedBy));
            }
            if ((DateofAction.HasValue == true)) {
                command.Parameters[18].Value = ((System.DateTime)(DateofAction.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Marriage.HasValue == true)) {
                command.Parameters[19].Value = ((bool)(Marriage.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Active.HasValue == true)) {
                command.Parameters[20].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update1(
                    string SerialNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string FCardNoM, 
                    string NukhM, 
                    string OrakhM, 
                    string NameM, 
                    string FNameM, 
                    string GFNameM, 
                    string AgeM, 
                    string FCardNoF, 
                    string NukhF, 
                    string OrakhF, 
                    string NameF, 
                    string FNameF, 
                    string GFNameF, 
                    string AgeF, 
                    string ArrangedBy, 
                    global::System.Nullable<global::System.DateTime> DateofAction, 
                    global::System.Nullable<bool> Marriage, 
                    global::System.Nullable<bool> Active, 
                    string oldSerialNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[8];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FCardNoM == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FCardNoM));
            }
            if ((NukhM == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(NukhM));
            }
            if ((OrakhM == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(OrakhM));
            }
            if ((NameM == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(NameM));
            }
            if ((FNameM == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(FNameM));
            }
            if ((GFNameM == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(GFNameM));
            }
            if ((AgeM == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(AgeM));
            }
            if ((FCardNoF == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(FCardNoF));
            }
            if ((NukhF == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(NukhF));
            }
            if ((OrakhF == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(OrakhF));
            }
            if ((NameF == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(NameF));
            }
            if ((FNameF == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(FNameF));
            }
            if ((GFNameF == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(GFNameF));
            }
            if ((AgeF == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(AgeF));
            }
            if ((ArrangedBy == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(ArrangedBy));
            }
            if ((DateofAction.HasValue == true)) {
                command.Parameters[18].Value = ((System.DateTime)(DateofAction.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Marriage.HasValue == true)) {
                command.Parameters[19].Value = ((bool)(Marriage.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Active.HasValue == true)) {
                command.Parameters[20].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((oldSerialNo == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(oldSerialNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_Male_tblFamilyMemberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_Male_tblFamilyMemberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_Male_tblFamilyMember";
            tableMapping.ColumnMappings.Add("FamilyMemberID", "FamilyMemberID");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            tableMapping.ColumnMappings.Add("LeaderRelation", "LeaderRelation");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("HusbandName", "HusbandName");
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("CNIC", "CNIC");
            tableMapping.ColumnMappings.Add("NIC", "NIC");
            tableMapping.ColumnMappings.Add("AcademicEducation", "AcademicEducation");
            tableMapping.ColumnMappings.Add("TechnicalEducation", "TechnicalEducation");
            tableMapping.ColumnMappings.Add("ProfessionalEducation", "ProfessionalEducation");
            tableMapping.ColumnMappings.Add("BusinessName", "BusinessName");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("BusinessAddress", "BusinessAddress");
            tableMapping.ColumnMappings.Add("BusinessPhone", "BusinessPhone");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("BusinessFax", "BusinessFax");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Outof", "Outof");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_Male_tblFamilyMember";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_Male_tblFamilyMemberDataTable dataTable, string FCardNo, string Gender) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((Gender == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Gender));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_Male_tblFamilyMemberDataTable GetData(string FCardNo, string Gender) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((Gender == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Gender));
            }
            ComDataSet.usp_Male_tblFamilyMemberDataTable dataTable = new ComDataSet.usp_Male_tblFamilyMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_Female_tblFamilyMemberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_Female_tblFamilyMemberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_Female_tblFamilyMember";
            tableMapping.ColumnMappings.Add("FamilyMemberID", "FamilyMemberID");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            tableMapping.ColumnMappings.Add("LeaderRelation", "LeaderRelation");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("HusbandName", "HusbandName");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("CNIC", "CNIC");
            tableMapping.ColumnMappings.Add("NIC", "NIC");
            tableMapping.ColumnMappings.Add("AcademicEducation", "AcademicEducation");
            tableMapping.ColumnMappings.Add("TechnicalEducation", "TechnicalEducation");
            tableMapping.ColumnMappings.Add("ProfessionalEducation", "ProfessionalEducation");
            tableMapping.ColumnMappings.Add("BusinessName", "BusinessName");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("BusinessAddress", "BusinessAddress");
            tableMapping.ColumnMappings.Add("BusinessPhone", "BusinessPhone");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("BusinessFax", "BusinessFax");
            tableMapping.ColumnMappings.Add("Gender1", "Gender1");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Outof", "Outof");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_Female_tblFamilyMember";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_Female_tblFamilyMemberDataTable dataTable, string FCardNo, string Gender) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((Gender == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Gender));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_Female_tblFamilyMemberDataTable GetData(string FCardNo, string Gender) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((Gender == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Gender));
            }
            ComDataSet.usp_Female_tblFamilyMemberDataTable dataTable = new ComDataSet.usp_Female_tblFamilyMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_MarriageTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_MarriageTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_Marriage";
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("MarriageDate", "MarriageDate");
            tableMapping.ColumnMappings.Add("FCardNoM", "FCardNoM");
            tableMapping.ColumnMappings.Add("NukhM", "NukhM");
            tableMapping.ColumnMappings.Add("OrakhM", "OrakhM");
            tableMapping.ColumnMappings.Add("NameM", "NameM");
            tableMapping.ColumnMappings.Add("FNameM", "FNameM");
            tableMapping.ColumnMappings.Add("AgeM", "AgeM");
            tableMapping.ColumnMappings.Add("FCardNoF", "FCardNoF");
            tableMapping.ColumnMappings.Add("NukhF", "NukhF");
            tableMapping.ColumnMappings.Add("OrakhF", "OrakhF");
            tableMapping.ColumnMappings.Add("NameF", "NameF");
            tableMapping.ColumnMappings.Add("FNameF", "FNameF");
            tableMapping.ColumnMappings.Add("AgeF", "AgeF");
            tableMapping.ColumnMappings.Add("DateofEngagement", "DateofEngagement");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("GFNameM", "GFNameM");
            tableMapping.ColumnMappings.Add("GFNameF", "GFNameF");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("atTime", "atTime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_Marriage";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_Cancel_Marriage";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReasonCancel", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_DEL_tblMarriage";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_ADD_Marriage";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarriageDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateofEngagement", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@atTime", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.usp_UPD_Marriage";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarriageDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeM", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNoF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NukhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrakhF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFNameF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeF", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateofEngagement", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@atTime", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_MarriageDataTable dataTable, string SerialNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SerialNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SerialNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_MarriageDataTable GetData(string SerialNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SerialNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SerialNo));
            }
            ComDataSet.usp_SEL_MarriageDataTable dataTable = new ComDataSet.usp_SEL_MarriageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Cancel(string SerialNo, global::System.Nullable<bool> Active, string ReasonCancel) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[2].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ReasonCancel == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(ReasonCancel));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(string SerialNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(
                    string SerialNo, 
                    global::System.Nullable<global::System.DateTime> MarriageDate, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    string FCardNoM, 
                    string NukhM, 
                    string OrakhM, 
                    string NameM, 
                    string FNameM, 
                    string GFNameM, 
                    string AgeM, 
                    string FCardNoF, 
                    string NukhF, 
                    string OrakhF, 
                    string NameF, 
                    string FNameF, 
                    string GFNameF, 
                    string AgeF, 
                    global::System.Nullable<global::System.DateTime> DateofEngagement, 
                    global::System.Nullable<bool> Active, 
                    string atTime) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            if ((MarriageDate.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(MarriageDate.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FCardNoM == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FCardNoM));
            }
            if ((NukhM == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(NukhM));
            }
            if ((OrakhM == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(OrakhM));
            }
            if ((NameM == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(NameM));
            }
            if ((FNameM == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(FNameM));
            }
            if ((GFNameM == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(GFNameM));
            }
            if ((AgeM == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(AgeM));
            }
            if ((FCardNoF == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(FCardNoF));
            }
            if ((NukhF == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NukhF));
            }
            if ((OrakhF == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(OrakhF));
            }
            if ((NameF == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(NameF));
            }
            if ((FNameF == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(FNameF));
            }
            if ((GFNameF == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(GFNameF));
            }
            if ((AgeF == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(AgeF));
            }
            if ((DateofEngagement.HasValue == true)) {
                command.Parameters[18].Value = ((System.DateTime)(DateofEngagement.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Active.HasValue == true)) {
                command.Parameters[19].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((atTime == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(atTime));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(
                    string SerialNo, 
                    global::System.Nullable<global::System.DateTime> MarriageDate, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    string FCardNoM, 
                    string NukhM, 
                    string OrakhM, 
                    string NameM, 
                    string FNameM, 
                    string GFNameM, 
                    string AgeM, 
                    string FCardNoF, 
                    string NukhF, 
                    string OrakhF, 
                    string NameF, 
                    string FNameF, 
                    string GFNameF, 
                    string AgeF, 
                    global::System.Nullable<global::System.DateTime> DateofEngagement, 
                    global::System.Nullable<bool> Active, 
                    string atTime) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((SerialNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(SerialNo));
            }
            if ((MarriageDate.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(MarriageDate.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FCardNoM == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FCardNoM));
            }
            if ((NukhM == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(NukhM));
            }
            if ((OrakhM == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(OrakhM));
            }
            if ((NameM == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(NameM));
            }
            if ((FNameM == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(FNameM));
            }
            if ((GFNameM == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(GFNameM));
            }
            if ((AgeM == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(AgeM));
            }
            if ((FCardNoF == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(FCardNoF));
            }
            if ((NukhF == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NukhF));
            }
            if ((OrakhF == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(OrakhF));
            }
            if ((NameF == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(NameF));
            }
            if ((FNameF == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(FNameF));
            }
            if ((GFNameF == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(GFNameF));
            }
            if ((AgeF == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(AgeF));
            }
            if ((DateofEngagement.HasValue == true)) {
                command.Parameters[18].Value = ((System.DateTime)(DateofEngagement.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Active.HasValue == true)) {
                command.Parameters[19].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((atTime == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(atTime));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_tblWorkTypeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_tblWorkTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_tblWorkType";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_tblWorkType";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_tblWorkType";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_Type";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_WorkType";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewType", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldType", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_tblWorkTypeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_tblWorkTypeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_tblWorkTypeDataTable dataTable = new ComDataSet.usp_SEL_tblWorkTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Delete1(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Insert1(string WorkType) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((WorkType == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(WorkType));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object Update1(string NewType, string OldType) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((NewType == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NewType));
            }
            if ((OldType == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(OldType));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_rpt_MembersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_rpt_MembersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_rpt_Members";
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("FamilyLeader", "FamilyLeader");
            tableMapping.ColumnMappings.Add("Nukh", "Nukh");
            tableMapping.ColumnMappings.Add("Sign", "Sign");
            tableMapping.ColumnMappings.Add("Village", "Village");
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            tableMapping.ColumnMappings.Add("LeaderRelation", "LeaderRelation");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("HusbandName", "HusbandName");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Outof", "Outof");
            tableMapping.ColumnMappings.Add("AcademicEducation", "AcademicEducation");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_rpt_Members";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_rpt_MembersDataTable dataTable, string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_rpt_MembersDataTable GetData(string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            ComDataSet.usp_rpt_MembersDataTable dataTable = new ComDataSet.usp_rpt_MembersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblTransactionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblTransactionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblTransactions";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Voucher", "Voucher");
            tableMapping.ColumnMappings.Add("DocumentNo", "DocumentNo");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("Narration", "Narration");
            tableMapping.ColumnMappings.Add("ChequeNo", "ChequeNo");
            tableMapping.ColumnMappings.Add("ReferenceNo", "ReferenceNo");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT tblTransactions.ID, tblAccounts.AccountName, Voucher, DocumentNo, Dated, N" +
                "arration, ChequeNo, ReferenceNo FROM tblTransactions INNER JOIN tblAccounts ON t" +
                "blTransactions.AccountCode = tblAccounts.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM tblTransactions WHERE ID = @ID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM tblTransactions WHERE Voucher =  @Voucher AND DocumentNo = @DocumentN" +
                "o";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voucher", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocumentNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT tblTransactions.ID, tblAccounts.AccountName, Voucher, DocumentNo, Dated, Narration, ChequeNo, ReferenceNo FROM tblTransactions INNER JOIN tblAccounts ON tblTransactions.AccountCode = tblAccounts.ID WHERE Voucher != 'HBK' AND Voucher != 'DON' AND Voucher != 'RWL'";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"Declare @id int
Select @id=ISNULL(max(ID),0)+1 from tblTransactions
INSERT INTO tblTransactions (AccountCode, Voucher, DocumentNo, Dated, Debit, Credit, Narration, ChequeNo, ReferenceNo,ID) VALUES (@AccountCode, @Voucher, @DocumentNo, @Dated, @Debit, @Credit,@Narration, @ChequeNo, @ReferenceNo,@id)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountCode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voucher", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocumentNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dated", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Dated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Debit", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Debit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Credit", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Credit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Narration", global::System.Data.SqlDbType.VarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Narration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChequeNo", global::System.Data.SqlDbType.VarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceNo", global::System.Data.SqlDbType.VarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE tblTransactions SET AccountCode = @AccountCode, Voucher = @Voucher, Docume" +
                "ntNo = @DocumentNo, Dated = @Dated, Debit = @Debit, Credit = @Credit, Narration " +
                "= @Narration, ChequeNo = @ChequeNo, ReferenceNo =  @ReferenceNo WHERE ID = @ID";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountCode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voucher", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DocumentNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DocumentNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dated", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Dated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Debit", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Debit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Credit", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Credit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Narration", global::System.Data.SqlDbType.VarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Narration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChequeNo", global::System.Data.SqlDbType.VarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenceNo", global::System.Data.SqlDbType.VarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblTransactionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblTransactionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblTransactionsDataTable dataTable = new ComDataSet.tblTransactionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill_Trans(ComDataSet.tblTransactionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblTransactionsDataTable GetDataBy4() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            ComDataSet.tblTransactionsDataTable dataTable = new ComDataSet.tblTransactionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteTransaction(int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteTransactions(string Voucher, global::System.Nullable<int> DocumentNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Voucher == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Voucher));
            }
            if ((DocumentNo.HasValue == true)) {
                command.Parameters[1].Value = ((int)(DocumentNo.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertTransaction(global::System.Nullable<int> AccountCode, string Voucher, global::System.Nullable<int> DocumentNo, global::System.Nullable<global::System.DateTime> Dated, global::System.Nullable<decimal> Debit, global::System.Nullable<decimal> Credit, string Narration, string ChequeNo, string ReferenceNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((AccountCode.HasValue == true)) {
                command.Parameters[0].Value = ((int)(AccountCode.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Voucher == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Voucher));
            }
            if ((DocumentNo.HasValue == true)) {
                command.Parameters[2].Value = ((int)(DocumentNo.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Dated.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Debit.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(Debit.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Credit.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(Credit.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Narration == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Narration));
            }
            if ((ChequeNo == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(ChequeNo));
            }
            if ((ReferenceNo == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(ReferenceNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateTransaction(global::System.Nullable<int> AccountCode, string Voucher, global::System.Nullable<int> DocumentNo, global::System.Nullable<global::System.DateTime> Dated, global::System.Nullable<decimal> Debit, global::System.Nullable<decimal> Credit, string Narration, string ChequeNo, string ReferenceNo, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((AccountCode.HasValue == true)) {
                command.Parameters[0].Value = ((int)(AccountCode.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Voucher == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Voucher));
            }
            if ((DocumentNo.HasValue == true)) {
                command.Parameters[2].Value = ((int)(DocumentNo.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Dated.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Debit.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(Debit.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Credit.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(Credit.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Narration == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Narration));
            }
            if ((ChequeNo == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(ChequeNo));
            }
            if ((ReferenceNo == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(ReferenceNo));
            }
            command.Parameters[9].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblVouchersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblVouchersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblVouchers";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Voucher", "Voucher");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblVouchers] WHERE (([ID] = @Original_ID) AND ((@IsNull_Voucher = 1 AND [Voucher] IS NULL) OR ([Voucher] = @Original_Voucher)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNull_DateCreated = 1 AND [DateCreated] IS NULL) OR ([DateCreated] = @Original_DateCreated)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Voucher", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Voucher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateCreated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblVouchers] ([Voucher], [Description], [DateCreated]) VALUES (@Vouc" +
                "her, @Description, @DateCreated)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voucher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblVouchers] SET [Voucher] = @Voucher, [Description] = @Description, [DateCreated] = @DateCreated WHERE (([ID] = @Original_ID) AND ((@IsNull_Voucher = 1 AND [Voucher] IS NULL) OR ([Voucher] = @Original_Voucher)) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)) AND ((@IsNull_DateCreated = 1 AND [DateCreated] IS NULL) OR ([DateCreated] = @Original_DateCreated)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voucher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Voucher", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Voucher", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateCreated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateCreated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Voucher, Description, DateCreated FROM tblVouchers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM tblVouchers WHERE ID = @ID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "INSERT INTO tblVouchers (Voucher, Description, DateCreated) VALUES (@Voucher,@Des" +
                "cription,@DateCreated)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voucher", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreated", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "UPDATE tblVouchers SET Voucher = @Voucher, Description = @Description, DateCreate" +
                "d = @DateCreated WHERE ID = @ID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voucher", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Voucher", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreated", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblVouchersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblVouchersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblVouchersDataTable dataTable = new ComDataSet.tblVouchersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.tblVouchersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblVouchers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Voucher, string Original_Description, global::System.Nullable<global::System.DateTime> Original_DateCreated) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Voucher == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Voucher));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Voucher, string Description, global::System.Nullable<global::System.DateTime> DateCreated) {
            if ((Voucher == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Voucher));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Description));
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Voucher, string Description, global::System.Nullable<global::System.DateTime> DateCreated, int Original_ID, string Original_Voucher, string Original_Description, global::System.Nullable<global::System.DateTime> Original_DateCreated) {
            if ((Voucher == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Voucher));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Description));
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID));
            if ((Original_Voucher == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Voucher));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Description));
            }
            if ((Original_DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteVoucher(int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertVoucher(string Voucher, string Description, global::System.Nullable<global::System.DateTime> DateCreated) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Voucher == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Voucher));
            }
            if ((Description == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Description));
            }
            if ((DateCreated.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateVoucher(string Voucher, string Description, global::System.Nullable<global::System.DateTime> DateCreated, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((Voucher == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Voucher));
            }
            if ((Description == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Description));
            }
            if ((DateCreated.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            command.Parameters[3].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblLedgerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblLedgerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblLedger";
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Voucher", "Voucher");
            tableMapping.ColumnMappings.Add("DocumentNo", "DocumentNo");
            tableMapping.ColumnMappings.Add("Debit", "Debit");
            tableMapping.ColumnMappings.Add("Credit", "Credit");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("Balance", "Balance");
            tableMapping.ColumnMappings.Add("Narration", "Narration");
            tableMapping.ColumnMappings.Add("ChequeNo", "ChequeNo");
            tableMapping.ColumnMappings.Add("ReferenceNo", "ReferenceNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     
	tblTransactions.AccountCode, 
	tblAccounts.AccountName,
	tblTransactions.Voucher, 
	tblTransactions.DocumentNo, 
	tblTransactions.Dated, 
	tblTransactions.Debit, 
    tblTransactions.Credit,	
	(tblTransactions.Debit - tblTransactions.Credit) As Balance, 
	tblTransactions.Narration, 
	tblTransactions.ChequeNo, 
	tblTransactions.ReferenceNo
FROM         
	tblTransactions 	
INNER JOIN
	tblAccounts 
		ON tblTransactions.AccountCode = tblAccounts.AccountCode
WHERE
	tblTransactions.Dated >= ?
	AND
	tblTransactions.Dated <= ?
	AND
	tblTransactions.AccountCode = ?";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("Dated", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("Dated1", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("AccountCode", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "AccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblLedgerDataTable dataTable, global::System.Nullable<global::System.DateTime> Dated, global::System.Nullable<global::System.DateTime> Dated1, string AccountCode) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Dated.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Dated1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Dated1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountCode == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(AccountCode));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblLedgerDataTable GetData(global::System.Nullable<global::System.DateTime> Dated, global::System.Nullable<global::System.DateTime> Dated1, string AccountCode) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Dated.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Dated1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Dated1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((AccountCode == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(AccountCode));
            }
            ComDataSet.tblLedgerDataTable dataTable = new ComDataSet.tblLedgerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_HallBooking_Search_TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_HallBooking_Search_TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_HallBooking_Search_";
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Mr", "Mr");
            tableMapping.ColumnMappings.Add("Event", "Event");
            tableMapping.ColumnMappings.Add("Hall1", "Hall1");
            tableMapping.ColumnMappings.Add("Hall2", "Hall2");
            tableMapping.ColumnMappings.Add("Hall3", "Hall3");
            tableMapping.ColumnMappings.Add("Hall4", "Hall4");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("Day", "Day");
            tableMapping.ColumnMappings.Add("FromTime", "FromTime");
            tableMapping.ColumnMappings.Add("ToTime", "ToTime");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_HallBooking_Search";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dated", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ID, SerialNo, Date, Mr, Event, Hall1, Hall2, Hall3, Hall4, Dated, Day, Fro" +
                "mTime, ToTime, Remarks, FName, Orakh, ReasonCancel, Amount FROM tblHallBooking W" +
                "HERE (SerialNo = @SerialNo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SerialNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_HallBooking_Search_DataTable dataTable, global::System.Nullable<global::System.DateTime> Dated) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Dated.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_HallBooking_Search_DataTable GetData(global::System.Nullable<global::System.DateTime> Dated) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Dated.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Dated.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_HallBooking_Search_DataTable dataTable = new ComDataSet.usp_HallBooking_Search_DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill_SerialNo(ComDataSet.usp_HallBooking_Search_DataTable dataTable, global::System.Nullable<int> SerialNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((SerialNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(SerialNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_HallBooking_Search_DataTable GetDataBy(global::System.Nullable<int> SerialNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((SerialNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(SerialNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_HallBooking_Search_DataTable dataTable = new ComDataSet.usp_HallBooking_Search_DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_BirthTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_BirthTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_Birth";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("RegNo", "RegNo");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("MName", "MName");
            tableMapping.ColumnMappings.Add("GFName", "GFName");
            tableMapping.ColumnMappings.Add("Nukh", "Nukh");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Relation", "Relation");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("BirthPlace", "BirthPlace");
            tableMapping.ColumnMappings.Add("RAddress", "RAddress");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("BirthTime", "BirthTime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_Birth";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_Birth";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_Birth";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthPlace", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAddress", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NadraRegNo", global::System.Data.SqlDbType.VarChar, 24, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnteredBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_Birth";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthPlace", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAddress", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NadraRegNo", global::System.Data.SqlDbType.VarChar, 24, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_BirthDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_BirthDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_BirthDataTable dataTable = new ComDataSet.usp_SEL_BirthDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DeleteBirth(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int InsertBirth(
                    string RegNo, 
                    string FCardNo, 
                    string Name, 
                    string FName, 
                    string MName, 
                    string GFName, 
                    string Nukh, 
                    string Orakh, 
                    string Gender, 
                    global::System.Nullable<global::System.DateTime> DOB, 
                    string Relation, 
                    string AgeGroup, 
                    string BirthPlace, 
                    string RAddress, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    global::System.Nullable<global::System.DateTime> BirthTime, 
                    string NadraRegNo, 
                    int EnteredBy) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((RegNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(RegNo));
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((Name == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Name));
            }
            if ((FName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FName));
            }
            if ((MName == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(MName));
            }
            if ((GFName == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(GFName));
            }
            if ((Nukh == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Nukh));
            }
            if ((Orakh == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Orakh));
            }
            if ((Gender == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Gender));
            }
            if ((DOB.HasValue == true)) {
                command.Parameters[10].Value = ((System.DateTime)(DOB.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Relation == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Relation));
            }
            if ((AgeGroup == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(AgeGroup));
            }
            if ((BirthPlace == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(BirthPlace));
            }
            if ((RAddress == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(RAddress));
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[15].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((BirthTime.HasValue == true)) {
                command.Parameters[16].Value = ((System.DateTime)(BirthTime.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NadraRegNo == null)) {
                throw new global::System.ArgumentNullException("NadraRegNo");
            }
            else {
                command.Parameters[17].Value = ((string)(NadraRegNo));
            }
            command.Parameters[18].Value = ((int)(EnteredBy));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateBirth(
                    global::System.Nullable<int> ID, 
                    string RegNo, 
                    string FCardNo, 
                    string Name, 
                    string FName, 
                    string MName, 
                    string GFName, 
                    string Nukh, 
                    string Orakh, 
                    string Gender, 
                    global::System.Nullable<global::System.DateTime> DOB, 
                    string Relation, 
                    string AgeGroup, 
                    string BirthPlace, 
                    string RAddress, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    global::System.Nullable<global::System.DateTime> BirthTime, 
                    string NadraRegNo, 
                    int ChangedBy) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((RegNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(RegNo));
            }
            if ((FCardNo == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FCardNo));
            }
            if ((Name == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Name));
            }
            if ((FName == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(FName));
            }
            if ((MName == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(MName));
            }
            if ((GFName == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(GFName));
            }
            if ((Nukh == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Nukh));
            }
            if ((Orakh == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Orakh));
            }
            if ((Gender == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Gender));
            }
            if ((DOB.HasValue == true)) {
                command.Parameters[11].Value = ((System.DateTime)(DOB.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Relation == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Relation));
            }
            if ((AgeGroup == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(AgeGroup));
            }
            if ((BirthPlace == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(BirthPlace));
            }
            if ((RAddress == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(RAddress));
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[16].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BirthTime.HasValue == true)) {
                command.Parameters[17].Value = ((System.DateTime)(BirthTime.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((NadraRegNo == null)) {
                throw new global::System.ArgumentNullException("NadraRegNo");
            }
            else {
                command.Parameters[18].Value = ((string)(NadraRegNo));
            }
            command.Parameters[19].Value = ((int)(ChangedBy));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_DeathTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_DeathTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_Death";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("RegNo", "RegNo");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("GFName", "GFName");
            tableMapping.ColumnMappings.Add("Nukh", "Nukh");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DeathDate", "DeathDate");
            tableMapping.ColumnMappings.Add("Relation", "Relation");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("RAddress", "RAddress");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("Place", "Place");
            tableMapping.ColumnMappings.Add("DeathTime", "DeathTime");
            tableMapping.ColumnMappings.Add("IsPrinted", "IsPrinted");
            tableMapping.ColumnMappings.Add("AppName", "AppName");
            tableMapping.ColumnMappings.Add("AppCNIC", "AppCNIC");
            tableMapping.ColumnMappings.Add("AppRelation", "AppRelation");
            tableMapping.ColumnMappings.Add("DRCNumber", "DRCNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_Death";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_Death";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_SEL_Death_ByFamilyCardNo";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_ADD_Death";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeathDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAddress", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.VarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Place", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeathTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppCNIC", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppRelation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRCNumber", global::System.Data.SqlDbType.VarChar, 16, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPrinted", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.usp_UPD_Death";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GFName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeathDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Relation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RAddress", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.VarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Place", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeathTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppCNIC", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppRelation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DRCNumber", global::System.Data.SqlDbType.VarChar, 16, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPrinted", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_DeathDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_DeathDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_DeathDataTable dataTable = new ComDataSet.usp_SEL_DeathDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(ComDataSet.usp_SEL_DeathDataTable dataTable, string fCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((fCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(fCardNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_DeathDataTable GetDataByFCardNo(string fCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((fCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(fCardNo));
            }
            ComDataSet.usp_SEL_DeathDataTable dataTable = new ComDataSet.usp_SEL_DeathDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DeleteDeath(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int InsertDeath(
                    string RegNo, 
                    string FCardNo, 
                    string Name, 
                    string FName, 
                    string GFName, 
                    string Nukh, 
                    string Orakh, 
                    string Gender, 
                    global::System.Nullable<global::System.DateTime> DeathDate, 
                    string Relation, 
                    string AgeGroup, 
                    string Reason, 
                    string RAddress, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    string Age, 
                    string Place, 
                    global::System.Nullable<global::System.DateTime> DeathTime, 
                    global::System.Nullable<int> FamilyMemberId, 
                    string AppName, 
                    string AppCNIC, 
                    string AppRelation, 
                    string DRCNumber, 
                    global::System.Nullable<bool> IsPrinted) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((RegNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(RegNo));
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((Name == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Name));
            }
            if ((FName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FName));
            }
            if ((GFName == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(GFName));
            }
            if ((Nukh == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Nukh));
            }
            if ((Orakh == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Orakh));
            }
            if ((Gender == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Gender));
            }
            if ((DeathDate.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(DeathDate.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Relation == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Relation));
            }
            if ((AgeGroup == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(AgeGroup));
            }
            if ((Reason == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Reason));
            }
            if ((RAddress == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(RAddress));
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[14].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Age == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Age));
            }
            if ((Place == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Place));
            }
            if ((DeathTime.HasValue == true)) {
                command.Parameters[17].Value = ((System.DateTime)(DeathTime.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((FamilyMemberId.HasValue == true)) {
                command.Parameters[18].Value = ((int)(FamilyMemberId.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((AppName == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(AppName));
            }
            if ((AppCNIC == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(AppCNIC));
            }
            if ((AppRelation == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(AppRelation));
            }
            if ((DRCNumber == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(DRCNumber));
            }
            if ((IsPrinted.HasValue == true)) {
                command.Parameters[23].Value = ((bool)(IsPrinted.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateDeath(
                    global::System.Nullable<int> ID, 
                    string RegNo, 
                    string FCardNo, 
                    string Name, 
                    string FName, 
                    string GFName, 
                    string Nukh, 
                    string Orakh, 
                    string Gender, 
                    global::System.Nullable<global::System.DateTime> DeathDate, 
                    string Relation, 
                    string AgeGroup, 
                    string Reason, 
                    string RAddress, 
                    global::System.Nullable<global::System.DateTime> EntryDate, 
                    string Age, 
                    string Place, 
                    global::System.Nullable<global::System.DateTime> DeathTime, 
                    global::System.Nullable<int> FamilyMemberId, 
                    string AppName, 
                    string AppCNIC, 
                    string AppRelation, 
                    string DRCNumber, 
                    global::System.Nullable<bool> IsPrinted) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((RegNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(RegNo));
            }
            if ((FCardNo == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(FCardNo));
            }
            if ((Name == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Name));
            }
            if ((FName == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(FName));
            }
            if ((GFName == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(GFName));
            }
            if ((Nukh == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Nukh));
            }
            if ((Orakh == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Orakh));
            }
            if ((Gender == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Gender));
            }
            if ((DeathDate.HasValue == true)) {
                command.Parameters[10].Value = ((System.DateTime)(DeathDate.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Relation == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Relation));
            }
            if ((AgeGroup == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(AgeGroup));
            }
            if ((Reason == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(Reason));
            }
            if ((RAddress == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(RAddress));
            }
            if ((EntryDate.HasValue == true)) {
                command.Parameters[15].Value = ((System.DateTime)(EntryDate.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Age == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Age));
            }
            if ((Place == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Place));
            }
            if ((DeathTime.HasValue == true)) {
                command.Parameters[18].Value = ((System.DateTime)(DeathTime.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((FamilyMemberId.HasValue == true)) {
                command.Parameters[19].Value = ((int)(FamilyMemberId.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((AppName == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(AppName));
            }
            if ((AppCNIC == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(AppCNIC));
            }
            if ((AppRelation == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(AppRelation));
            }
            if ((DRCNumber == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(DRCNumber));
            }
            if ((IsPrinted.HasValue == true)) {
                command.Parameters[24].Value = ((bool)(IsPrinted.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_RenewalTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_RenewalTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_Renewal";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("RenewalYear", "RenewalYear");
            tableMapping.ColumnMappings.Add("Fee", "Fee");
            tableMapping.ColumnMappings.Add("PoorFund", "PoorFund");
            tableMapping.ColumnMappings.Add("LateFee", "LateFee");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("Link_Account", "Link_Account");
            tableMapping.ColumnMappings.Add("CardFee", "CardFee");
            tableMapping.ColumnMappings.Add("AdultMembers", "AdultMembers");
            tableMapping.ColumnMappings.Add("TotalMembers", "TotalMembers");
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("PoorAcc", "PoorAcc");
            tableMapping.ColumnMappings.Add("RenewalTo", "RenewalTo");
            tableMapping.ColumnMappings.Add("EducationFund", "EducationFund");
            tableMapping.ColumnMappings.Add("KabristanFund", "KabristanFund");
            tableMapping.ColumnMappings.Add("ZakatFund", "ZakatFund");
            tableMapping.ColumnMappings.Add("DonationFund", "DonationFund");
            tableMapping.ColumnMappings.Add("TamiratiFund", "TamiratiFund");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_Renewal";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_DEL_Renewal";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_ADD_Renewal";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenewalYear", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateFee", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Link_Account", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardFee", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdultMembers", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMembers", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Account", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenewalTo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducationFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KabristanFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZakatFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DonationFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TamiratiFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnteredBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.usp_UPD_Renewal";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenewalYear", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fee", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateFee", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Link_Account", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardFee", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdultMembers", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalMembers", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Account", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RenewalTo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducationFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KabristanFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZakatFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DonationFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TamiratiFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChangedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_RenewalDataTable dataTable, string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_RenewalDataTable GetData(string FCardNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(FCardNo));
            }
            ComDataSet.usp_SEL_RenewalDataTable dataTable = new ComDataSet.usp_SEL_RenewalDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Delete1(global::System.Nullable<int> ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Insert1(
                    string FCardNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string RenewalYear, 
                    global::System.Nullable<decimal> Fee, 
                    global::System.Nullable<decimal> PoorFund, 
                    global::System.Nullable<decimal> LateFee, 
                    global::System.Nullable<decimal> Total, 
                    global::System.Nullable<bool> Link_Account, 
                    global::System.Nullable<decimal> CardFee, 
                    string AdultMembers, 
                    string TotalMembers, 
                    string ReceiptNo, 
                    global::System.Nullable<int> Account, 
                    global::System.Nullable<int> PoorAcc, 
                    string RenewalTo, 
                    global::System.Nullable<decimal> EducationFund, 
                    global::System.Nullable<decimal> KabristanFund, 
                    global::System.Nullable<decimal> ZakatFund, 
                    global::System.Nullable<decimal> DonationFund, 
                    global::System.Nullable<decimal> TamiratiFund, 
                    int EnteredBy) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((FCardNo == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(FCardNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((RenewalYear == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(RenewalYear));
            }
            if ((Fee.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(Fee.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PoorFund.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(PoorFund.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((LateFee.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(LateFee.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Total.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(Total.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Link_Account.HasValue == true)) {
                command.Parameters[8].Value = ((bool)(Link_Account.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CardFee.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(CardFee.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AdultMembers == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(AdultMembers));
            }
            if ((TotalMembers == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(TotalMembers));
            }
            if ((ReceiptNo == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(ReceiptNo));
            }
            if ((Account.HasValue == true)) {
                command.Parameters[13].Value = ((int)(Account.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((PoorAcc.HasValue == true)) {
                command.Parameters[14].Value = ((int)(PoorAcc.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((RenewalTo == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(RenewalTo));
            }
            if ((EducationFund.HasValue == true)) {
                command.Parameters[16].Value = ((decimal)(EducationFund.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((KabristanFund.HasValue == true)) {
                command.Parameters[17].Value = ((decimal)(KabristanFund.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ZakatFund.HasValue == true)) {
                command.Parameters[18].Value = ((decimal)(ZakatFund.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((DonationFund.HasValue == true)) {
                command.Parameters[19].Value = ((decimal)(DonationFund.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((TamiratiFund.HasValue == true)) {
                command.Parameters[20].Value = ((decimal)(TamiratiFund.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            command.Parameters[21].Value = ((int)(EnteredBy));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update1(
                    global::System.Nullable<int> ID, 
                    string FCardNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string RenewalYear, 
                    global::System.Nullable<decimal> Fee, 
                    global::System.Nullable<decimal> PoorFund, 
                    global::System.Nullable<decimal> LateFee, 
                    global::System.Nullable<decimal> Total, 
                    global::System.Nullable<bool> Link_Account, 
                    global::System.Nullable<decimal> CardFee, 
                    string AdultMembers, 
                    string TotalMembers, 
                    string ReceiptNo, 
                    global::System.Nullable<int> Account, 
                    global::System.Nullable<int> PoorAcc, 
                    string RenewalTo, 
                    global::System.Nullable<decimal> EducationFund, 
                    global::System.Nullable<decimal> KabristanFund, 
                    global::System.Nullable<decimal> ZakatFund, 
                    global::System.Nullable<decimal> DonationFund, 
                    global::System.Nullable<decimal> TamiratiFund, 
                    int ChangedBy) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((ID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((RenewalYear == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(RenewalYear));
            }
            if ((Fee.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(Fee.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PoorFund.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(PoorFund.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((LateFee.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(LateFee.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Total.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(Total.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Link_Account.HasValue == true)) {
                command.Parameters[9].Value = ((bool)(Link_Account.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CardFee.HasValue == true)) {
                command.Parameters[10].Value = ((decimal)(CardFee.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AdultMembers == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(AdultMembers));
            }
            if ((TotalMembers == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(TotalMembers));
            }
            if ((ReceiptNo == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(ReceiptNo));
            }
            if ((Account.HasValue == true)) {
                command.Parameters[14].Value = ((int)(Account.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((PoorAcc.HasValue == true)) {
                command.Parameters[15].Value = ((int)(PoorAcc.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RenewalTo == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(RenewalTo));
            }
            if ((EducationFund.HasValue == true)) {
                command.Parameters[17].Value = ((decimal)(EducationFund.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((KabristanFund.HasValue == true)) {
                command.Parameters[18].Value = ((decimal)(KabristanFund.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ZakatFund.HasValue == true)) {
                command.Parameters[19].Value = ((decimal)(ZakatFund.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((DonationFund.HasValue == true)) {
                command.Parameters[20].Value = ((decimal)(DonationFund.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((TamiratiFund.HasValue == true)) {
                command.Parameters[21].Value = ((decimal)(TamiratiFund.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            command.Parameters[22].Value = ((int)(ChangedBy));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblAccountsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblAccountsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblAccounts";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Phone1", "Phone1");
            tableMapping.ColumnMappings.Add("Phone2", "Phone2");
            tableMapping.ColumnMappings.Add("Phone3", "Phone3");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("Fax", "Fax");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("NTN", "NTN");
            tableMapping.ColumnMappings.Add("STN", "STN");
            tableMapping.ColumnMappings.Add("AccStatus", "AccStatus");
            tableMapping.ColumnMappings.Add("IndexBook", "IndexBook");
            tableMapping.ColumnMappings.Add("Header", "Header");
            tableMapping.ColumnMappings.Add("HeaderType", "HeaderType");
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[7];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     tblAccounts.ID, tblAccounts.AccountCode, tblAccounts.AccountName, tblAccounts.Phone1, tblAccounts.Phone2, tblAccounts.Phone3, tblAccounts.Mobile, 
                      tblAccounts.Fax, tblAccounts.Email, tblAccounts.Website, tblAccounts.City, tblAccounts.Address, tblAccounts.NTN, tblAccounts.STN, 
                      tblAccounts.AccStatus, tblAccounts.IndexBook, tblHeader.Header, tblSubHeader.HeaderType, tblAccounts.ContactPerson
FROM         tblAccounts LEFT OUTER JOIN
                      tblHeader ON tblAccounts.AccHeader = tblHeader.ID  LEFT OUTER  JOIN
                      tblSubHeader ON tblAccounts.AccType = tblSubHeader.ID
WHERE tblAccounts.AccStatus = 'Active'
ORDER BY  tblAccounts.AccountName asc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM tblAccounts WHERE ID = @ID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     ID, AccountCode, AccountName, Phone1, Phone2, Phone3, Mobile, Fax, Email, Website, City, Address, NTN, STN, AccHeader, AccType, AccStatus, 
                      IndexBook, ContactPerson
FROM         tblAccounts
WHERE     (AccType = 'Banks') OR
                      (AccType = 'Cash and Cheques')";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     tblAccounts.ID, tblAccounts.AccountCode, tblAccounts.AccountName, tblAccounts.Phone1, tblAccounts.Phone2, tblAccounts.Phone3, tblAccounts.Mobile, 
                      tblAccounts.Fax, tblAccounts.Email, tblAccounts.Website, tblAccounts.City, tblAccounts.Address, tblAccounts.NTN, tblAccounts.STN, 
                      tblAccounts.AccStatus, tblAccounts.IndexBook, tblHeader.Header, tblSubHeader.HeaderType, tblAccounts.ContactPerson
FROM         tblAccounts LEFT OUTER JOIN
                      tblHeader ON tblAccounts.AccHeader = tblHeader.ID  LEFT OUTER  JOIN
                      tblSubHeader ON tblAccounts.AccType = tblSubHeader.ID
ORDER BY  tblAccounts.AccountCode asc";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     tblAccounts.ID, tblAccounts.AccountCode, tblAccounts.AccountName, tblAccounts.Phone1, tblAccounts.Phone2, tblAccounts.Phone3, tblAccounts.Mobile, 
                      tblAccounts.Fax, tblAccounts.Email, tblAccounts.Website, tblAccounts.City, tblAccounts.Address, tblAccounts.NTN, tblAccounts.STN, 
                      tblAccounts.AccStatus, tblAccounts.IndexBook, tblAccounts.ContactPerson, tblHeader.Header, tblSubHeader.HeaderType
FROM         tblAccounts INNER JOIN
                      tblHeader ON tblAccounts.AccHeader = tblHeader.ID INNER JOIN
                      tblSubHeader ON tblAccounts.AccType = tblSubHeader.ID
ORDER BY  tblAccounts.AccountName asc";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"INSERT INTO tblAccounts(AccountCode,AccountName,Phone1,Phone2,Phone3,Mobile,Fax,Email,Website,City,Address,NTN,STN,AccHeader,AccType,AccStatus,IndexBook,ContactPerson) VALUES(@AccountCode,@AccountName,@Phone1,@Phone2,@Phone3,@Mobile,@Fax,@Email,@Website,@City,@Address,@NTN,@STN,@AccHeader,@AccType,@AccStatus,@IndexBook,@ContactPerson)
";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountCode", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "AccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountName", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "AccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone1", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Phone1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone2", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Phone2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone3", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Phone3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NTN", global::System.Data.SqlDbType.NVarChar, 14, global::System.Data.ParameterDirection.Input, 0, 0, "NTN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STN", global::System.Data.SqlDbType.NVarChar, 17, global::System.Data.ParameterDirection.Input, 0, 0, "STN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccHeader", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccHeader", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccStatus", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "AccStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexBook", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBook", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"UPDATE tblAccounts
		SET
			AccountCode = @AccountCode,
			AccountName = @AccountName,
			Phone1 = @Phone1,
			Phone2 = @Phone2,
			Phone3 = @Phone3,
			Mobile = @Mobile,
			Fax = @Fax,
			Email = @Email,
			Website = @Website,
			City = @City,
			Address = @Address,
			NTN = @NTN,
			STN = @STN,
			AccHeader = @AccHeader,
			AccType = @AccType,
			AccStatus = @AccStatus,
			IndexBook = @IndexBook,
			ContactPerson = @ContactPerson

		WHERE
			ID = @ID";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountCode", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "AccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountName", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "AccountName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone1", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Phone1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone2", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Phone2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone3", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Phone3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.NVarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NTN", global::System.Data.SqlDbType.NVarChar, 14, global::System.Data.ParameterDirection.Input, 0, 0, "NTN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STN", global::System.Data.SqlDbType.NVarChar, 17, global::System.Data.ParameterDirection.Input, 0, 0, "STN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccHeader", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccHeader", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccStatus", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "AccStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IndexBook", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "IndexBook", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblAccountsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblAccountsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblAccountsDataTable dataTable = new ComDataSet.tblAccountsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill_Accounts(ComDataSet.tblAccountsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblAccountsDataTable GetDataBy4() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            ComDataSet.tblAccountsDataTable dataTable = new ComDataSet.tblAccountsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill_All(ComDataSet.tblAccountsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblAccountsDataTable GetDataBy5() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            ComDataSet.tblAccountsDataTable dataTable = new ComDataSet.tblAccountsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAll(ComDataSet.tblAccountsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblAccountsDataTable GetDataBy3() {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            ComDataSet.tblAccountsDataTable dataTable = new ComDataSet.tblAccountsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteAccount(int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertAccount(
                    string AccountCode, 
                    string AccountName, 
                    string Phone1, 
                    string Phone2, 
                    string Phone3, 
                    string Mobile, 
                    string Fax, 
                    string Email, 
                    string Website, 
                    string City, 
                    string Address, 
                    string NTN, 
                    string STN, 
                    global::System.Nullable<int> AccHeader, 
                    global::System.Nullable<int> AccType, 
                    string AccStatus, 
                    string IndexBook, 
                    string ContactPerson) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((AccountCode == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(AccountCode));
            }
            if ((AccountName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(AccountName));
            }
            if ((Phone1 == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Phone1));
            }
            if ((Phone2 == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Phone2));
            }
            if ((Phone3 == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Phone3));
            }
            if ((Mobile == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Mobile));
            }
            if ((Fax == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Fax));
            }
            if ((Email == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Email));
            }
            if ((Website == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Website));
            }
            if ((City == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(City));
            }
            if ((Address == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Address));
            }
            if ((NTN == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(NTN));
            }
            if ((STN == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(STN));
            }
            if ((AccHeader.HasValue == true)) {
                command.Parameters[13].Value = ((int)(AccHeader.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AccType.HasValue == true)) {
                command.Parameters[14].Value = ((int)(AccType.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AccStatus == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(AccStatus));
            }
            if ((IndexBook == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(IndexBook));
            }
            if ((ContactPerson == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(ContactPerson));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateAccount(
                    string AccountCode, 
                    string AccountName, 
                    string Phone1, 
                    string Phone2, 
                    string Phone3, 
                    string Mobile, 
                    string Fax, 
                    string Email, 
                    string Website, 
                    string City, 
                    string Address, 
                    string NTN, 
                    string STN, 
                    global::System.Nullable<int> AccHeader, 
                    global::System.Nullable<int> AccType, 
                    string AccStatus, 
                    string IndexBook, 
                    string ContactPerson, 
                    int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((AccountCode == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(AccountCode));
            }
            if ((AccountName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(AccountName));
            }
            if ((Phone1 == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Phone1));
            }
            if ((Phone2 == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Phone2));
            }
            if ((Phone3 == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Phone3));
            }
            if ((Mobile == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Mobile));
            }
            if ((Fax == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Fax));
            }
            if ((Email == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Email));
            }
            if ((Website == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Website));
            }
            if ((City == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(City));
            }
            if ((Address == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Address));
            }
            if ((NTN == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(NTN));
            }
            if ((STN == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(STN));
            }
            if ((AccHeader.HasValue == true)) {
                command.Parameters[13].Value = ((int)(AccHeader.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AccType.HasValue == true)) {
                command.Parameters[14].Value = ((int)(AccType.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AccStatus == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(AccStatus));
            }
            if ((IndexBook == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(IndexBook));
            }
            if ((ContactPerson == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(ContactPerson));
            }
            command.Parameters[18].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_TSF_tblFamilyMemberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_TSF_tblFamilyMemberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_TSF_tblFamilyMember";
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            tableMapping.ColumnMappings.Add("LeaderRelation", "LeaderRelation");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("HusbandName", "HusbandName");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("CNIC", "CNIC");
            tableMapping.ColumnMappings.Add("NIC", "NIC");
            tableMapping.ColumnMappings.Add("AcademicEducation", "AcademicEducation");
            tableMapping.ColumnMappings.Add("TechnicalEducation", "TechnicalEducation");
            tableMapping.ColumnMappings.Add("ProfessionalEducation", "ProfessionalEducation");
            tableMapping.ColumnMappings.Add("BusinessName", "BusinessName");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("BusinessAddress", "BusinessAddress");
            tableMapping.ColumnMappings.Add("BusinessPhone", "BusinessPhone");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("BusinessFax", "BusinessFax");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("D_Incident", "D_Incident");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Outof", "Outof");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("FamilyMemberID", "FamilyMemberID1");
            tableMapping.ColumnMappings.Add("FromFCard", "FromFCard");
            tableMapping.ColumnMappings.Add("ToFCard", "ToFCard");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblFamilyMember] WHERE (([FamilyMemberID] = @Original_FamilyMemberID" +
                ") AND ((@IsNull_FCardNo = 1 AND [FCardNo] IS NULL) OR ([FCardNo] = @Original_FCa" +
                "rdNo)) AND ((@IsNull_MemberName = 1 AND [MemberName] IS NULL) OR ([MemberName] =" +
                " @Original_MemberName)) AND ((@IsNull_LeaderRelation = 1 AND [LeaderRelation] IS" +
                " NULL) OR ([LeaderRelation] = @Original_LeaderRelation)) AND ((@IsNull_FatherNam" +
                "e = 1 AND [FatherName] IS NULL) OR ([FatherName] = @Original_FatherName)) AND ((" +
                "@IsNull_HusbandName = 1 AND [HusbandName] IS NULL) OR ([HusbandName] = @Original" +
                "_HusbandName)) AND ((@IsNull_DOB = 1 AND [DOB] IS NULL) OR ([DOB] = @Original_DO" +
                "B)) AND ((@IsNull_BloodGroup = 1 AND [BloodGroup] IS NULL) OR ([BloodGroup] = @O" +
                "riginal_BloodGroup)) AND ((@IsNull_Mobile = 1 AND [Mobile] IS NULL) OR ([Mobile]" +
                " = @Original_Mobile)) AND ((@IsNull_CNIC = 1 AND [CNIC] IS NULL) OR ([CNIC] = @O" +
                "riginal_CNIC)) AND ((@IsNull_NIC = 1 AND [NIC] IS NULL) OR ([NIC] = @Original_NI" +
                "C)) AND ((@IsNull_AcademicEducation = 1 AND [AcademicEducation] IS NULL) OR ([Ac" +
                "ademicEducation] = @Original_AcademicEducation)) AND ((@IsNull_TechnicalEducatio" +
                "n = 1 AND [TechnicalEducation] IS NULL) OR ([TechnicalEducation] = @Original_Tec" +
                "hnicalEducation)) AND ((@IsNull_ProfessionalEducation = 1 AND [ProfessionalEduca" +
                "tion] IS NULL) OR ([ProfessionalEducation] = @Original_ProfessionalEducation)) A" +
                "ND ((@IsNull_BusinessName = 1 AND [BusinessName] IS NULL) OR ([BusinessName] = @" +
                "Original_BusinessName)) AND ((@IsNull_WorkType = 1 AND [WorkType] IS NULL) OR ([" +
                "WorkType] = @Original_WorkType)) AND ((@IsNull_Designation = 1 AND [Designation]" +
                " IS NULL) OR ([Designation] = @Original_Designation)) AND ((@IsNull_BusinessAddr" +
                "ess = 1 AND [BusinessAddress] IS NULL) OR ([BusinessAddress] = @Original_Busines" +
                "sAddress)) AND ((@IsNull_BusinessPhone = 1 AND [BusinessPhone] IS NULL) OR ([Bus" +
                "inessPhone] = @Original_BusinessPhone)) AND ((@IsNull_Email = 1 AND [Email] IS N" +
                "ULL) OR ([Email] = @Original_Email)) AND ((@IsNull_Website = 1 AND [Website] IS " +
                "NULL) OR ([Website] = @Original_Website)) AND ((@IsNull_BusinessFax = 1 AND [Bus" +
                "inessFax] IS NULL) OR ([BusinessFax] = @Original_BusinessFax)) AND ((@IsNull_Gen" +
                "der = 1 AND [Gender] IS NULL) OR ([Gender] = @Original_Gender)) AND ((@IsNull_Ag" +
                "eGroup = 1 AND [AgeGroup] IS NULL) OR ([AgeGroup] = @Original_AgeGroup)) AND ((@" +
                "IsNull_Active = 1 AND [Active] IS NULL) OR ([Active] = @Original_Active)) AND ((" +
                "@IsNull_Reason = 1 AND [Reason] IS NULL) OR ([Reason] = @Original_Reason)) AND (" +
                "(@IsNull_D_Incident = 1 AND [D_Incident] IS NULL) OR ([D_Incident] = @Original_D" +
                "_Incident)) AND ((@IsNull_MaritalStatus = 1 AND [MaritalStatus] IS NULL) OR ([Ma" +
                "ritalStatus] = @Original_MaritalStatus)) AND ((@IsNull_Outof = 1 AND [Outof] IS " +
                "NULL) OR ([Outof] = @Original_Outof)) AND ((@IsNull_EntryDate = 1 AND [EntryDate" +
                "] IS NULL) OR ([EntryDate] = @Original_EntryDate)) AND ((@IsNull_FromFCard = 1 A" +
                "ND [FromFCard] IS NULL) OR ([FromFCard] = @Original_FromFCard)) AND ((@IsNull_To" +
                "FCard = 1 AND [ToFCard] IS NULL) OR ([ToFCard] = @Original_ToFCard)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyMemberID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMemberID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FCardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MemberName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MemberName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeaderRelation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderRelation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FatherName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FatherName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FatherName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FatherName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HusbandName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HusbandName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HusbandName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HusbandName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BloodGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BloodGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BloodGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BloodGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mobile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CNIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AcademicEducation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcademicEducation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcademicEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcademicEducation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TechnicalEducation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TechnicalEducation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TechnicalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TechnicalEducation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProfessionalEducation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfessionalEducation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProfessionalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfessionalEducation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Designation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessPhone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessPhone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessFax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessFax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessFax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_D_Incident", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_Incident", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_Incident", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_Incident", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaritalStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outof", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outof", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outof", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outof", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EntryDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FromFCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromFCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromFCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ToFCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToFCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ToFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToFCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblFamilyMember] ([FCardNo], [MemberName], [LeaderRelation], [FatherName], [HusbandName], [DOB], [BloodGroup], [Mobile], [CNIC], [NIC], [AcademicEducation], [TechnicalEducation], [ProfessionalEducation], [BusinessName], [WorkType], [Designation], [BusinessAddress], [BusinessPhone], [Email], [Website], [BusinessFax], [Gender], [AgeGroup], [Active], [Reason], [D_Incident], [MaritalStatus], [Outof], [EntryDate], [FromFCard], [ToFCard]) VALUES (@FCardNo, @MemberName, @LeaderRelation, @FatherName, @HusbandName, @DOB, @BloodGroup, @Mobile, @CNIC, @NIC, @AcademicEducation, @TechnicalEducation, @ProfessionalEducation, @BusinessName, @WorkType, @Designation, @BusinessAddress, @BusinessPhone, @Email, @Website, @BusinessFax, @Gender, @AgeGroup, @Active, @Reason, @D_Incident, @MaritalStatus, @Outof, @EntryDate, @FromFCard, @ToFCard);
SELECT FamilyMemberID, FCardNo, MemberName, LeaderRelation, FatherName, HusbandName, DOB, BloodGroup, Mobile, CNIC, NIC, AcademicEducation, TechnicalEducation, ProfessionalEducation, BusinessName, WorkType, Designation, BusinessAddress, BusinessPhone, Email, Website, BusinessFax, Gender, AgeGroup, Active, Reason, D_Incident, MaritalStatus, Outof, EntryDate, FromFCard, ToFCard FROM tblFamilyMember WHERE (FamilyMemberID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FatherName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FatherName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HusbandName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HusbandName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BloodGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BloodGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcademicEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcademicEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TechnicalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TechnicalEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfessionalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfessionalEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_Incident", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_Incident", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outof", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outof", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromFCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToFCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblFamilyMember] SET [FCardNo] = @FCardNo, [MemberName] = @MemberName, [L" +
                "eaderRelation] = @LeaderRelation, [FatherName] = @FatherName, [HusbandName] = @H" +
                "usbandName, [DOB] = @DOB, [BloodGroup] = @BloodGroup, [Mobile] = @Mobile, [CNIC]" +
                " = @CNIC, [NIC] = @NIC, [AcademicEducation] = @AcademicEducation, [TechnicalEduc" +
                "ation] = @TechnicalEducation, [ProfessionalEducation] = @ProfessionalEducation, " +
                "[BusinessName] = @BusinessName, [WorkType] = @WorkType, [Designation] = @Designa" +
                "tion, [BusinessAddress] = @BusinessAddress, [BusinessPhone] = @BusinessPhone, [E" +
                "mail] = @Email, [Website] = @Website, [BusinessFax] = @BusinessFax, [Gender] = @" +
                "Gender, [AgeGroup] = @AgeGroup, [Active] = @Active, [Reason] = @Reason, [D_Incid" +
                "ent] = @D_Incident, [MaritalStatus] = @MaritalStatus, [Outof] = @Outof, [EntryDa" +
                "te] = @EntryDate, [FromFCard] = @FromFCard, [ToFCard] = @ToFCard WHERE (([Family" +
                "MemberID] = @Original_FamilyMemberID) AND ((@IsNull_FCardNo = 1 AND [FCardNo] IS" +
                " NULL) OR ([FCardNo] = @Original_FCardNo)) AND ((@IsNull_MemberName = 1 AND [Mem" +
                "berName] IS NULL) OR ([MemberName] = @Original_MemberName)) AND ((@IsNull_Leader" +
                "Relation = 1 AND [LeaderRelation] IS NULL) OR ([LeaderRelation] = @Original_Lead" +
                "erRelation)) AND ((@IsNull_FatherName = 1 AND [FatherName] IS NULL) OR ([FatherN" +
                "ame] = @Original_FatherName)) AND ((@IsNull_HusbandName = 1 AND [HusbandName] IS" +
                " NULL) OR ([HusbandName] = @Original_HusbandName)) AND ((@IsNull_DOB = 1 AND [DO" +
                "B] IS NULL) OR ([DOB] = @Original_DOB)) AND ((@IsNull_BloodGroup = 1 AND [BloodG" +
                "roup] IS NULL) OR ([BloodGroup] = @Original_BloodGroup)) AND ((@IsNull_Mobile = " +
                "1 AND [Mobile] IS NULL) OR ([Mobile] = @Original_Mobile)) AND ((@IsNull_CNIC = 1" +
                " AND [CNIC] IS NULL) OR ([CNIC] = @Original_CNIC)) AND ((@IsNull_NIC = 1 AND [NI" +
                "C] IS NULL) OR ([NIC] = @Original_NIC)) AND ((@IsNull_AcademicEducation = 1 AND " +
                "[AcademicEducation] IS NULL) OR ([AcademicEducation] = @Original_AcademicEducati" +
                "on)) AND ((@IsNull_TechnicalEducation = 1 AND [TechnicalEducation] IS NULL) OR (" +
                "[TechnicalEducation] = @Original_TechnicalEducation)) AND ((@IsNull_Professional" +
                "Education = 1 AND [ProfessionalEducation] IS NULL) OR ([ProfessionalEducation] =" +
                " @Original_ProfessionalEducation)) AND ((@IsNull_BusinessName = 1 AND [BusinessN" +
                "ame] IS NULL) OR ([BusinessName] = @Original_BusinessName)) AND ((@IsNull_WorkTy" +
                "pe = 1 AND [WorkType] IS NULL) OR ([WorkType] = @Original_WorkType)) AND ((@IsNu" +
                "ll_Designation = 1 AND [Designation] IS NULL) OR ([Designation] = @Original_Desi" +
                "gnation)) AND ((@IsNull_BusinessAddress = 1 AND [BusinessAddress] IS NULL) OR ([" +
                "BusinessAddress] = @Original_BusinessAddress)) AND ((@IsNull_BusinessPhone = 1 A" +
                "ND [BusinessPhone] IS NULL) OR ([BusinessPhone] = @Original_BusinessPhone)) AND " +
                "((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@" +
                "IsNull_Website = 1 AND [Website] IS NULL) OR ([Website] = @Original_Website)) AN" +
                "D ((@IsNull_BusinessFax = 1 AND [BusinessFax] IS NULL) OR ([BusinessFax] = @Orig" +
                "inal_BusinessFax)) AND ((@IsNull_Gender = 1 AND [Gender] IS NULL) OR ([Gender] =" +
                " @Original_Gender)) AND ((@IsNull_AgeGroup = 1 AND [AgeGroup] IS NULL) OR ([AgeG" +
                "roup] = @Original_AgeGroup)) AND ((@IsNull_Active = 1 AND [Active] IS NULL) OR (" +
                "[Active] = @Original_Active)) AND ((@IsNull_Reason = 1 AND [Reason] IS NULL) OR " +
                "([Reason] = @Original_Reason)) AND ((@IsNull_D_Incident = 1 AND [D_Incident] IS " +
                "NULL) OR ([D_Incident] = @Original_D_Incident)) AND ((@IsNull_MaritalStatus = 1 " +
                "AND [MaritalStatus] IS NULL) OR ([MaritalStatus] = @Original_MaritalStatus)) AND" +
                " ((@IsNull_Outof = 1 AND [Outof] IS NULL) OR ([Outof] = @Original_Outof)) AND ((" +
                "@IsNull_EntryDate = 1 AND [EntryDate] IS NULL) OR ([EntryDate] = @Original_Entry" +
                "Date)) AND ((@IsNull_FromFCard = 1 AND [FromFCard] IS NULL) OR ([FromFCard] = @O" +
                "riginal_FromFCard)) AND ((@IsNull_ToFCard = 1 AND [ToFCard] IS NULL) OR ([ToFCar" +
                "d] = @Original_ToFCard)));\r\nSELECT FamilyMemberID, FCardNo, MemberName, LeaderRe" +
                "lation, FatherName, HusbandName, DOB, BloodGroup, Mobile, CNIC, NIC, AcademicEdu" +
                "cation, TechnicalEducation, ProfessionalEducation, BusinessName, WorkType, Desig" +
                "nation, BusinessAddress, BusinessPhone, Email, Website, BusinessFax, Gender, Age" +
                "Group, Active, Reason, D_Incident, MaritalStatus, Outof, EntryDate, FromFCard, T" +
                "oFCard FROM tblFamilyMember WHERE (FamilyMemberID = @FamilyMemberID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaderRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FatherName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FatherName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HusbandName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HusbandName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BloodGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BloodGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcademicEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcademicEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TechnicalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TechnicalEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfessionalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfessionalEducation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeGroup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_Incident", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_Incident", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outof", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outof", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromFCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToFCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FamilyMemberID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMemberID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FCardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MemberName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MemberName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LeaderRelation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderRelation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LeaderRelation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaderRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FatherName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FatherName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FatherName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FatherName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HusbandName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HusbandName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HusbandName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HusbandName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOB", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BloodGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BloodGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BloodGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BloodGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mobile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CNIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NIC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AcademicEducation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcademicEducation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AcademicEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcademicEducation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TechnicalEducation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TechnicalEducation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TechnicalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TechnicalEducation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProfessionalEducation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfessionalEducation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProfessionalEducation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfessionalEducation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Designation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Designation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Designation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessAddress", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessPhone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessPhone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessPhone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessPhone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BusinessFax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessFax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BusinessFax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessFax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeGroup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeGroup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeGroup", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeGroup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Reason", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reason", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reason", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_D_Incident", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_Incident", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_Incident", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_Incident", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaritalStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaritalStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outof", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outof", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outof", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outof", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EntryDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FromFCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromFCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromFCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ToFCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToFCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ToFCard", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ToFCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FamilyMemberID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "FamilyMemberID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM tblFamilyMember WHERE FCardNo = @FCardNo and MemberName = @MemberNa" +
                "me";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        FamilyMemberID\r\nFROM            tblFamilyMember\r\nWHERE        (FCar" +
                "dNo = @FcardNo) AND (MemberName = @MemberName)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FcardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_TSF_tblFamilyMemberDataTable dataTable, string FCardNo, string MemberName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((MemberName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(MemberName));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_TSF_tblFamilyMemberDataTable GetData(string FCardNo, string MemberName) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FCardNo == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((MemberName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(MemberName));
            }
            ComDataSet.usp_SEL_TSF_tblFamilyMemberDataTable dataTable = new ComDataSet.usp_SEL_TSF_tblFamilyMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.usp_SEL_TSF_tblFamilyMemberDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "usp_SEL_TSF_tblFamilyMember");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ScalarQuery(string FcardNo, string MemberName) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((FcardNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FcardNo));
            }
            if ((MemberName == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(MemberName));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblMembersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblMembersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblMembers";
            tableMapping.ColumnMappings.Add("FamilyMemberID", "FamilyMemberID");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            tableMapping.ColumnMappings.Add("LeaderRelation", "LeaderRelation");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("HusbandName", "HusbandName");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup");
            tableMapping.ColumnMappings.Add("AgeGroup", "AgeGroup");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("CNIC", "CNIC");
            tableMapping.ColumnMappings.Add("NIC", "NIC");
            tableMapping.ColumnMappings.Add("AcademicEducation", "AcademicEducation");
            tableMapping.ColumnMappings.Add("TechnicalEducation", "TechnicalEducation");
            tableMapping.ColumnMappings.Add("ProfessionalEducation", "ProfessionalEducation");
            tableMapping.ColumnMappings.Add("BusinessName", "BusinessName");
            tableMapping.ColumnMappings.Add("WorkType", "WorkType");
            tableMapping.ColumnMappings.Add("Designation", "Designation");
            tableMapping.ColumnMappings.Add("BusinessAddress", "BusinessAddress");
            tableMapping.ColumnMappings.Add("BusinessPhone", "BusinessPhone");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Website", "Website");
            tableMapping.ColumnMappings.Add("BusinessFax", "BusinessFax");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("Reason", "Reason");
            tableMapping.ColumnMappings.Add("D_Incident", "D_Incident");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Outof", "Outof");
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate");
            tableMapping.ColumnMappings.Add("Sign", "Sign");
            tableMapping.ColumnMappings.Add("Nukh", "Nukh");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Area", "Area");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Village", "Village");
            tableMapping.ColumnMappings.Add("FamilyLeader", "FamilyLeader");
            tableMapping.ColumnMappings.Add("FamilyName", "FamilyName");
            tableMapping.ColumnMappings.Add("IsNICPrinted", "IsNICPrinted");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_rpt_Memberz";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblMembersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblMembersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblMembersDataTable dataTable = new ComDataSet.tblMembersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblTrialBalanceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblTrialBalanceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblTrialBalance";
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Debit", "Debit");
            tableMapping.ColumnMappings.Add("Credit", "Credit");
            tableMapping.ColumnMappings.Add("Balance", "Balance");
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_RPT_TrialBalance";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblTrialBalanceDataTable dataTable, global::System.Nullable<global::System.DateTime> UpToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((UpToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(UpToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblTrialBalanceDataTable GetData(global::System.Nullable<global::System.DateTime> UpToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((UpToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(UpToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ComDataSet.tblTrialBalanceDataTable dataTable = new ComDataSet.tblTrialBalanceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblSecurityTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblSecurityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblSecurity";
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserName", "UserName");
            tableMapping.ColumnMappings.Add("Password", "Password");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Inactive_FL", "Inactive_FL");
            tableMapping.ColumnMappings.Add("GroupName", "GroupName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UserID, UserName,tblUserGroup.GroupName,Password,Date,Inactive_FL from tbl" +
                "Security INNER JOIN tblUserGroup ON tblSecurity.GroupID  = tblUserGroup.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO [tblSecurity] ([UserName], [Password], [Date], [Inactive_FL],GroupID)" +
                " VALUES (@UserName, @Password, @Date, @Inactive_FL,@GroupID);";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GroupID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "GroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "Delete tblSecurity WHERE UserID = @UserID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT UserID, UserName,tblUserGroup.GroupName,Password,Date,Inactive_FL from tbl" +
                "Security INNER JOIN tblUserGroup ON tblSecurity.GroupID  = tblUserGroup.ID WHERE" +
                "  Inactive_FL = 1";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT UserID, UserName,tblUserGroup.GroupName,Password,Date,Inactive_FL from tbl" +
                "Security INNER JOIN tblUserGroup ON tblSecurity.GroupID  = tblUserGroup.ID";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE tblSecurity Set UserName = @UserName , Password = @Password,Inactive_FL = " +
                "@Inactive_FL ,GroupID = @GroupID WHERE UserID = @UserID";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GroupID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "GroupID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblSecurityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblSecurityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblSecurityDataTable dataTable = new ComDataSet.tblSecurityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill_Group(ComDataSet.tblSecurityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblSecurityDataTable GetDataBy4() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            ComDataSet.tblSecurityDataTable dataTable = new ComDataSet.tblSecurityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAll(ComDataSet.tblSecurityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblSecurityDataTable GetDataBy3() {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            ComDataSet.tblSecurityDataTable dataTable = new ComDataSet.tblSecurityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int AddUser(string UserName, string Password, global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<bool> Inactive_FL, global::System.Nullable<int> GroupID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserName == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(UserName));
            }
            if ((Password == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Password));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Inactive_FL.HasValue == true)) {
                command.Parameters[3].Value = ((bool)(Inactive_FL.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((GroupID.HasValue == true)) {
                command.Parameters[4].Value = ((int)(GroupID.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUser(int UserID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(UserID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateUser(string UserName, string Password, global::System.Nullable<bool> Inactive_FL, global::System.Nullable<int> GroupID, int UserID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[5];
            if ((UserName == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(UserName));
            }
            if ((Password == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Password));
            }
            if ((Inactive_FL.HasValue == true)) {
                command.Parameters[2].Value = ((bool)(Inactive_FL.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((GroupID.HasValue == true)) {
                command.Parameters[3].Value = ((int)(GroupID.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            command.Parameters[4].Value = ((int)(UserID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblSecurityLevelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblSecurityLevelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblSecurityLevel";
            tableMapping.ColumnMappings.Add("SecurityLevel_ID", "SecurityLevel_ID");
            tableMapping.ColumnMappings.Add("SecurityName", "SecurityName");
            tableMapping.ColumnMappings.Add("Datetime", "Datetime");
            tableMapping.ColumnMappings.Add("Inactive_FL", "Inactive_FL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblSecurityLevel] WHERE (([SecurityLevel_ID] = @Original_SecurityLevel_ID) AND ((@IsNull_SecurityName = 1 AND [SecurityName] IS NULL) OR ([SecurityName] = @Original_SecurityName)) AND ((@IsNull_Datetime = 1 AND [Datetime] IS NULL) OR ([Datetime] = @Original_Datetime)) AND ((@IsNull_Inactive_FL = 1 AND [Inactive_FL] IS NULL) OR ([Inactive_FL] = @Original_Inactive_FL)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityLevel_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityLevel_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecurityName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Datetime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datetime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datetime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inactive_FL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inactive_FL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblSecurityLevel] ([SecurityName], [Datetime], [Inactive_FL]) VALUES" +
                " (@SecurityName, @Datetime, @Inactive_FL);\r\nSELECT SecurityLevel_ID, SecurityNam" +
                "e, Datetime, Inactive_FL FROM tblSecurityLevel WHERE (SecurityLevel_ID = SCOPE_I" +
                "DENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datetime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblSecurityLevel] SET [SecurityName] = @SecurityName, [Datetime] = @Datetime, [Inactive_FL] = @Inactive_FL WHERE (([SecurityLevel_ID] = @Original_SecurityLevel_ID) AND ((@IsNull_SecurityName = 1 AND [SecurityName] IS NULL) OR ([SecurityName] = @Original_SecurityName)) AND ((@IsNull_Datetime = 1 AND [Datetime] IS NULL) OR ([Datetime] = @Original_Datetime)) AND ((@IsNull_Inactive_FL = 1 AND [Inactive_FL] IS NULL) OR ([Inactive_FL] = @Original_Inactive_FL)));
SELECT SecurityLevel_ID, SecurityName, Datetime, Inactive_FL FROM tblSecurityLevel WHERE (SecurityLevel_ID = @SecurityLevel_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datetime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityLevel_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityLevel_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecurityName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Datetime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datetime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datetime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inactive_FL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inactive_FL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityLevel_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityLevel_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Select * from tblSecurityLevel WHERE Inactive_FL = 1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO tblSecurityLevel (SecurityName,Inactive_FL,Datetime) VALUES (@Securit" +
                "yName,@Inactive_FL,@Date)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Datetime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = " Delete tblSecurityLevel Where SecurityLevel_ID = @SecurityLevel_ID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityLevel_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityLevel_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT Datetime, Inactive_FL, SecurityLevel_ID, SecurityName FROM tblSecurityLeve" +
                "l";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE tblSecurityLevel Set SecurityName =@SecurityName ,Inactive_FL =@Inactive_F" +
                "L WHERE SecurityLevel_ID = @SecurityLevel_ID";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inactive_FL", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Inactive_FL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityLevel_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityLevel_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblSecurityLevelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblSecurityLevelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblSecurityLevelDataTable dataTable = new ComDataSet.tblSecurityLevelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillAll(ComDataSet.tblSecurityLevelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblSecurityLevelDataTable GetDataBy3() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            ComDataSet.tblSecurityLevelDataTable dataTable = new ComDataSet.tblSecurityLevelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.tblSecurityLevelDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblSecurityLevel");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SecurityLevel_ID, string Original_SecurityName, global::System.Nullable<global::System.DateTime> Original_Datetime, global::System.Nullable<bool> Original_Inactive_FL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SecurityLevel_ID));
            if ((Original_SecurityName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SecurityName));
            }
            if ((Original_Datetime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Datetime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Inactive_FL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_Inactive_FL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SecurityName, global::System.Nullable<global::System.DateTime> Datetime, global::System.Nullable<bool> Inactive_FL) {
            if ((SecurityName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SecurityName));
            }
            if ((Datetime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Datetime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Inactive_FL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Inactive_FL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SecurityName, global::System.Nullable<global::System.DateTime> Datetime, global::System.Nullable<bool> Inactive_FL, int Original_SecurityLevel_ID, string Original_SecurityName, global::System.Nullable<global::System.DateTime> Original_Datetime, global::System.Nullable<bool> Original_Inactive_FL, int SecurityLevel_ID) {
            if ((SecurityName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SecurityName));
            }
            if ((Datetime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Datetime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Inactive_FL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Inactive_FL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_SecurityLevel_ID));
            if ((Original_SecurityName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SecurityName));
            }
            if ((Original_Datetime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_Datetime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Inactive_FL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_Inactive_FL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(SecurityLevel_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SecurityName, global::System.Nullable<global::System.DateTime> Datetime, global::System.Nullable<bool> Inactive_FL, int Original_SecurityLevel_ID, string Original_SecurityName, global::System.Nullable<global::System.DateTime> Original_Datetime, global::System.Nullable<bool> Original_Inactive_FL) {
            return this.Update(SecurityName, Datetime, Inactive_FL, Original_SecurityLevel_ID, Original_SecurityName, Original_Datetime, Original_Inactive_FL, Original_SecurityLevel_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int AddLevel(string SecurityName, global::System.Nullable<bool> Inactive_FL, global::System.Nullable<global::System.DateTime> Date) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((SecurityName == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(SecurityName));
            }
            if ((Inactive_FL.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(Inactive_FL.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Date.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteLevel(int SecurityLevel_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(SecurityLevel_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateLevel(string SecurityName, global::System.Nullable<bool> Inactive_FL, int SecurityLevel_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((SecurityName == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(SecurityName));
            }
            if ((Inactive_FL.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(Inactive_FL.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            command.Parameters[2].Value = ((int)(SecurityLevel_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblLogingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblLogingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblLoging";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("UserName", "UserName");
            tableMapping.ColumnMappings.Add("LoginTime", "LoginTime");
            tableMapping.ColumnMappings.Add("LogoffTime", "LogoffTime");
            tableMapping.ColumnMappings.Add("R_ID", "R_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, tblSecurity.UserName, LoginTime,LogoffTime,R_ID FROM tblLoging INNER J" +
                "OIN tblSecurity ON tblLoging.UserID = tblSecurity.UserID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO tblLoging (UserID,LoginTime,R_ID) VALUES (@UserID,@LoginTime,@R_ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoginTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LoginTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "R_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE tblLoging SET UserID = @UserID , LogoffTime = @LogoffTime WHERE ID = @ID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogoffTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LogoffTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblLogingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblLogingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblLogingDataTable dataTable = new ComDataSet.tblLogingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int AddLoginTime(global::System.Nullable<int> UserID, global::System.Nullable<global::System.DateTime> LoginTime, global::System.Nullable<int> R_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserID.HasValue == true)) {
                command.Parameters[0].Value = ((int)(UserID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LoginTime.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(LoginTime.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((R_ID.HasValue == true)) {
                command.Parameters[2].Value = ((int)(R_ID.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int AddLogoffTime(global::System.Nullable<int> UserID, global::System.Nullable<global::System.DateTime> LogoffTime, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((UserID.HasValue == true)) {
                command.Parameters[0].Value = ((int)(UserID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LogoffTime.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(LogoffTime.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            command.Parameters[2].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_DonationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_DonationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_Donation";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("ReceivedFrom", "ReceivedFrom");
            tableMapping.ColumnMappings.Add("LaagaEng", "LaagaEng");
            tableMapping.ColumnMappings.Add("LaagaMrg", "LaagaMrg");
            tableMapping.ColumnMappings.Add("PoorFund", "PoorFund");
            tableMapping.ColumnMappings.Add("ZakatFund", "ZakatFund");
            tableMapping.ColumnMappings.Add("QabristanFund", "QabristanFund");
            tableMapping.ColumnMappings.Add("GeneralFund", "GeneralFund");
            tableMapping.ColumnMappings.Add("EducationFund", "EducationFund");
            tableMapping.ColumnMappings.Add("TameratiFund", "TameratiFund");
            tableMapping.ColumnMappings.Add("NewCard", "NewCard");
            tableMapping.ColumnMappings.Add("Others", "Others");
            tableMapping.ColumnMappings.Add("AccountRelation", "AccountRelation");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("TypeZ", "TypeZ");
            tableMapping.ColumnMappings.Add("TypeG", "TypeG");
            tableMapping.ColumnMappings.Add("TypeE", "TypeE");
            tableMapping.ColumnMappings.Add("ZNo", "ZNo");
            tableMapping.ColumnMappings.Add("GNo", "GNo");
            tableMapping.ColumnMappings.Add("ENo", "ENo");
            tableMapping.ColumnMappings.Add("LagaAcc", "LagaAcc");
            tableMapping.ColumnMappings.Add("PoorAcc", "PoorAcc");
            tableMapping.ColumnMappings.Add("EduAcc", "EduAcc");
            tableMapping.ColumnMappings.Add("QabAcc", "QabAcc");
            tableMapping.ColumnMappings.Add("TamAcc", "TamAcc");
            tableMapping.ColumnMappings.Add("ZakatAcc", "ZakatAcc");
            tableMapping.ColumnMappings.Add("CardAcc", "CardAcc");
            tableMapping.ColumnMappings.Add("GenAcc", "GenAcc");
            tableMapping.ColumnMappings.Add("OtherAcc", "OtherAcc");
            tableMapping.ColumnMappings.Add("LaagaFor", "LaagaFor");
            tableMapping.ColumnMappings.Add("LateDeath", "LateDeath");
            tableMapping.ColumnMappings.Add("CrtfType", "CrtfType");
            tableMapping.ColumnMappings.Add("Crtf", "Crtf");
            tableMapping.ColumnMappings.Add("ForCrtf", "ForCrtf");
            tableMapping.ColumnMappings.Add("ForBirth", "ForBirth");
            tableMapping.ColumnMappings.Add("ForDeath", "ForDeath");
            tableMapping.ColumnMappings.Add("AccCrtf", "AccCrtf");
            tableMapping.ColumnMappings.Add("CardNo", "CardNo");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblDonations] WHERE (([ID] = @Original_ID) AND ((@IsNull_ReceiptNo =" +
                " 1 AND [ReceiptNo] IS NULL) OR ([ReceiptNo] = @Original_ReceiptNo)) AND ((@IsNul" +
                "l_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_Recei" +
                "vedFrom = 1 AND [ReceivedFrom] IS NULL) OR ([ReceivedFrom] = @Original_ReceivedF" +
                "rom)) AND ((@IsNull_LaagaEng = 1 AND [LaagaEng] IS NULL) OR ([LaagaEng] = @Origi" +
                "nal_LaagaEng)) AND ((@IsNull_LaagaMrg = 1 AND [LaagaMrg] IS NULL) OR ([LaagaMrg]" +
                " = @Original_LaagaMrg)) AND ((@IsNull_PoorFund = 1 AND [PoorFund] IS NULL) OR ([" +
                "PoorFund] = @Original_PoorFund)) AND ((@IsNull_ZakatFund = 1 AND [ZakatFund] IS " +
                "NULL) OR ([ZakatFund] = @Original_ZakatFund)) AND ((@IsNull_QabristanFund = 1 AN" +
                "D [QabristanFund] IS NULL) OR ([QabristanFund] = @Original_QabristanFund)) AND (" +
                "(@IsNull_GeneralFund = 1 AND [GeneralFund] IS NULL) OR ([GeneralFund] = @Origina" +
                "l_GeneralFund)) AND ((@IsNull_EducationFund = 1 AND [EducationFund] IS NULL) OR " +
                "([EducationFund] = @Original_EducationFund)) AND ((@IsNull_TameratiFund = 1 AND " +
                "[TameratiFund] IS NULL) OR ([TameratiFund] = @Original_TameratiFund)) AND ((@IsN" +
                "ull_NewCard = 1 AND [NewCard] IS NULL) OR ([NewCard] = @Original_NewCard)) AND (" +
                "(@IsNull_Others = 1 AND [Others] IS NULL) OR ([Others] = @Original_Others)) AND " +
                "((@IsNull_AccountRelation = 1 AND [AccountRelation] IS NULL) OR ([AccountRelatio" +
                "n] = @Original_AccountRelation)) AND ((@IsNull_FCardNo = 1 AND [FCardNo] IS NULL" +
                ") OR ([FCardNo] = @Original_FCardNo)) AND ((@IsNull_Total = 1 AND [Total] IS NUL" +
                "L) OR ([Total] = @Original_Total)) AND ((@IsNull_Orakh = 1 AND [Orakh] IS NULL) " +
                "OR ([Orakh] = @Original_Orakh)) AND ((@IsNull_FName = 1 AND [FName] IS NULL) OR " +
                "([FName] = @Original_FName)) AND ((@IsNull_TypeZ = 1 AND [TypeZ] IS NULL) OR ([T" +
                "ypeZ] = @Original_TypeZ)) AND ((@IsNull_TypeG = 1 AND [TypeG] IS NULL) OR ([Type" +
                "G] = @Original_TypeG)) AND ((@IsNull_TypeE = 1 AND [TypeE] IS NULL) OR ([TypeE] " +
                "= @Original_TypeE)) AND ((@IsNull_ZNo = 1 AND [ZNo] IS NULL) OR ([ZNo] = @Origin" +
                "al_ZNo)) AND ((@IsNull_GNo = 1 AND [GNo] IS NULL) OR ([GNo] = @Original_GNo)) AN" +
                "D ((@IsNull_ENo = 1 AND [ENo] IS NULL) OR ([ENo] = @Original_ENo)) AND ((@IsNull" +
                "_LaagaFor = 1 AND [LaagaFor] IS NULL) OR ([LaagaFor] = @Original_LaagaFor)) AND " +
                "((@IsNull_LateDeath = 1 AND [LateDeath] IS NULL) OR ([LateDeath] = @Original_Lat" +
                "eDeath)) AND ((@IsNull_Crtf = 1 AND [Crtf] IS NULL) OR ([Crtf] = @Original_Crtf)" +
                ") AND ((@IsNull_CrtfType = 1 AND [CrtfType] IS NULL) OR ([CrtfType] = @Original_" +
                "CrtfType)) AND ((@IsNull_ForCrtf = 1 AND [ForCrtf] IS NULL) OR ([ForCrtf] = @Ori" +
                "ginal_ForCrtf)) AND ((@IsNull_ForBirth = 1 AND [ForBirth] IS NULL) OR ([ForBirth" +
                "] = @Original_ForBirth)) AND ((@IsNull_ForDeath = 1 AND [ForDeath] IS NULL) OR (" +
                "[ForDeath] = @Original_ForDeath)) AND ((@IsNull_CardNo = 1 AND [CardNo] IS NULL)" +
                " OR ([CardNo] = @Original_CardNo)) AND ((@IsNull_Mobile = 1 AND [Mobile] IS NULL" +
                ") OR ([Mobile] = @Original_Mobile)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceiptNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LaagaEng", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaagaEng", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LaagaMrg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaagaMrg", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PoorFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PoorFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ZakatFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZakatFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QabristanFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QabristanFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EducationFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducationFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TameratiFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TameratiFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NewCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NewCard", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Others", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Others", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AccountRelation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccountRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FCardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Orakh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Orakh", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TypeZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TypeG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TypeE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ZNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ENo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LaagaFor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaagaFor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LateDeath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LateDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crtf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crtf", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrtfType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrtfType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForCrtf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForCrtf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForBirth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForDeath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForDeath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mobile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblDonations] ([ReceiptNo], [Date], [ReceivedFrom], [LaagaEng], [Laa" +
                "gaMrg], [PoorFund], [ZakatFund], [QabristanFund], [GeneralFund], [EducationFund]" +
                ", [TameratiFund], [NewCard], [Others], [AccountRelation], [FCardNo], [Total], [O" +
                "rakh], [FName], [TypeZ], [TypeG], [TypeE], [ZNo], [GNo], [ENo], [LaagaFor], [Lat" +
                "eDeath], [Crtf], [CrtfType], [ForCrtf], [ForBirth], [ForDeath], [CardNo], [Mobil" +
                "e]) VALUES (@ReceiptNo, @Date, @ReceivedFrom, @LaagaEng, @LaagaMrg, @PoorFund, @" +
                "ZakatFund, @QabristanFund, @GeneralFund, @EducationFund, @TameratiFund, @NewCard" +
                ", @Others, @AccountRelation, @FCardNo, @Total, @Orakh, @FName, @TypeZ, @TypeG, @" +
                "TypeE, @ZNo, @GNo, @ENo, @LaagaFor, @LateDeath, @Crtf, @CrtfType, @ForCrtf, @For" +
                "Birth, @ForDeath, @CardNo, @Mobile);\r\nSELECT ID, ReceiptNo, Date, ReceivedFrom, " +
                "LaagaEng, LaagaMrg, PoorFund, ZakatFund, QabristanFund, GeneralFund, EducationFu" +
                "nd, TameratiFund, NewCard, Others, AccountRelation, FCardNo, Total, Orakh, FName" +
                ", TypeZ, TypeG, TypeE, ZNo, GNo, ENo, LaagaFor, LateDeath, Crtf, CrtfType, ForCr" +
                "tf, ForBirth, ForDeath, CardNo, (SELECT AccountName FROM tblAccounts WHERE (ID =" +
                " tblDonations.AccLaga)) AS LagaAcc, (SELECT AccountName FROM tblAccounts AS tblA" +
                "ccounts_9 WHERE (ID = tblDonations.AccPoor)) AS PoorAcc, (SELECT AccountName FRO" +
                "M tblAccounts AS tblAccounts_8 WHERE (ID = tblDonations.AccEdu)) AS EduAcc, (SEL" +
                "ECT AccountName FROM tblAccounts AS tblAccounts_7 WHERE (ID = tblDonations.AccQa" +
                "b)) AS QabAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_6 WHERE (ID =" +
                " tblDonations.AccTam)) AS TamAcc, (SELECT AccountName FROM tblAccounts AS tblAcc" +
                "ounts_5 WHERE (ID = tblDonations.AccZakat)) AS ZakatAcc, (SELECT AccountName FRO" +
                "M tblAccounts AS tblAccounts_4 WHERE (ID = tblDonations.AccCard)) AS CardAcc, (S" +
                "ELECT AccountName FROM tblAccounts AS tblAccounts_3 WHERE (ID = tblDonations.Acc" +
                "Gen)) AS GenAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_2 WHERE (ID" +
                " = tblDonations.AccOther)) AS OtherAcc, (SELECT AccountName FROM tblAccounts AS " +
                "tblAccounts_1 WHERE (ID = tblDonations.AccCrtf)) AS AccCrtf, Mobile FROM tblDona" +
                "tions WHERE (ID = SCOPE_IDENTITY()) ORDER BY ReceiptNo DESC";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaEng", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaMrg", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZakatFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QabristanFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducationFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TameratiFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCard", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Others", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaFor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crtf", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrtfType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForCrtf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForDeath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblDonations] SET [ReceiptNo] = @ReceiptNo, [Date] = @Date, [ReceivedFrom" +
                "] = @ReceivedFrom, [LaagaEng] = @LaagaEng, [LaagaMrg] = @LaagaMrg, [PoorFund] = " +
                "@PoorFund, [ZakatFund] = @ZakatFund, [QabristanFund] = @QabristanFund, [GeneralF" +
                "und] = @GeneralFund, [EducationFund] = @EducationFund, [TameratiFund] = @Tamerat" +
                "iFund, [NewCard] = @NewCard, [Others] = @Others, [AccountRelation] = @AccountRel" +
                "ation, [FCardNo] = @FCardNo, [Total] = @Total, [Orakh] = @Orakh, [FName] = @FNam" +
                "e, [TypeZ] = @TypeZ, [TypeG] = @TypeG, [TypeE] = @TypeE, [ZNo] = @ZNo, [GNo] = @" +
                "GNo, [ENo] = @ENo, [LaagaFor] = @LaagaFor, [LateDeath] = @LateDeath, [Crtf] = @C" +
                "rtf, [CrtfType] = @CrtfType, [ForCrtf] = @ForCrtf, [ForBirth] = @ForBirth, [ForD" +
                "eath] = @ForDeath, [CardNo] = @CardNo, [Mobile] = @Mobile WHERE (([ID] = @Origin" +
                "al_ID) AND ((@IsNull_ReceiptNo = 1 AND [ReceiptNo] IS NULL) OR ([ReceiptNo] = @O" +
                "riginal_ReceiptNo)) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Ori" +
                "ginal_Date)) AND ((@IsNull_ReceivedFrom = 1 AND [ReceivedFrom] IS NULL) OR ([Rec" +
                "eivedFrom] = @Original_ReceivedFrom)) AND ((@IsNull_LaagaEng = 1 AND [LaagaEng] " +
                "IS NULL) OR ([LaagaEng] = @Original_LaagaEng)) AND ((@IsNull_LaagaMrg = 1 AND [L" +
                "aagaMrg] IS NULL) OR ([LaagaMrg] = @Original_LaagaMrg)) AND ((@IsNull_PoorFund =" +
                " 1 AND [PoorFund] IS NULL) OR ([PoorFund] = @Original_PoorFund)) AND ((@IsNull_Z" +
                "akatFund = 1 AND [ZakatFund] IS NULL) OR ([ZakatFund] = @Original_ZakatFund)) AN" +
                "D ((@IsNull_QabristanFund = 1 AND [QabristanFund] IS NULL) OR ([QabristanFund] =" +
                " @Original_QabristanFund)) AND ((@IsNull_GeneralFund = 1 AND [GeneralFund] IS NU" +
                "LL) OR ([GeneralFund] = @Original_GeneralFund)) AND ((@IsNull_EducationFund = 1 " +
                "AND [EducationFund] IS NULL) OR ([EducationFund] = @Original_EducationFund)) AND" +
                " ((@IsNull_TameratiFund = 1 AND [TameratiFund] IS NULL) OR ([TameratiFund] = @Or" +
                "iginal_TameratiFund)) AND ((@IsNull_NewCard = 1 AND [NewCard] IS NULL) OR ([NewC" +
                "ard] = @Original_NewCard)) AND ((@IsNull_Others = 1 AND [Others] IS NULL) OR ([O" +
                "thers] = @Original_Others)) AND ((@IsNull_AccountRelation = 1 AND [AccountRelati" +
                "on] IS NULL) OR ([AccountRelation] = @Original_AccountRelation)) AND ((@IsNull_F" +
                "CardNo = 1 AND [FCardNo] IS NULL) OR ([FCardNo] = @Original_FCardNo)) AND ((@IsN" +
                "ull_Total = 1 AND [Total] IS NULL) OR ([Total] = @Original_Total)) AND ((@IsNull" +
                "_Orakh = 1 AND [Orakh] IS NULL) OR ([Orakh] = @Original_Orakh)) AND ((@IsNull_FN" +
                "ame = 1 AND [FName] IS NULL) OR ([FName] = @Original_FName)) AND ((@IsNull_TypeZ" +
                " = 1 AND [TypeZ] IS NULL) OR ([TypeZ] = @Original_TypeZ)) AND ((@IsNull_TypeG = " +
                "1 AND [TypeG] IS NULL) OR ([TypeG] = @Original_TypeG)) AND ((@IsNull_TypeE = 1 A" +
                "ND [TypeE] IS NULL) OR ([TypeE] = @Original_TypeE)) AND ((@IsNull_ZNo = 1 AND [Z" +
                "No] IS NULL) OR ([ZNo] = @Original_ZNo)) AND ((@IsNull_GNo = 1 AND [GNo] IS NULL" +
                ") OR ([GNo] = @Original_GNo)) AND ((@IsNull_ENo = 1 AND [ENo] IS NULL) OR ([ENo]" +
                " = @Original_ENo)) AND ((@IsNull_LaagaFor = 1 AND [LaagaFor] IS NULL) OR ([Laaga" +
                "For] = @Original_LaagaFor)) AND ((@IsNull_LateDeath = 1 AND [LateDeath] IS NULL)" +
                " OR ([LateDeath] = @Original_LateDeath)) AND ((@IsNull_Crtf = 1 AND [Crtf] IS NU" +
                "LL) OR ([Crtf] = @Original_Crtf)) AND ((@IsNull_CrtfType = 1 AND [CrtfType] IS N" +
                "ULL) OR ([CrtfType] = @Original_CrtfType)) AND ((@IsNull_ForCrtf = 1 AND [ForCrt" +
                "f] IS NULL) OR ([ForCrtf] = @Original_ForCrtf)) AND ((@IsNull_ForBirth = 1 AND [" +
                "ForBirth] IS NULL) OR ([ForBirth] = @Original_ForBirth)) AND ((@IsNull_ForDeath " +
                "= 1 AND [ForDeath] IS NULL) OR ([ForDeath] = @Original_ForDeath)) AND ((@IsNull_" +
                "CardNo = 1 AND [CardNo] IS NULL) OR ([CardNo] = @Original_CardNo)) AND ((@IsNull" +
                "_Mobile = 1 AND [Mobile] IS NULL) OR ([Mobile] = @Original_Mobile)));\r\nSELECT ID" +
                ", ReceiptNo, Date, ReceivedFrom, LaagaEng, LaagaMrg, PoorFund, ZakatFund, Qabris" +
                "tanFund, GeneralFund, EducationFund, TameratiFund, NewCard, Others, AccountRelat" +
                "ion, FCardNo, Total, Orakh, FName, TypeZ, TypeG, TypeE, ZNo, GNo, ENo, LaagaFor," +
                " LateDeath, Crtf, CrtfType, ForCrtf, ForBirth, ForDeath, CardNo, (SELECT Account" +
                "Name FROM tblAccounts WHERE (ID = tblDonations.AccLaga)) AS LagaAcc, (SELECT Acc" +
                "ountName FROM tblAccounts AS tblAccounts_9 WHERE (ID = tblDonations.AccPoor)) AS" +
                " PoorAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_8 WHERE (ID = tblD" +
                "onations.AccEdu)) AS EduAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts" +
                "_7 WHERE (ID = tblDonations.AccQab)) AS QabAcc, (SELECT AccountName FROM tblAcco" +
                "unts AS tblAccounts_6 WHERE (ID = tblDonations.AccTam)) AS TamAcc, (SELECT Accou" +
                "ntName FROM tblAccounts AS tblAccounts_5 WHERE (ID = tblDonations.AccZakat)) AS " +
                "ZakatAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_4 WHERE (ID = tblD" +
                "onations.AccCard)) AS CardAcc, (SELECT AccountName FROM tblAccounts AS tblAccoun" +
                "ts_3 WHERE (ID = tblDonations.AccGen)) AS GenAcc, (SELECT AccountName FROM tblAc" +
                "counts AS tblAccounts_2 WHERE (ID = tblDonations.AccOther)) AS OtherAcc, (SELECT" +
                " AccountName FROM tblAccounts AS tblAccounts_1 WHERE (ID = tblDonations.AccCrtf)" +
                ") AS AccCrtf, Mobile FROM tblDonations WHERE (ID = @ID) ORDER BY ReceiptNo DESC";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaEng", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaMrg", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZakatFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QabristanFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducationFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TameratiFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCard", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Others", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaFor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crtf", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrtfType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForCrtf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForDeath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceiptNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LaagaEng", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaagaEng", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LaagaMrg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaagaMrg", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PoorFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PoorFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ZakatFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZakatFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QabristanFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QabristanFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeneralFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeneralFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EducationFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EducationFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TameratiFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TameratiFund", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NewCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NewCard", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Others", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Others", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AccountRelation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccountRelation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FCardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Orakh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Orakh", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TypeZ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeZ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TypeG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TypeE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ZNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ENo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ENo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LaagaFor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LaagaFor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LateDeath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LateDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crtf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crtf", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrtfType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrtfType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForCrtf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForCrtf", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForBirth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForBirth", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ForDeath", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ForDeath", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mobile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, ReceiptNo, Date, ReceivedFrom, LaagaEng, LaagaMrg, PoorFund, ZakatFund, QabristanFund, GeneralFund, EducationFund, TameratiFund, NewCard, Others, AccountRelation, FCardNo, Total, Orakh, FName, TypeZ, TypeG, TypeE, ZNo, GNo, ENo, LaagaFor, LateDeath, Crtf, CrtfType, ForCrtf, ForBirth, ForDeath,CardNo, (SELECT AccountName FROM tblAccounts WHERE (ID = tblDonations.AccLaga)) AS LagaAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_9 WHERE (ID = tblDonations.AccPoor)) AS PoorAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_8 WHERE (ID = tblDonations.AccEdu)) AS EduAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_7 WHERE (ID = tblDonations.AccQab)) AS QabAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_6 WHERE (ID = tblDonations.AccTam)) AS TamAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_5 WHERE (ID = tblDonations.AccZakat)) AS ZakatAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_4 WHERE (ID = tblDonations.AccCard)) AS CardAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_3 WHERE (ID = tblDonations.AccGen)) AS GenAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_2 WHERE (ID = tblDonations.AccOther)) AS OtherAcc, (SELECT AccountName FROM tblAccounts AS tblAccounts_1 WHERE (ID = tblDonations.AccCrtf)) AS AccCrtf, Mobile 
FROM tblDonations ORDER BY ReceiptNo DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO tblDonations
                      (ReceiptNo, Date, ReceivedFrom, LaagaEng, LaagaMrg, PoorFund, ZakatFund, QabristanFund, GeneralFund, EducationFund, TameratiFund, NewCard, 
                      Others, AccountRelation, FCardNo, Total, Orakh, FName, TypeZ, TypeG, TypeE, ZNo, GNo, ENo, AccLaga, AccPoor, AccEdu, AccQab, AccTam, AccZakat, 
                      AccCard, AccGen, AccOther, LaagaFor, LateDeath, Crtf, CrtfType, AccCrtf, ForBirth, ForDeath, ForCrtf, CardNo,Mobile)
VALUES     (@ReceiptNo,@Date,@ReceivedFrom,@LaagaEng,@LaagaMrg,@PoorFund,@ZakatFund,@QabristanFund,@GeneralFund,@EducationFund,@TameratiFund,@NewCard,@Others,@AccountRelation,@FCardNo,@Total,@Orakh,@FName,@TypeZ,@TypeG,@TypeE,@ZNo,@GNo,@ENo,@AccLaga,@AccPoor,@AccEdu,@AccQab,@AccTam,@AccZakat,@AccCard,@AccGen,@AccOther,@LaagaFor,@LateDeath,@Crtf,@CrtfType,@AccCrtf,@ForBirth,@ForDeath,@ForCrtf,@CardNo,@Mobile);      
";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedFrom", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaEng", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaMrg", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZakatFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QabristanFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducationFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TameratiFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCard", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Others", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountRelation", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeZ", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeG", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeE", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccLaga", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccLaga", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccPoor", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccPoor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccEdu", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccEdu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccQab", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccQab", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccTam", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccTam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccZakat", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccZakat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccCard", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccGen", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccGen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccOther", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccOther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaFor", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateDeath", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crtf", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrtfType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccCrtf", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccCrtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForBirth", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForDeath", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForCrtf", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM [tblDonations] WHERE [ID] = @Original_ID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"UPDATE    tblDonations
SET              ReceiptNo = @ReceiptNo, Date = @Date, ReceivedFrom = @ReceivedFrom, LaagaEng = @LaagaEng, LaagaMrg = @LaagaMrg, 
                      PoorFund = @PoorFund, ZakatFund = @ZakatFund, QabristanFund = @QabristanFund, GeneralFund = @GeneralFund, 
                      EducationFund = @EducationFund, TameratiFund = @TameratiFund, NewCard = @NewCard, Others = @Others, AccountRelation = @AccountRelation, 
                      FCardNo = @FCardNo, Total = @Total, Orakh = @Orakh, FName = @FName, TypeZ = @TypeZ, TypeG = @TypeG, TypeE = @TypeE, ZNo = @ZNo, 
                      GNo = @GNo, ENo = @ENo, AccLaga = @AccLaga, AccPoor = @AccPoor, AccEdu = @AccEdu, AccQab = @AccQab, AccTam = @AccTam, 
                      AccZakat = @AccZakat, AccCard = @AccCard, AccGen = @AccGen, AccOther = @AccOther, LaagaFor = @LaagaFor, LateDeath = @LateDeath, 
                      Crtf = @Crtf, CrtfType = @CrtfType, AccCrtf = @AccCrtf, ForBirth = @ForBirth, ForDeath = @ForDeath, ForCrtf = @ForCrtf, CardNo = @CardNo, Mobile=@Mobile
WHERE     (ID = @Original_ID)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedFrom", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaEng", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaEng", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaMrg", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaMrg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PoorFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PoorFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZakatFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ZakatFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QabristanFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "QabristanFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeneralFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "GeneralFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EducationFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "EducationFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TameratiFund", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "TameratiFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCard", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "NewCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Others", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Others", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountRelation", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "AccountRelation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeZ", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "TypeZ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeG", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "TypeG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeE", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "TypeE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ZNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "GNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ENo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccLaga", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccLaga", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccPoor", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccPoor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccEdu", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccEdu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccQab", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccQab", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccTam", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccTam", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccZakat", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccZakat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccCard", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccGen", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccGen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccOther", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccOther", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LaagaFor", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LaagaFor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateDeath", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "LateDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crtf", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Crtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrtfType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CrtfType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccCrtf", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AccCrtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForBirth", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ForBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForDeath", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ForDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ForCrtf", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ForCrtf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "CardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.VarChar, 12, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_DonationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_DonationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_SEL_DonationDataTable dataTable = new ComDataSet.usp_SEL_DonationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.usp_SEL_DonationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "usp_SEL_Donation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Original_Date, 
                    string Original_ReceivedFrom, 
                    global::System.Nullable<decimal> Original_LaagaEng, 
                    global::System.Nullable<decimal> Original_LaagaMrg, 
                    global::System.Nullable<decimal> Original_PoorFund, 
                    global::System.Nullable<decimal> Original_ZakatFund, 
                    global::System.Nullable<decimal> Original_QabristanFund, 
                    global::System.Nullable<decimal> Original_GeneralFund, 
                    global::System.Nullable<decimal> Original_EducationFund, 
                    global::System.Nullable<decimal> Original_TameratiFund, 
                    global::System.Nullable<decimal> Original_NewCard, 
                    global::System.Nullable<decimal> Original_Others, 
                    global::System.Nullable<bool> Original_AccountRelation, 
                    string Original_FCardNo, 
                    global::System.Nullable<decimal> Original_Total, 
                    string Original_Orakh, 
                    string Original_FName, 
                    global::System.Nullable<bool> Original_TypeZ, 
                    global::System.Nullable<bool> Original_TypeG, 
                    global::System.Nullable<bool> Original_TypeE, 
                    string Original_ZNo, 
                    string Original_GNo, 
                    string Original_ENo, 
                    string Original_LaagaFor, 
                    global::System.Nullable<decimal> Original_LateDeath, 
                    global::System.Nullable<decimal> Original_Crtf, 
                    string Original_CrtfType, 
                    string Original_ForCrtf, 
                    string Original_ForBirth, 
                    string Original_ForDeath, 
                    string Original_CardNo, 
                    string Original_Mobile) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_ReceiptNo == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ReceiptNo));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedFrom == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ReceivedFrom));
            }
            if ((Original_LaagaEng.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_LaagaEng.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_LaagaMrg.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_LaagaMrg.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_PoorFund.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_PoorFund.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ZakatFund.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_ZakatFund.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_QabristanFund.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_QabristanFund.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_GeneralFund.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_GeneralFund.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_EducationFund.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_EducationFund.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_TameratiFund.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_TameratiFund.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_NewCard.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_NewCard.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Others.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_Others.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_AccountRelation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_AccountRelation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_FCardNo == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_FCardNo));
            }
            if ((Original_Total.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_Total.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Orakh == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_Orakh));
            }
            if ((Original_FName == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_FName));
            }
            if ((Original_TypeZ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_TypeZ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_TypeG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_TypeG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_TypeE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_TypeE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_ZNo == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_ZNo));
            }
            if ((Original_GNo == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_GNo));
            }
            if ((Original_ENo == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_ENo));
            }
            if ((Original_LaagaFor == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_LaagaFor));
            }
            if ((Original_LateDeath.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_LateDeath.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Crtf.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_Crtf.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_CrtfType == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_CrtfType));
            }
            if ((Original_ForCrtf == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_ForCrtf));
            }
            if ((Original_ForBirth == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_ForBirth));
            }
            if ((Original_ForDeath == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_ForDeath));
            }
            if ((Original_CardNo == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_CardNo));
            }
            if ((Original_Mobile == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_Mobile));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string ReceivedFrom, 
                    global::System.Nullable<decimal> LaagaEng, 
                    global::System.Nullable<decimal> LaagaMrg, 
                    global::System.Nullable<decimal> PoorFund, 
                    global::System.Nullable<decimal> ZakatFund, 
                    global::System.Nullable<decimal> QabristanFund, 
                    global::System.Nullable<decimal> GeneralFund, 
                    global::System.Nullable<decimal> EducationFund, 
                    global::System.Nullable<decimal> TameratiFund, 
                    global::System.Nullable<decimal> NewCard, 
                    global::System.Nullable<decimal> Others, 
                    global::System.Nullable<bool> AccountRelation, 
                    string FCardNo, 
                    global::System.Nullable<decimal> Total, 
                    string Orakh, 
                    string FName, 
                    global::System.Nullable<bool> TypeZ, 
                    global::System.Nullable<bool> TypeG, 
                    global::System.Nullable<bool> TypeE, 
                    string ZNo, 
                    string GNo, 
                    string ENo, 
                    string LaagaFor, 
                    global::System.Nullable<decimal> LateDeath, 
                    global::System.Nullable<decimal> Crtf, 
                    string CrtfType, 
                    string ForCrtf, 
                    string ForBirth, 
                    string ForDeath, 
                    string CardNo, 
                    string Mobile) {
            if ((ReceiptNo == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ReceivedFrom == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ReceivedFrom));
            }
            if ((LaagaEng.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(LaagaEng.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LaagaMrg.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(LaagaMrg.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PoorFund.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PoorFund.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ZakatFund.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ZakatFund.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((QabristanFund.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(QabristanFund.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((GeneralFund.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(GeneralFund.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((EducationFund.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EducationFund.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((TameratiFund.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(TameratiFund.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NewCard.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(NewCard.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Others.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Others.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AccountRelation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(AccountRelation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(FCardNo));
            }
            if ((Total.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(Total.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Orakh == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Orakh));
            }
            if ((FName == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(FName));
            }
            if ((TypeZ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(TypeZ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((TypeG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(TypeG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((TypeE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(TypeE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ZNo == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(ZNo));
            }
            if ((GNo == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(GNo));
            }
            if ((ENo == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ENo));
            }
            if ((LaagaFor == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(LaagaFor));
            }
            if ((LateDeath.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(LateDeath.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Crtf.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(Crtf.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CrtfType == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(CrtfType));
            }
            if ((ForCrtf == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(ForCrtf));
            }
            if ((ForBirth == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(ForBirth));
            }
            if ((ForDeath == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(ForDeath));
            }
            if ((CardNo == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(CardNo));
            }
            if ((Mobile == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Mobile));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string ReceivedFrom, 
                    global::System.Nullable<decimal> LaagaEng, 
                    global::System.Nullable<decimal> LaagaMrg, 
                    global::System.Nullable<decimal> PoorFund, 
                    global::System.Nullable<decimal> ZakatFund, 
                    global::System.Nullable<decimal> QabristanFund, 
                    global::System.Nullable<decimal> GeneralFund, 
                    global::System.Nullable<decimal> EducationFund, 
                    global::System.Nullable<decimal> TameratiFund, 
                    global::System.Nullable<decimal> NewCard, 
                    global::System.Nullable<decimal> Others, 
                    global::System.Nullable<bool> AccountRelation, 
                    string FCardNo, 
                    global::System.Nullable<decimal> Total, 
                    string Orakh, 
                    string FName, 
                    global::System.Nullable<bool> TypeZ, 
                    global::System.Nullable<bool> TypeG, 
                    global::System.Nullable<bool> TypeE, 
                    string ZNo, 
                    string GNo, 
                    string ENo, 
                    string LaagaFor, 
                    global::System.Nullable<decimal> LateDeath, 
                    global::System.Nullable<decimal> Crtf, 
                    string CrtfType, 
                    string ForCrtf, 
                    string ForBirth, 
                    string ForDeath, 
                    string CardNo, 
                    string Mobile, 
                    int Original_ID, 
                    string Original_ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Original_Date, 
                    string Original_ReceivedFrom, 
                    global::System.Nullable<decimal> Original_LaagaEng, 
                    global::System.Nullable<decimal> Original_LaagaMrg, 
                    global::System.Nullable<decimal> Original_PoorFund, 
                    global::System.Nullable<decimal> Original_ZakatFund, 
                    global::System.Nullable<decimal> Original_QabristanFund, 
                    global::System.Nullable<decimal> Original_GeneralFund, 
                    global::System.Nullable<decimal> Original_EducationFund, 
                    global::System.Nullable<decimal> Original_TameratiFund, 
                    global::System.Nullable<decimal> Original_NewCard, 
                    global::System.Nullable<decimal> Original_Others, 
                    global::System.Nullable<bool> Original_AccountRelation, 
                    string Original_FCardNo, 
                    global::System.Nullable<decimal> Original_Total, 
                    string Original_Orakh, 
                    string Original_FName, 
                    global::System.Nullable<bool> Original_TypeZ, 
                    global::System.Nullable<bool> Original_TypeG, 
                    global::System.Nullable<bool> Original_TypeE, 
                    string Original_ZNo, 
                    string Original_GNo, 
                    string Original_ENo, 
                    string Original_LaagaFor, 
                    global::System.Nullable<decimal> Original_LateDeath, 
                    global::System.Nullable<decimal> Original_Crtf, 
                    string Original_CrtfType, 
                    string Original_ForCrtf, 
                    string Original_ForBirth, 
                    string Original_ForDeath, 
                    string Original_CardNo, 
                    string Original_Mobile, 
                    int ID) {
            if ((ReceiptNo == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ReceivedFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ReceivedFrom));
            }
            if ((LaagaEng.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(LaagaEng.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LaagaMrg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(LaagaMrg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PoorFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PoorFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ZakatFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ZakatFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((QabristanFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(QabristanFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((GeneralFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(GeneralFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((EducationFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EducationFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((TameratiFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(TameratiFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NewCard.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(NewCard.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Others.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Others.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AccountRelation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(AccountRelation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(FCardNo));
            }
            if ((Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Orakh == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Orakh));
            }
            if ((FName == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(FName));
            }
            if ((TypeZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(TypeZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((TypeG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(TypeG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((TypeE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(TypeE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ZNo == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(ZNo));
            }
            if ((GNo == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(GNo));
            }
            if ((ENo == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(ENo));
            }
            if ((LaagaFor == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(LaagaFor));
            }
            if ((LateDeath.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(LateDeath.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Crtf.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Crtf.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CrtfType == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(CrtfType));
            }
            if ((ForCrtf == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(ForCrtf));
            }
            if ((ForBirth == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(ForBirth));
            }
            if ((ForDeath == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(ForDeath));
            }
            if ((CardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(CardNo));
            }
            if ((Mobile == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Mobile));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_ID));
            if ((Original_ReceiptNo == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_ReceiptNo));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_ReceivedFrom));
            }
            if ((Original_LaagaEng.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_LaagaEng.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_LaagaMrg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_LaagaMrg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_PoorFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_PoorFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_ZakatFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_ZakatFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_QabristanFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(Original_QabristanFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_GeneralFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(Original_GeneralFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_EducationFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Original_EducationFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_TameratiFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(Original_TameratiFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_NewCard.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(Original_NewCard.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_Others.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Original_Others.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_AccountRelation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_AccountRelation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_FCardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_FCardNo));
            }
            if ((Original_Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(Original_Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_Orakh == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_Orakh));
            }
            if ((Original_FName == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_FName));
            }
            if ((Original_TypeZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_TypeZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_TypeG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_TypeG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_TypeE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_TypeE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_ZNo == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_ZNo));
            }
            if ((Original_GNo == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_GNo));
            }
            if ((Original_ENo == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_ENo));
            }
            if ((Original_LaagaFor == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_LaagaFor));
            }
            if ((Original_LateDeath.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_LateDeath.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_Crtf.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_Crtf.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_CrtfType == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_CrtfType));
            }
            if ((Original_ForCrtf == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_ForCrtf));
            }
            if ((Original_ForBirth == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_ForBirth));
            }
            if ((Original_ForDeath == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_ForDeath));
            }
            if ((Original_CardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_CardNo));
            }
            if ((Original_Mobile == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_Mobile));
            }
            this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string ReceivedFrom, 
                    global::System.Nullable<decimal> LaagaEng, 
                    global::System.Nullable<decimal> LaagaMrg, 
                    global::System.Nullable<decimal> PoorFund, 
                    global::System.Nullable<decimal> ZakatFund, 
                    global::System.Nullable<decimal> QabristanFund, 
                    global::System.Nullable<decimal> GeneralFund, 
                    global::System.Nullable<decimal> EducationFund, 
                    global::System.Nullable<decimal> TameratiFund, 
                    global::System.Nullable<decimal> NewCard, 
                    global::System.Nullable<decimal> Others, 
                    global::System.Nullable<bool> AccountRelation, 
                    string FCardNo, 
                    global::System.Nullable<decimal> Total, 
                    string Orakh, 
                    string FName, 
                    global::System.Nullable<bool> TypeZ, 
                    global::System.Nullable<bool> TypeG, 
                    global::System.Nullable<bool> TypeE, 
                    string ZNo, 
                    string GNo, 
                    string ENo, 
                    string LaagaFor, 
                    global::System.Nullable<decimal> LateDeath, 
                    global::System.Nullable<decimal> Crtf, 
                    string CrtfType, 
                    string ForCrtf, 
                    string ForBirth, 
                    string ForDeath, 
                    string CardNo, 
                    string Mobile, 
                    int Original_ID, 
                    string Original_ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Original_Date, 
                    string Original_ReceivedFrom, 
                    global::System.Nullable<decimal> Original_LaagaEng, 
                    global::System.Nullable<decimal> Original_LaagaMrg, 
                    global::System.Nullable<decimal> Original_PoorFund, 
                    global::System.Nullable<decimal> Original_ZakatFund, 
                    global::System.Nullable<decimal> Original_QabristanFund, 
                    global::System.Nullable<decimal> Original_GeneralFund, 
                    global::System.Nullable<decimal> Original_EducationFund, 
                    global::System.Nullable<decimal> Original_TameratiFund, 
                    global::System.Nullable<decimal> Original_NewCard, 
                    global::System.Nullable<decimal> Original_Others, 
                    global::System.Nullable<bool> Original_AccountRelation, 
                    string Original_FCardNo, 
                    global::System.Nullable<decimal> Original_Total, 
                    string Original_Orakh, 
                    string Original_FName, 
                    global::System.Nullable<bool> Original_TypeZ, 
                    global::System.Nullable<bool> Original_TypeG, 
                    global::System.Nullable<bool> Original_TypeE, 
                    string Original_ZNo, 
                    string Original_GNo, 
                    string Original_ENo, 
                    string Original_LaagaFor, 
                    global::System.Nullable<decimal> Original_LateDeath, 
                    global::System.Nullable<decimal> Original_Crtf, 
                    string Original_CrtfType, 
                    string Original_ForCrtf, 
                    string Original_ForBirth, 
                    string Original_ForDeath, 
                    string Original_CardNo, 
                    string Original_Mobile) {
            return this.Update(ReceiptNo, Date, ReceivedFrom, LaagaEng, LaagaMrg, PoorFund, ZakatFund, QabristanFund, GeneralFund, EducationFund, TameratiFund, NewCard, Others, AccountRelation, FCardNo, Total, Orakh, FName, TypeZ, TypeG, TypeE, ZNo, GNo, ENo, LaagaFor, LateDeath, Crtf, CrtfType, ForCrtf, ForBirth, ForDeath, CardNo, Mobile, Original_ID, Original_ReceiptNo, Original_Date, Original_ReceivedFrom, Original_LaagaEng, Original_LaagaMrg, Original_PoorFund, Original_ZakatFund, Original_QabristanFund, Original_GeneralFund, Original_EducationFund, Original_TameratiFund, Original_NewCard, Original_Others, Original_AccountRelation, Original_FCardNo, Original_Total, Original_Orakh, Original_FName, Original_TypeZ, Original_TypeG, Original_TypeE, Original_ZNo, Original_GNo, Original_ENo, Original_LaagaFor, Original_LateDeath, Original_Crtf, Original_CrtfType, Original_ForCrtf, Original_ForBirth, Original_ForDeath, Original_CardNo, Original_Mobile, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int ADD(
                    string ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string ReceivedFrom, 
                    global::System.Nullable<decimal> LaagaEng, 
                    global::System.Nullable<decimal> LaagaMrg, 
                    global::System.Nullable<decimal> PoorFund, 
                    global::System.Nullable<decimal> ZakatFund, 
                    global::System.Nullable<decimal> QabristanFund, 
                    global::System.Nullable<decimal> GeneralFund, 
                    global::System.Nullable<decimal> EducationFund, 
                    global::System.Nullable<decimal> TameratiFund, 
                    global::System.Nullable<decimal> NewCard, 
                    global::System.Nullable<decimal> Others, 
                    global::System.Nullable<bool> AccountRelation, 
                    string FCardNo, 
                    global::System.Nullable<decimal> Total, 
                    string Orakh, 
                    string FName, 
                    global::System.Nullable<bool> TypeZ, 
                    global::System.Nullable<bool> TypeG, 
                    global::System.Nullable<bool> TypeE, 
                    string ZNo, 
                    string GNo, 
                    string ENo, 
                    global::System.Nullable<int> AccLaga, 
                    global::System.Nullable<int> AccPoor, 
                    global::System.Nullable<int> AccEdu, 
                    global::System.Nullable<int> AccQab, 
                    global::System.Nullable<int> AccTam, 
                    global::System.Nullable<int> AccZakat, 
                    global::System.Nullable<int> AccCard, 
                    global::System.Nullable<int> AccGen, 
                    global::System.Nullable<int> AccOther, 
                    string LaagaFor, 
                    global::System.Nullable<decimal> LateDeath, 
                    global::System.Nullable<decimal> Crtf, 
                    string CrtfType, 
                    global::System.Nullable<int> AccCrtf, 
                    string ForBirth, 
                    string ForDeath, 
                    string ForCrtf, 
                    string CardNo, 
                    string Mobile) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ReceiptNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ReceivedFrom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(ReceivedFrom));
            }
            if ((LaagaEng.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(LaagaEng.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LaagaMrg.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(LaagaMrg.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PoorFund.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(PoorFund.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ZakatFund.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(ZakatFund.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((QabristanFund.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(QabristanFund.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((GeneralFund.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(GeneralFund.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((EducationFund.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(EducationFund.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((TameratiFund.HasValue == true)) {
                command.Parameters[10].Value = ((decimal)(TameratiFund.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NewCard.HasValue == true)) {
                command.Parameters[11].Value = ((decimal)(NewCard.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Others.HasValue == true)) {
                command.Parameters[12].Value = ((decimal)(Others.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AccountRelation.HasValue == true)) {
                command.Parameters[13].Value = ((bool)(AccountRelation.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(FCardNo));
            }
            if ((Total.HasValue == true)) {
                command.Parameters[15].Value = ((decimal)(Total.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Orakh == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Orakh));
            }
            if ((FName == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(FName));
            }
            if ((TypeZ.HasValue == true)) {
                command.Parameters[18].Value = ((bool)(TypeZ.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((TypeG.HasValue == true)) {
                command.Parameters[19].Value = ((bool)(TypeG.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((TypeE.HasValue == true)) {
                command.Parameters[20].Value = ((bool)(TypeE.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ZNo == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(ZNo));
            }
            if ((GNo == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(GNo));
            }
            if ((ENo == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(ENo));
            }
            if ((AccLaga.HasValue == true)) {
                command.Parameters[24].Value = ((int)(AccLaga.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AccPoor.HasValue == true)) {
                command.Parameters[25].Value = ((int)(AccPoor.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((AccEdu.HasValue == true)) {
                command.Parameters[26].Value = ((int)(AccEdu.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((AccQab.HasValue == true)) {
                command.Parameters[27].Value = ((int)(AccQab.Value));
            }
            else {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((AccTam.HasValue == true)) {
                command.Parameters[28].Value = ((int)(AccTam.Value));
            }
            else {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((AccZakat.HasValue == true)) {
                command.Parameters[29].Value = ((int)(AccZakat.Value));
            }
            else {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((AccCard.HasValue == true)) {
                command.Parameters[30].Value = ((int)(AccCard.Value));
            }
            else {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((AccGen.HasValue == true)) {
                command.Parameters[31].Value = ((int)(AccGen.Value));
            }
            else {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((AccOther.HasValue == true)) {
                command.Parameters[32].Value = ((int)(AccOther.Value));
            }
            else {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((LaagaFor == null)) {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[33].Value = ((string)(LaagaFor));
            }
            if ((LateDeath.HasValue == true)) {
                command.Parameters[34].Value = ((decimal)(LateDeath.Value));
            }
            else {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Crtf.HasValue == true)) {
                command.Parameters[35].Value = ((decimal)(Crtf.Value));
            }
            else {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CrtfType == null)) {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[36].Value = ((string)(CrtfType));
            }
            if ((AccCrtf.HasValue == true)) {
                command.Parameters[37].Value = ((int)(AccCrtf.Value));
            }
            else {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ForBirth == null)) {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[38].Value = ((string)(ForBirth));
            }
            if ((ForDeath == null)) {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[39].Value = ((string)(ForDeath));
            }
            if ((ForCrtf == null)) {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[40].Value = ((string)(ForCrtf));
            }
            if ((CardNo == null)) {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[41].Value = ((string)(CardNo));
            }
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                command.Parameters[42].Value = ((string)(Mobile));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DELETE(int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UPDATE(
                    string ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string ReceivedFrom, 
                    global::System.Nullable<decimal> LaagaEng, 
                    global::System.Nullable<decimal> LaagaMrg, 
                    global::System.Nullable<decimal> PoorFund, 
                    global::System.Nullable<decimal> ZakatFund, 
                    global::System.Nullable<decimal> QabristanFund, 
                    global::System.Nullable<decimal> GeneralFund, 
                    global::System.Nullable<decimal> EducationFund, 
                    global::System.Nullable<decimal> TameratiFund, 
                    global::System.Nullable<decimal> NewCard, 
                    global::System.Nullable<decimal> Others, 
                    global::System.Nullable<bool> AccountRelation, 
                    string FCardNo, 
                    global::System.Nullable<decimal> Total, 
                    string Orakh, 
                    string FName, 
                    global::System.Nullable<bool> TypeZ, 
                    global::System.Nullable<bool> TypeG, 
                    global::System.Nullable<bool> TypeE, 
                    string ZNo, 
                    string GNo, 
                    string ENo, 
                    global::System.Nullable<int> AccLaga, 
                    global::System.Nullable<int> AccPoor, 
                    global::System.Nullable<int> AccEdu, 
                    global::System.Nullable<int> AccQab, 
                    global::System.Nullable<int> AccTam, 
                    global::System.Nullable<int> AccZakat, 
                    global::System.Nullable<int> AccCard, 
                    global::System.Nullable<int> AccGen, 
                    global::System.Nullable<int> AccOther, 
                    string LaagaFor, 
                    global::System.Nullable<decimal> LateDeath, 
                    global::System.Nullable<decimal> Crtf, 
                    string CrtfType, 
                    global::System.Nullable<int> AccCrtf, 
                    string ForBirth, 
                    string ForDeath, 
                    string ForCrtf, 
                    string CardNo, 
                    string Mobile, 
                    int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((ReceiptNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ReceivedFrom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(ReceivedFrom));
            }
            if ((LaagaEng.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(LaagaEng.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LaagaMrg.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(LaagaMrg.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PoorFund.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(PoorFund.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ZakatFund.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(ZakatFund.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((QabristanFund.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(QabristanFund.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((GeneralFund.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(GeneralFund.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((EducationFund.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(EducationFund.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((TameratiFund.HasValue == true)) {
                command.Parameters[10].Value = ((decimal)(TameratiFund.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NewCard.HasValue == true)) {
                command.Parameters[11].Value = ((decimal)(NewCard.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Others.HasValue == true)) {
                command.Parameters[12].Value = ((decimal)(Others.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AccountRelation.HasValue == true)) {
                command.Parameters[13].Value = ((bool)(AccountRelation.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(FCardNo));
            }
            if ((Total.HasValue == true)) {
                command.Parameters[15].Value = ((decimal)(Total.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Orakh == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Orakh));
            }
            if ((FName == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(FName));
            }
            if ((TypeZ.HasValue == true)) {
                command.Parameters[18].Value = ((bool)(TypeZ.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((TypeG.HasValue == true)) {
                command.Parameters[19].Value = ((bool)(TypeG.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((TypeE.HasValue == true)) {
                command.Parameters[20].Value = ((bool)(TypeE.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ZNo == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(ZNo));
            }
            if ((GNo == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(GNo));
            }
            if ((ENo == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(ENo));
            }
            if ((AccLaga.HasValue == true)) {
                command.Parameters[24].Value = ((int)(AccLaga.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AccPoor.HasValue == true)) {
                command.Parameters[25].Value = ((int)(AccPoor.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((AccEdu.HasValue == true)) {
                command.Parameters[26].Value = ((int)(AccEdu.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((AccQab.HasValue == true)) {
                command.Parameters[27].Value = ((int)(AccQab.Value));
            }
            else {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((AccTam.HasValue == true)) {
                command.Parameters[28].Value = ((int)(AccTam.Value));
            }
            else {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((AccZakat.HasValue == true)) {
                command.Parameters[29].Value = ((int)(AccZakat.Value));
            }
            else {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((AccCard.HasValue == true)) {
                command.Parameters[30].Value = ((int)(AccCard.Value));
            }
            else {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((AccGen.HasValue == true)) {
                command.Parameters[31].Value = ((int)(AccGen.Value));
            }
            else {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((AccOther.HasValue == true)) {
                command.Parameters[32].Value = ((int)(AccOther.Value));
            }
            else {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((LaagaFor == null)) {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[33].Value = ((string)(LaagaFor));
            }
            if ((LateDeath.HasValue == true)) {
                command.Parameters[34].Value = ((decimal)(LateDeath.Value));
            }
            else {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Crtf.HasValue == true)) {
                command.Parameters[35].Value = ((decimal)(Crtf.Value));
            }
            else {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CrtfType == null)) {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[36].Value = ((string)(CrtfType));
            }
            if ((AccCrtf.HasValue == true)) {
                command.Parameters[37].Value = ((int)(AccCrtf.Value));
            }
            else {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ForBirth == null)) {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[38].Value = ((string)(ForBirth));
            }
            if ((ForDeath == null)) {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[39].Value = ((string)(ForDeath));
            }
            if ((ForCrtf == null)) {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[40].Value = ((string)(ForCrtf));
            }
            if ((CardNo == null)) {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[41].Value = ((string)(CardNo));
            }
            if ((Mobile == null)) {
                throw new global::System.ArgumentNullException("Mobile");
            }
            else {
                command.Parameters[42].Value = ((string)(Mobile));
            }
            command.Parameters[43].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblUserGroupTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblUserGroupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblUserGroup";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("GroupName", "GroupName");
            tableMapping.ColumnMappings.Add("Active", "Active");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblUserGroup] WHERE (([ID] = @Original_ID) AND ((@IsNull_GroupName =" +
                " 1 AND [GroupName] IS NULL) OR ([GroupName] = @Original_GroupName)) AND ((@IsNul" +
                "l_Active = 1 AND [Active] IS NULL) OR ([Active] = @Original_Active)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GroupName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GroupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblUserGroup] ([GroupName], [Active]) VALUES (@GroupName, @Active);\r" +
                "\nSELECT ID, GroupName, Active FROM tblUserGroup WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GroupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblUserGroup] SET [GroupName] = @GroupName, [Active] = @Active WHERE (([ID] = @Original_ID) AND ((@IsNull_GroupName = 1 AND [GroupName] IS NULL) OR ([GroupName] = @Original_GroupName)) AND ((@IsNull_Active = 1 AND [Active] IS NULL) OR ([Active] = @Original_Active)));
SELECT ID, GroupName, Active FROM tblUserGroup WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GroupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GroupName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GroupName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, GroupName, Active\r\nFROM         tblUserGroup\r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO [tblUserGroup] ([GroupName], [Active]) VALUES (@GroupName, @Active)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GroupName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM [tblUserGroup] WHERE (([ID] = @Original_ID))";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     ID, GroupName, Active\r\nFROM         tblUserGroup\r\nWHERE     (Active = " +
                "1)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE [tblUserGroup] SET [GroupName] = @GroupName, [Active] = @Active WHERE (([I" +
                "D] = @Original_ID))";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GroupName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "GroupName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblUserGroupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblUserGroupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblUserGroupDataTable dataTable = new ComDataSet.tblUserGroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int Fill_Permissions(ComDataSet.tblUserGroupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.tblUserGroupDataTable GetDataBy3() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            ComDataSet.tblUserGroupDataTable dataTable = new ComDataSet.tblUserGroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.tblUserGroupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblUserGroup");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_GroupName, global::System.Nullable<bool> Original_Active) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_GroupName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GroupName));
            }
            if ((Original_Active.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Active.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string GroupName, global::System.Nullable<bool> Active) {
            if ((GroupName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(GroupName));
            }
            if ((Active.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(Active.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string GroupName, global::System.Nullable<bool> Active, int Original_ID, string Original_GroupName, global::System.Nullable<bool> Original_Active, int ID) {
            if ((GroupName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(GroupName));
            }
            if ((Active.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Active.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            if ((Original_GroupName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_GroupName));
            }
            if ((Original_Active.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(Original_Active.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string GroupName, global::System.Nullable<bool> Active, int Original_ID, string Original_GroupName, global::System.Nullable<bool> Original_Active) {
            return this.Update(GroupName, Active, Original_ID, Original_GroupName, Original_Active, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int AddGroup(string GroupName, global::System.Nullable<bool> Active) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((GroupName == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(GroupName));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteGroup(int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateGroup(string GroupName, global::System.Nullable<bool> Active, int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((GroupName == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(GroupName));
            }
            if ((Active.HasValue == true)) {
                command.Parameters[1].Value = ((bool)(Active.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            command.Parameters[2].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblHelpTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblHelpTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblHelp";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("HeadofFamily", "HeadofFamily");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("ReceiveDate", "ReceiveDate");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("CompleteDate", "CompleteDate");
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("Aid", "Aid");
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     tblHelp.ID, tblHelp.FCardNo, tblHelp.HeadofFamily, tblHelp.FName, tblHelp.Orakh, tblHelp.ReceiveDate, tblHelp.Status, tblHelp.Amount, 
                      tblHelp.CompleteDate, tblHelp.SerialNo, tblHelp.Remarks, tblAids.Aid, tblFamilyMember.MemberName
, tblHelp.AidFrom FROM         tblHelp INNER JOIN
                      tblAids ON tblHelp.HelpType = tblAids.ID INNER JOIN
                      tblFamilyMember ON tblHelp.Name = tblFamilyMember.FamilyMemberID Order by tblHelp.SerialNo Desc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO tblHelp
                         (FCardNo, HeadofFamily, FName, Orakh, Name, HelpType, ReceiveDate, Status, Amount, CompleteDate, SerialNo, Remarks, AidFrom )
VALUES        (@FCardNo,@HeadofFamily,@FName,@Orakh,@Name,@HelpType,@ReceiveDate,@Status,@Amount,@CompleteDate,@SerialNo,@Remarks, @AidFrom)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeadofFamily", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "HeadofFamily", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HelpType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "HelpType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompleteDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "CompleteDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "SerialNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AidFrom", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "AidFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM tblHelp\r\nWHERE     (SerialNo = @Serial)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Serial", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "SerialNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "DELETE FROM [tblHelp] WHERE (([ID] = @Original_ID))";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"UPDATE [tblHelp] SET  [FCardNo] = @FCardNo, [HeadofFamily] = @HeadofFamily, [FName] = @FName, [Orakh] = @Orakh, [Name] = @Name, [HelpType] = @HelpType, [ReceiveDate] = @ReceiveDate, [Status] = @Status, [Amount] = @Amount, [CompleteDate] = @CompleteDate , SerialNo= @SerialNo,Remarks = @Remarks, AidFrom = @AidFrom WHERE (([ID] = @Original_ID))";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeadofFamily", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "HeadofFamily", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HelpType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "HelpType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompleteDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "CompleteDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "SerialNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.VarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AidFrom", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "AidFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblHelpDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblHelpDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblHelpDataTable dataTable = new ComDataSet.tblHelpDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int AddHelp(string FCardNo, string HeadofFamily, string FName, string Orakh, global::System.Nullable<int> Name, global::System.Nullable<int> HelpType, global::System.Nullable<global::System.DateTime> ReceiveDate, string Status, global::System.Nullable<decimal> Amount, global::System.Nullable<global::System.DateTime> CompleteDate, string SerialNo, string Remarks, string AidFrom) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((FCardNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((HeadofFamily == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(HeadofFamily));
            }
            if ((FName == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FName));
            }
            if ((Orakh == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Orakh));
            }
            if ((Name.HasValue == true)) {
                command.Parameters[4].Value = ((int)(Name.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HelpType.HasValue == true)) {
                command.Parameters[5].Value = ((int)(HelpType.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ReceiveDate.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(ReceiveDate.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Status == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Status));
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CompleteDate.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(CompleteDate.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SerialNo == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(SerialNo));
            }
            if ((Remarks == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Remarks));
            }
            if ((AidFrom == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(AidFrom));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int Delete_Serial(string Serial) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Serial == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Serial));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteHelp(int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateHelp(string FCardNo, string HeadofFamily, string FName, string Orakh, global::System.Nullable<int> Name, global::System.Nullable<int> HelpType, global::System.Nullable<global::System.DateTime> ReceiveDate, string Status, global::System.Nullable<decimal> Amount, global::System.Nullable<global::System.DateTime> CompleteDate, string SerialNo, string Remarks, string AidFrom, int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((FCardNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((HeadofFamily == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(HeadofFamily));
            }
            if ((FName == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FName));
            }
            if ((Orakh == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Orakh));
            }
            if ((Name.HasValue == true)) {
                command.Parameters[4].Value = ((int)(Name.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HelpType.HasValue == true)) {
                command.Parameters[5].Value = ((int)(HelpType.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ReceiveDate.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(ReceiveDate.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Status == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Status));
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CompleteDate.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(CompleteDate.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SerialNo == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(SerialNo));
            }
            if ((Remarks == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Remarks));
            }
            if ((AidFrom == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(AidFrom));
            }
            command.Parameters[13].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblDailyTransactionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblDailyTransactionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblDailyTransactions";
            tableMapping.ColumnMappings.Add("DocumentNo", "DocumentNo");
            tableMapping.ColumnMappings.Add("Voucher", "Voucher");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Narration", "Narration");
            tableMapping.ColumnMappings.Add("Debit", "Debit");
            tableMapping.ColumnMappings.Add("Credit", "Credit");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_RPT_DailyTransactions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblDailyTransactionsDataTable dataTable, global::System.Nullable<global::System.DateTime> Date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblDailyTransactionsDataTable GetData(global::System.Nullable<global::System.DateTime> Date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ComDataSet.tblDailyTransactionsDataTable dataTable = new ComDataSet.tblDailyTransactionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblAdvance1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblAdvance1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblAdvance1";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("RecFrom", "RecFrom");
            tableMapping.ColumnMappings.Add("Persons", "Persons");
            tableMapping.ColumnMappings.Add("PerPerson", "PerPerson");
            tableMapping.ColumnMappings.Add("AdvPercent", "AdvPercent");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblAdvance] WHERE (([ID] = @Original_ID) AND ((@IsNull_FCardNo = 1 AND [FCardNo] IS NULL) OR ([FCardNo] = @Original_FCardNo)) AND ((@IsNull_RecFrom = 1 AND [RecFrom] IS NULL) OR ([RecFrom] = @Original_RecFrom)) AND ((@IsNull_Persons = 1 AND [Persons] IS NULL) OR ([Persons] = @Original_Persons)) AND ((@IsNull_PerPerson = 1 AND [PerPerson] IS NULL) OR ([PerPerson] = @Original_PerPerson)) AND ((@IsNull_AdvPercent = 1 AND [AdvPercent] IS NULL) OR ([AdvPercent] = @Original_AdvPercent)) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)) AND ((@IsNull_ReceiptNo = 1 AND [ReceiptNo] IS NULL) OR ([ReceiptNo] = @Original_ReceiptNo)) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FCardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Persons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Persons", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PerPerson", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PerPerson", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AdvPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AdvPercent", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Amount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceiptNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblAdvance] ([FCardNo], [RecFrom], [Persons], [PerPerson], [AdvPercent], [Amount], [ReceiptNo], [Date]) VALUES (@FCardNo, @RecFrom, @Persons, @PerPerson, @AdvPercent, @Amount, @ReceiptNo, @Date);
SELECT ID, FCardNo, RecFrom, Persons, PerPerson, AdvPercent, Amount, ReceiptNo, Date FROM tblAdvance WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persons", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerPerson", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvPercent", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblAdvance] SET [FCardNo] = @FCardNo, [RecFrom] = @RecFrom, [Persons] = @Persons, [PerPerson] = @PerPerson, [AdvPercent] = @AdvPercent, [Amount] = @Amount, [ReceiptNo] = @ReceiptNo, [Date] = @Date WHERE (([ID] = @Original_ID) AND ((@IsNull_FCardNo = 1 AND [FCardNo] IS NULL) OR ([FCardNo] = @Original_FCardNo)) AND ((@IsNull_RecFrom = 1 AND [RecFrom] IS NULL) OR ([RecFrom] = @Original_RecFrom)) AND ((@IsNull_Persons = 1 AND [Persons] IS NULL) OR ([Persons] = @Original_Persons)) AND ((@IsNull_PerPerson = 1 AND [PerPerson] IS NULL) OR ([PerPerson] = @Original_PerPerson)) AND ((@IsNull_AdvPercent = 1 AND [AdvPercent] IS NULL) OR ([AdvPercent] = @Original_AdvPercent)) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)) AND ((@IsNull_ReceiptNo = 1 AND [ReceiptNo] IS NULL) OR ([ReceiptNo] = @Original_ReceiptNo)) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)));
SELECT ID, FCardNo, RecFrom, Persons, PerPerson, AdvPercent, Amount, ReceiptNo, Date FROM tblAdvance WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persons", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerPerson", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvPercent", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FCardNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FCardNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RecFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RecFrom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Persons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Persons", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PerPerson", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PerPerson", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AdvPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AdvPercent", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Amount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Amount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceiptNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceiptNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID, FCardNo, RecFrom, Persons, PerPerson, AdvPercent, Amount, Recei" +
                "ptNo, Date\r\nFROM            tblAdvance";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "INSERT INTO tblAdvance\r\n                         (FCardNo, RecFrom, Persons, PerP" +
                "erson, AdvPercent, Amount, ReceiptNo, Date)\r\nVALUES        (@FCardNo,@RecFrom,@P" +
                "ersons,@PerPerson,@AdvPercent,@Amount,@ReceiptNo,@Date); \r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecFrom", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persons", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerPerson", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvPercent", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM [tblAdvance] WHERE (([ID] = @Original_ID))";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"UPDATE       tblAdvance
SET                FCardNo = @FCardNo, RecFrom = @RecFrom, Persons = @Persons, PerPerson = @PerPerson, AdvPercent = @AdvPercent, Amount = @Amount, 
                         ReceiptNo = @ReceiptNo, Date = @Date
WHERE        (ID = @Original_ID)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecFrom", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RecFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persons", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerPerson", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvPercent", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "AdvPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblAdvance1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblAdvance1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblAdvance1DataTable dataTable = new ComDataSet.tblAdvance1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.tblAdvance1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblAdvance1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_FCardNo, string Original_RecFrom, global::System.Nullable<decimal> Original_Persons, global::System.Nullable<decimal> Original_PerPerson, global::System.Nullable<decimal> Original_AdvPercent, global::System.Nullable<decimal> Original_Amount, string Original_ReceiptNo, global::System.Nullable<global::System.DateTime> Original_Date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_FCardNo == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FCardNo));
            }
            if ((Original_RecFrom == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_RecFrom));
            }
            if ((Original_Persons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Persons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_PerPerson.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_PerPerson.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_AdvPercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_AdvPercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Amount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_Amount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceiptNo == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ReceiptNo));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FCardNo, string RecFrom, global::System.Nullable<decimal> Persons, global::System.Nullable<decimal> PerPerson, global::System.Nullable<decimal> AdvPercent, global::System.Nullable<decimal> Amount, string ReceiptNo, global::System.Nullable<global::System.DateTime> Date) {
            if ((FCardNo == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((RecFrom == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RecFrom));
            }
            if ((Persons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Persons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PerPerson.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PerPerson.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AdvPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(AdvPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ReceiptNo == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FCardNo, 
                    string RecFrom, 
                    global::System.Nullable<decimal> Persons, 
                    global::System.Nullable<decimal> PerPerson, 
                    global::System.Nullable<decimal> AdvPercent, 
                    global::System.Nullable<decimal> Amount, 
                    string ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    int Original_ID, 
                    string Original_FCardNo, 
                    string Original_RecFrom, 
                    global::System.Nullable<decimal> Original_Persons, 
                    global::System.Nullable<decimal> Original_PerPerson, 
                    global::System.Nullable<decimal> Original_AdvPercent, 
                    global::System.Nullable<decimal> Original_Amount, 
                    string Original_ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Original_Date, 
                    int ID) {
            if ((FCardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((RecFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RecFrom));
            }
            if ((Persons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Persons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PerPerson.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PerPerson.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AdvPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(AdvPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ReceiptNo == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID));
            if ((Original_FCardNo == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_FCardNo));
            }
            if ((Original_RecFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_RecFrom));
            }
            if ((Original_Persons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_Persons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_PerPerson.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_PerPerson.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_AdvPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_AdvPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Amount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_Amount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceiptNo == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ReceiptNo));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FCardNo, 
                    string RecFrom, 
                    global::System.Nullable<decimal> Persons, 
                    global::System.Nullable<decimal> PerPerson, 
                    global::System.Nullable<decimal> AdvPercent, 
                    global::System.Nullable<decimal> Amount, 
                    string ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    int Original_ID, 
                    string Original_FCardNo, 
                    string Original_RecFrom, 
                    global::System.Nullable<decimal> Original_Persons, 
                    global::System.Nullable<decimal> Original_PerPerson, 
                    global::System.Nullable<decimal> Original_AdvPercent, 
                    global::System.Nullable<decimal> Original_Amount, 
                    string Original_ReceiptNo, 
                    global::System.Nullable<global::System.DateTime> Original_Date) {
            return this.Update(FCardNo, RecFrom, Persons, PerPerson, AdvPercent, Amount, ReceiptNo, Date, Original_ID, Original_FCardNo, Original_RecFrom, Original_Persons, Original_PerPerson, Original_AdvPercent, Original_Amount, Original_ReceiptNo, Original_Date, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int Add(string FCardNo, string RecFrom, global::System.Nullable<decimal> Persons, global::System.Nullable<decimal> PerPerson, global::System.Nullable<decimal> AdvPercent, global::System.Nullable<decimal> Amount, string ReceiptNo, global::System.Nullable<global::System.DateTime> Date) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((FCardNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((RecFrom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(RecFrom));
            }
            if ((Persons.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(Persons.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PerPerson.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(PerPerson.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AdvPercent.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(AdvPercent.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ReceiptNo == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[7].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int Del(int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int Upd(string FCardNo, string RecFrom, global::System.Nullable<decimal> Persons, global::System.Nullable<decimal> PerPerson, global::System.Nullable<decimal> AdvPercent, global::System.Nullable<decimal> Amount, string ReceiptNo, global::System.Nullable<global::System.DateTime> Date, int Original_ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((FCardNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FCardNo));
            }
            if ((RecFrom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(RecFrom));
            }
            if ((Persons.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(Persons.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PerPerson.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(PerPerson.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AdvPercent.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(AdvPercent.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ReceiptNo == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[7].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            command.Parameters[8].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblAdvanceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblAdvanceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblAdvance";
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Head", "Head");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("hbkReceipt", "hbkReceipt");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DISTINCT tblAdvance.ReceiptNo, tblAdvance.Date, tblAdvance.FCardNo, tblAdvance.Head, tblAdvance.FName, 
tblAdvance.Orakh, tblAdvance.ContactNo,tblAccounts.AccountName, tblAdvance.hbkReceipt,sum(amount) as Amount
FROM tblAdvance 
INNER JOIN tblAccounts ON tblAdvance.AdvAcc = tblAccounts.ID
Group By tblAdvance.ReceiptNo, tblAdvance.Date, tblAdvance.FCardNo, tblAdvance.Head, tblAdvance.FName, 
tblAdvance.Orakh, tblAdvance.ContactNo,tblAccounts.AccountName, tblAdvance.hbkReceipt
ORDER BY tblAdvance.ReceiptNo DESC
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO tblAdvance
                      (ReceiptNo, Date, FCardNo, Head, FName, Orakh, Events, Persons, PerPerson, Amount, ContactNo, AdvAcc, hbkReceipt)
VALUES     (@ReceiptNo,@Date,@FCardNo,@Head,@FName,@Orakh,@Events,@Persons,@PerPerson,@Amount,@ContactNo,@AdvAcc,@hbkReceipt)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Head", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Events", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Events", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persons", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerPerson", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AdvAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hbkReceipt", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "hbkReceipt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM tblAdvance\r\nWHERE     (ReceiptNo = @Receipt)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Receipt", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "DELETE FROM tblAdvance\r\nWHERE     (ID = @ID)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"UPDATE    tblAdvance
SET              ReceiptNo = @ReceiptNo, Date = @Date, FCardNo = @FCardNo, Head = @Head, FName = @FName, Orakh = @Orakh, Events = @Events, 
                      Persons = @Persons, PerPerson = @PerPerson, Amount = @Amount, ContactNo = @ContactNo, AdvAcc = @AdvAcc, hbkReceipt = @hbkReceipt
WHERE     (ID = @ID)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Head", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Events", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Events", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persons", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Persons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerPerson", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PerPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvAcc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AdvAcc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hbkReceipt", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "hbkReceipt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblAdvanceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblAdvanceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblAdvanceDataTable dataTable = new ComDataSet.tblAdvanceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int Add(string ReceiptNo, global::System.Nullable<global::System.DateTime> Date, string FCardNo, string Head, string FName, string Orakh, global::System.Nullable<int> Events, global::System.Nullable<decimal> Persons, global::System.Nullable<decimal> PerPerson, global::System.Nullable<decimal> Amount, string ContactNo, global::System.Nullable<int> AdvAcc, string hbkReceipt) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ReceiptNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((Head == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Head));
            }
            if ((FName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FName));
            }
            if ((Orakh == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Orakh));
            }
            if ((Events.HasValue == true)) {
                command.Parameters[6].Value = ((int)(Events.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Persons.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(Persons.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PerPerson.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(PerPerson.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ContactNo == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(ContactNo));
            }
            if ((AdvAcc.HasValue == true)) {
                command.Parameters[11].Value = ((int)(AdvAcc.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((hbkReceipt == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(hbkReceipt));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int Del(string Receipt) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((Receipt == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Receipt));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int Del_inv(int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int Upd(string ReceiptNo, global::System.Nullable<global::System.DateTime> Date, string FCardNo, string Head, string FName, string Orakh, global::System.Nullable<int> Events, global::System.Nullable<decimal> Persons, global::System.Nullable<decimal> PerPerson, global::System.Nullable<decimal> Amount, string ContactNo, global::System.Nullable<int> AdvAcc, string hbkReceipt, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            if ((ReceiptNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((Head == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Head));
            }
            if ((FName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FName));
            }
            if ((Orakh == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Orakh));
            }
            if ((Events.HasValue == true)) {
                command.Parameters[6].Value = ((int)(Events.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Persons.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(Persons.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PerPerson.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(PerPerson.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ContactNo == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(ContactNo));
            }
            if ((AdvAcc.HasValue == true)) {
                command.Parameters[11].Value = ((int)(AdvAcc.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((hbkReceipt == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(hbkReceipt));
            }
            command.Parameters[13].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblNICFormTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblNICFormTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblNICForm";
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Head", "Head");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT ReceiptNo, Date, FCardNo, Head, FName, Orakh\r\nFROM            tbl" +
                "NICForm\r\nORDER BY ReceiptNo DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"INSERT INTO tblNICForm
                      (ReceiptNo, Date, FCardNo, Head, FName, Orakh, MemberName, Age, CardStatus, Amount, Acc, ContactNo)
VALUES     (@ReceiptNo,@Date,@FCardNo,@Head,@FName,@Orakh,@MemberName,@Age,@CardStatus,@Amount,@Acc,@ContactNo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Head", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.Int, 7, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardStatus", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CardStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Acc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM tblNICForm WHERE ReceiptNo  = @ReceiptNo";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"UPDATE    tblNICForm
SET              ReceiptNo = @ReceiptNo, Date = @Date, FCardNo = @FCardNo, Head = @Head, FName = @FName, Orakh = @Orakh, 
                      MemberName = @MemberName, Age = @Age, CardStatus = @CardStatus, Amount = @Amount, Acc = @Acc, ContactNo = @ContactNo
WHERE     (ID = @ID)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiptNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Head", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Head", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberName", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MemberName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardStatus", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CardStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Amount", global::System.Data.SqlDbType.Decimal, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Acc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Acc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblNICFormDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblNICFormDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblNICFormDataTable dataTable = new ComDataSet.tblNICFormDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int Add(string ReceiptNo, global::System.Nullable<global::System.DateTime> Date, string FCardNo, string Head, string FName, string Orakh, global::System.Nullable<int> MemberName, string Age, global::System.Nullable<int> CardStatus, global::System.Nullable<decimal> Amount, global::System.Nullable<int> Acc, string ContactNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ReceiptNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((Head == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Head));
            }
            if ((FName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FName));
            }
            if ((Orakh == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Orakh));
            }
            if ((MemberName.HasValue == true)) {
                command.Parameters[6].Value = ((int)(MemberName.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Age == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Age));
            }
            if ((CardStatus.HasValue == true)) {
                command.Parameters[8].Value = ((int)(CardStatus.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Acc.HasValue == true)) {
                command.Parameters[10].Value = ((int)(Acc.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ContactNo == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(ContactNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int Del(string ReceiptNo) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((ReceiptNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ReceiptNo));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int upd(string ReceiptNo, global::System.Nullable<global::System.DateTime> Date, string FCardNo, string Head, string FName, string Orakh, global::System.Nullable<int> MemberName, string Age, global::System.Nullable<int> CardStatus, global::System.Nullable<decimal> Amount, global::System.Nullable<int> Acc, string ContactNo, int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((ReceiptNo == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(ReceiptNo));
            }
            if ((Date.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(FCardNo));
            }
            if ((Head == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Head));
            }
            if ((FName == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(FName));
            }
            if ((Orakh == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Orakh));
            }
            if ((MemberName.HasValue == true)) {
                command.Parameters[6].Value = ((int)(MemberName.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Age == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Age));
            }
            if ((CardStatus.HasValue == true)) {
                command.Parameters[8].Value = ((int)(CardStatus.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Amount.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(Amount.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Acc.HasValue == true)) {
                command.Parameters[10].Value = ((int)(Acc.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ContactNo == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(ContactNo));
            }
            command.Parameters[12].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblAidsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblAidsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblAids";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Aid", "Aid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblAids] WHERE (([ID] = @Original_ID) AND ((@IsNull_Aid = 1 AND [Aid" +
                "] IS NULL) OR ([Aid] = @Original_Aid)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblAids] ([Aid]) VALUES (@Aid);\r\nSELECT ID, Aid FROM tblAids WHERE (" +
                "ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblAids] SET [Aid] = @Aid WHERE (([ID] = @Original_ID) AND ((@IsNull_Aid " +
                "= 1 AND [Aid] IS NULL) OR ([Aid] = @Original_Aid)));\r\nSELECT ID, Aid FROM tblAid" +
                "s WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Aid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Aid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Aid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Aid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     ID, Aid\r\nFROM         tblAids";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.tblAidsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.tblAidsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.tblAidsDataTable dataTable = new ComDataSet.tblAidsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.tblAidsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblAids");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, string Original_Aid) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Aid == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Aid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Aid) {
            if ((Aid == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Aid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Aid, int Original_ID, string Original_Aid, int ID) {
            if ((Aid == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Aid));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID));
            if ((Original_Aid == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Aid));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Aid, int Original_ID, string Original_Aid) {
            return this.Update(Aid, Original_ID, Original_Aid, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_SEL_CancelledEventsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_SEL_CancelledEventsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_SEL_CancelledEvents";
            tableMapping.ColumnMappings.Add("EventCancellationId", "EventCancellationId");
            tableMapping.ColumnMappings.Add("EventId", "EventId");
            tableMapping.ColumnMappings.Add("HallNo", "HallNo");
            tableMapping.ColumnMappings.Add("CancellationDate", "CancellationDate");
            tableMapping.ColumnMappings.Add("EventDate", "EventDate");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("BookingId", "BookingId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "dbo.usp_ADD_CancelledEvents";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EventId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, "EventId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EventDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, "EventDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CancellationDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, "CancellationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HallNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "HallNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookingId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, "BookingId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_SEL_CancelledEvents";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BookingId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_Search_CancelledEvents";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eventDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_SEL_CancelledEventsDataTable dataTable, global::System.Nullable<long> BookingId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((BookingId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(BookingId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_SEL_CancelledEventsDataTable GetData(global::System.Nullable<long> BookingId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((BookingId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(BookingId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_SEL_CancelledEventsDataTable dataTable = new ComDataSet.usp_SEL_CancelledEventsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(ComDataSet.usp_SEL_CancelledEventsDataTable dataTable, global::System.Nullable<global::System.DateTime> eventDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((eventDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(eventDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ComDataSet.usp_SEL_CancelledEventsDataTable GetHallCancelledHistoryByDate(global::System.Nullable<global::System.DateTime> eventDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((eventDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(eventDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_SEL_CancelledEventsDataTable dataTable = new ComDataSet.usp_SEL_CancelledEventsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet.usp_SEL_CancelledEventsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ComDataSet dataSet) {
            return this.Adapter.Update(dataSet, "usp_SEL_CancelledEvents");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> EventId, global::System.Nullable<global::System.DateTime> EventDate, global::System.Nullable<global::System.DateTime> CancellationDate, string HallNo, string Remarks, global::System.Nullable<long> BookingId) {
            if ((EventId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(EventId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EventDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EventDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CancellationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(CancellationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((HallNo == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(HallNo));
            }
            if ((Remarks == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Remarks));
            }
            if ((BookingId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((long)(BookingId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_RPT_DailyTransactionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_RPT_DailyTransactionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_RPT_DailyTransactions";
            tableMapping.ColumnMappings.Add("DocumentNo", "DocumentNo");
            tableMapping.ColumnMappings.Add("Voucher", "Voucher");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Narration", "Narration");
            tableMapping.ColumnMappings.Add("Debit", "Debit");
            tableMapping.ColumnMappings.Add("Credit", "Credit");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_RPT_DailyTransactions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_RPT_DailyTransactionsDataTable dataTable, global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_RPT_DailyTransactionsDataTable GetData(global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_RPT_DailyTransactionsDataTable dataTable = new ComDataSet.usp_RPT_DailyTransactionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_DailyTransactions_ReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_DailyTransactions_ReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_DailyTransactions_Report";
            tableMapping.ColumnMappings.Add("DocumentNo", "DocumentNo");
            tableMapping.ColumnMappings.Add("Voucher", "Voucher");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Narration", "Narration");
            tableMapping.ColumnMappings.Add("Debit", "Debit");
            tableMapping.ColumnMappings.Add("Credit", "Credit");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_DailyTransactions_Report";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_DailyTransactions_ReportDataTable dataTable, global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_DailyTransactions_ReportDataTable GetData(global::System.Nullable<global::System.DateTime> Date, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            ComDataSet.usp_DailyTransactions_ReportDataTable dataTable = new ComDataSet.usp_DailyTransactions_ReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_GetHallBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_GetHallBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_GetHallBooking";
            tableMapping.ColumnMappings.Add("Serialno", "Serialno");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Mr", "Mr");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("Events", "Events");
            tableMapping.ColumnMappings.Add("EventDate", "EventDate");
            tableMapping.ColumnMappings.Add("Day", "Day");
            tableMapping.ColumnMappings.Add("FromTime", "FromTime");
            tableMapping.ColumnMappings.Add("ToTime", "ToTime");
            tableMapping.ColumnMappings.Add("Hall1", "Hall1");
            tableMapping.ColumnMappings.Add("Hall2", "Hall2");
            tableMapping.ColumnMappings.Add("Hall3", "Hall3");
            tableMapping.ColumnMappings.Add("Hall4", "Hall4");
            tableMapping.ColumnMappings.Add("Hall5", "Hall5");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_GetHallBooking";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ComDataSet.usp_GetHallBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ComDataSet.usp_GetHallBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ComDataSet.usp_GetHallBookingDataTable dataTable = new ComDataSet.usp_GetHallBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591