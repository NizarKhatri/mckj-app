//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MCKJ {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataset : global::System.Data.DataSet {
        
        private tblNICDataTable tabletblNIC;
        
        private tblHallBookingDataTable tabletblHallBooking;
        
        private fnHallBookingDataTable tablefnHallBooking;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblNIC"] != null)) {
                    base.Tables.Add(new tblNICDataTable(ds.Tables["tblNIC"]));
                }
                if ((ds.Tables["tblHallBooking"] != null)) {
                    base.Tables.Add(new tblHallBookingDataTable(ds.Tables["tblHallBooking"]));
                }
                if ((ds.Tables["fnHallBooking"] != null)) {
                    base.Tables.Add(new fnHallBookingDataTable(ds.Tables["fnHallBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblNICDataTable tblNIC {
            get {
                return this.tabletblNIC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblHallBookingDataTable tblHallBooking {
            get {
                return this.tabletblHallBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fnHallBookingDataTable fnHallBooking {
            get {
                return this.tablefnHallBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dataset cln = ((dataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblNIC"] != null)) {
                    base.Tables.Add(new tblNICDataTable(ds.Tables["tblNIC"]));
                }
                if ((ds.Tables["tblHallBooking"] != null)) {
                    base.Tables.Add(new tblHallBookingDataTable(ds.Tables["tblHallBooking"]));
                }
                if ((ds.Tables["fnHallBooking"] != null)) {
                    base.Tables.Add(new fnHallBookingDataTable(ds.Tables["fnHallBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblNIC = ((tblNICDataTable)(base.Tables["tblNIC"]));
            if ((initTable == true)) {
                if ((this.tabletblNIC != null)) {
                    this.tabletblNIC.InitVars();
                }
            }
            this.tabletblHallBooking = ((tblHallBookingDataTable)(base.Tables["tblHallBooking"]));
            if ((initTable == true)) {
                if ((this.tabletblHallBooking != null)) {
                    this.tabletblHallBooking.InitVars();
                }
            }
            this.tablefnHallBooking = ((fnHallBookingDataTable)(base.Tables["fnHallBooking"]));
            if ((initTable == true)) {
                if ((this.tablefnHallBooking != null)) {
                    this.tablefnHallBooking.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblNIC = new tblNICDataTable();
            base.Tables.Add(this.tabletblNIC);
            this.tabletblHallBooking = new tblHallBookingDataTable();
            base.Tables.Add(this.tabletblHallBooking);
            this.tablefnHallBooking = new fnHallBookingDataTable();
            base.Tables.Add(this.tablefnHallBooking);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblNIC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblHallBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializefnHallBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dataset ds = new dataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblNICRowChangeEventHandler(object sender, tblNICRowChangeEvent e);
        
        public delegate void tblHallBookingRowChangeEventHandler(object sender, tblHallBookingRowChangeEvent e);
        
        public delegate void fnHallBookingRowChangeEventHandler(object sender, fnHallBookingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblNICDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMemberID;
            
            private global::System.Data.DataColumn columnImage;
            
            private global::System.Data.DataColumn columnNIC;
            
            private global::System.Data.DataColumn columnMemberSign;
            
            private global::System.Data.DataColumn columnSecretarySign;
            
            private global::System.Data.DataColumn columnIssueDate;
            
            private global::System.Data.DataColumn columnValidDate;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnGrandFatherName;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnNukh;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMemberName;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnBloodGroup;
            
            private global::System.Data.DataColumn columnCNIC;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnDuplicate;
            
            private global::System.Data.DataColumn columnOccupation;
            
            private global::System.Data.DataColumn columnSNo;
            
            private global::System.Data.DataColumn columnIsNicPrinted;
            
            private global::System.Data.DataColumn columnMemberNameU;
            
            private global::System.Data.DataColumn columnFatherNameU;
            
            private global::System.Data.DataColumn columnHusbandNameU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICDataTable() {
                this.TableName = "tblNIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblNICDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblNICDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberIDColumn {
                get {
                    return this.columnMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImageColumn {
                get {
                    return this.columnImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NICColumn {
                get {
                    return this.columnNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberSignColumn {
                get {
                    return this.columnMemberSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecretarySignColumn {
                get {
                    return this.columnSecretarySign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueDateColumn {
                get {
                    return this.columnIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidDateColumn {
                get {
                    return this.columnValidDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrandFatherNameColumn {
                get {
                    return this.columnGrandFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NukhColumn {
                get {
                    return this.columnNukh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameColumn {
                get {
                    return this.columnMemberName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodGroupColumn {
                get {
                    return this.columnBloodGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNICColumn {
                get {
                    return this.columnCNIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DuplicateColumn {
                get {
                    return this.columnDuplicate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OccupationColumn {
                get {
                    return this.columnOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SNoColumn {
                get {
                    return this.columnSNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNicPrintedColumn {
                get {
                    return this.columnIsNicPrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberNameUColumn {
                get {
                    return this.columnMemberNameU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FatherNameUColumn {
                get {
                    return this.columnFatherNameU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HusbandNameUColumn {
                get {
                    return this.columnHusbandNameU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICRow this[int index] {
                get {
                    return ((tblNICRow)(this.Rows[index]));
                }
            }
            
            public event tblNICRowChangeEventHandler tblNICRowChanging;
            
            public event tblNICRowChangeEventHandler tblNICRowChanged;
            
            public event tblNICRowChangeEventHandler tblNICRowDeleting;
            
            public event tblNICRowChangeEventHandler tblNICRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblNICRow(tblNICRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICRow AddtblNICRow(
                        int MemberID, 
                        byte[] Image, 
                        string NIC, 
                        byte[] MemberSign, 
                        byte[] SecretarySign, 
                        System.DateTime IssueDate, 
                        System.DateTime ValidDate, 
                        string FCardNo, 
                        string GrandFatherName, 
                        string Orakh, 
                        string Nukh, 
                        string Address, 
                        string MemberName, 
                        string FatherName, 
                        string DOB, 
                        string BloodGroup, 
                        string CNIC, 
                        string Mobile, 
                        string Duplicate, 
                        string Occupation, 
                        long SNo, 
                        bool IsNicPrinted, 
                        string MemberNameU, 
                        string FatherNameU, 
                        string HusbandNameU) {
                tblNICRow rowtblNICRow = ((tblNICRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MemberID,
                        Image,
                        NIC,
                        MemberSign,
                        SecretarySign,
                        IssueDate,
                        ValidDate,
                        FCardNo,
                        GrandFatherName,
                        Orakh,
                        Nukh,
                        Address,
                        MemberName,
                        FatherName,
                        DOB,
                        BloodGroup,
                        CNIC,
                        Mobile,
                        Duplicate,
                        Occupation,
                        SNo,
                        IsNicPrinted,
                        MemberNameU,
                        FatherNameU,
                        HusbandNameU};
                rowtblNICRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblNICRow);
                return rowtblNICRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICRow FindByID(int ID) {
                return ((tblNICRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblNICDataTable cln = ((tblNICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblNICDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMemberID = base.Columns["MemberID"];
                this.columnImage = base.Columns["Image"];
                this.columnNIC = base.Columns["NIC"];
                this.columnMemberSign = base.Columns["MemberSign"];
                this.columnSecretarySign = base.Columns["SecretarySign"];
                this.columnIssueDate = base.Columns["IssueDate"];
                this.columnValidDate = base.Columns["ValidDate"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnGrandFatherName = base.Columns["GrandFatherName"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnNukh = base.Columns["Nukh"];
                this.columnAddress = base.Columns["Address"];
                this.columnMemberName = base.Columns["MemberName"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnDOB = base.Columns["DOB"];
                this.columnBloodGroup = base.Columns["BloodGroup"];
                this.columnCNIC = base.Columns["CNIC"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnDuplicate = base.Columns["Duplicate"];
                this.columnOccupation = base.Columns["Occupation"];
                this.columnSNo = base.Columns["SNo"];
                this.columnIsNicPrinted = base.Columns["IsNicPrinted"];
                this.columnMemberNameU = base.Columns["MemberNameU"];
                this.columnFatherNameU = base.Columns["FatherNameU"];
                this.columnHusbandNameU = base.Columns["HusbandNameU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMemberID = new global::System.Data.DataColumn("MemberID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberID);
                this.columnImage = new global::System.Data.DataColumn("Image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage);
                this.columnNIC = new global::System.Data.DataColumn("NIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIC);
                this.columnMemberSign = new global::System.Data.DataColumn("MemberSign", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberSign);
                this.columnSecretarySign = new global::System.Data.DataColumn("SecretarySign", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecretarySign);
                this.columnIssueDate = new global::System.Data.DataColumn("IssueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueDate);
                this.columnValidDate = new global::System.Data.DataColumn("ValidDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidDate);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnGrandFatherName = new global::System.Data.DataColumn("GrandFatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandFatherName);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnNukh = new global::System.Data.DataColumn("Nukh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNukh);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMemberName = new global::System.Data.DataColumn("MemberName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberName);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnBloodGroup = new global::System.Data.DataColumn("BloodGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodGroup);
                this.columnCNIC = new global::System.Data.DataColumn("CNIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNIC);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnDuplicate = new global::System.Data.DataColumn("Duplicate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuplicate);
                this.columnOccupation = new global::System.Data.DataColumn("Occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupation);
                this.columnSNo = new global::System.Data.DataColumn("SNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSNo);
                this.columnIsNicPrinted = new global::System.Data.DataColumn("IsNicPrinted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNicPrinted);
                this.columnMemberNameU = new global::System.Data.DataColumn("MemberNameU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberNameU);
                this.columnFatherNameU = new global::System.Data.DataColumn("FatherNameU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherNameU);
                this.columnHusbandNameU = new global::System.Data.DataColumn("HusbandNameU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHusbandNameU);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMemberID.AllowDBNull = false;
                this.columnNIC.MaxLength = 50;
                this.columnFCardNo.MaxLength = 50;
                this.columnGrandFatherName.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnNukh.MaxLength = 50;
                this.columnAddress.MaxLength = 100;
                this.columnMemberName.MaxLength = 100;
                this.columnFatherName.MaxLength = 100;
                this.columnDOB.MaxLength = 50;
                this.columnBloodGroup.MaxLength = 50;
                this.columnCNIC.MaxLength = 100;
                this.columnMobile.MaxLength = 50;
                this.columnDuplicate.MaxLength = 50;
                this.columnOccupation.MaxLength = 50;
                this.columnSNo.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICRow NewtblNICRow() {
                return ((tblNICRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblNICRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblNICRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblNICRowChanged != null)) {
                    this.tblNICRowChanged(this, new tblNICRowChangeEvent(((tblNICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblNICRowChanging != null)) {
                    this.tblNICRowChanging(this, new tblNICRowChangeEvent(((tblNICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblNICRowDeleted != null)) {
                    this.tblNICRowDeleted(this, new tblNICRowChangeEvent(((tblNICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblNICRowDeleting != null)) {
                    this.tblNICRowDeleting(this, new tblNICRowChangeEvent(((tblNICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblNICRow(tblNICRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataset ds = new dataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblNICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblHallBookingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnMr;
            
            private global::System.Data.DataColumn columnHall1;
            
            private global::System.Data.DataColumn columnHall2;
            
            private global::System.Data.DataColumn columnHall3;
            
            private global::System.Data.DataColumn columnHall4;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnDay;
            
            private global::System.Data.DataColumn columnFromTime;
            
            private global::System.Data.DataColumn columnToTime;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnReasonCancel;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnEvents;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnHall5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHallBookingDataTable() {
                this.TableName = "tblHallBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblHallBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblHallBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MrColumn {
                get {
                    return this.columnMr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall1Column {
                get {
                    return this.columnHall1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall2Column {
                get {
                    return this.columnHall2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall3Column {
                get {
                    return this.columnHall3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall4Column {
                get {
                    return this.columnHall4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayColumn {
                get {
                    return this.columnDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonCancelColumn {
                get {
                    return this.columnReasonCancel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventsColumn {
                get {
                    return this.columnEvents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall5Column {
                get {
                    return this.columnHall5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHallBookingRow this[int index] {
                get {
                    return ((tblHallBookingRow)(this.Rows[index]));
                }
            }
            
            public event tblHallBookingRowChangeEventHandler tblHallBookingRowChanging;
            
            public event tblHallBookingRowChangeEventHandler tblHallBookingRowChanged;
            
            public event tblHallBookingRowChangeEventHandler tblHallBookingRowDeleting;
            
            public event tblHallBookingRowChangeEventHandler tblHallBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblHallBookingRow(tblHallBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHallBookingRow AddtblHallBookingRow(
                        int SerialNo, 
                        System.DateTime Date, 
                        string Mr, 
                        bool Hall1, 
                        bool Hall2, 
                        bool Hall3, 
                        bool Hall4, 
                        System.DateTime Dated, 
                        System.DateTime Day, 
                        System.DateTime FromTime, 
                        System.DateTime ToTime, 
                        string Remarks, 
                        string FName, 
                        string Orakh, 
                        string ReasonCancel, 
                        decimal Amount, 
                        string Events, 
                        string ContactNo, 
                        string AccountName, 
                        string FCardNo, 
                        bool Hall5) {
                tblHallBookingRow rowtblHallBookingRow = ((tblHallBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SerialNo,
                        Date,
                        Mr,
                        Hall1,
                        Hall2,
                        Hall3,
                        Hall4,
                        Dated,
                        Day,
                        FromTime,
                        ToTime,
                        Remarks,
                        FName,
                        Orakh,
                        ReasonCancel,
                        Amount,
                        Events,
                        ContactNo,
                        AccountName,
                        FCardNo,
                        Hall5};
                rowtblHallBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblHallBookingRow);
                return rowtblHallBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHallBookingRow FindByID(int ID) {
                return ((tblHallBookingRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblHallBookingDataTable cln = ((tblHallBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblHallBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnDate = base.Columns["Date"];
                this.columnMr = base.Columns["Mr"];
                this.columnHall1 = base.Columns["Hall1"];
                this.columnHall2 = base.Columns["Hall2"];
                this.columnHall3 = base.Columns["Hall3"];
                this.columnHall4 = base.Columns["Hall4"];
                this.columnDated = base.Columns["Dated"];
                this.columnDay = base.Columns["Day"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToTime = base.Columns["ToTime"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnFName = base.Columns["FName"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnReasonCancel = base.Columns["ReasonCancel"];
                this.columnAmount = base.Columns["Amount"];
                this.columnEvents = base.Columns["Events"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnHall5 = base.Columns["Hall5"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnMr = new global::System.Data.DataColumn("Mr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMr);
                this.columnHall1 = new global::System.Data.DataColumn("Hall1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall1);
                this.columnHall2 = new global::System.Data.DataColumn("Hall2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall2);
                this.columnHall3 = new global::System.Data.DataColumn("Hall3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall3);
                this.columnHall4 = new global::System.Data.DataColumn("Hall4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall4);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnDay = new global::System.Data.DataColumn("Day", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay);
                this.columnFromTime = new global::System.Data.DataColumn("FromTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnReasonCancel = new global::System.Data.DataColumn("ReasonCancel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonCancel);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnEvents = new global::System.Data.DataColumn("Events", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvents);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnHall5 = new global::System.Data.DataColumn("Hall5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall5);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMr.MaxLength = 100;
                this.columnRemarks.MaxLength = 100;
                this.columnFName.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnReasonCancel.MaxLength = 100;
                this.columnEvents.MaxLength = 50;
                this.columnContactNo.MaxLength = 50;
                this.columnAccountName.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHallBookingRow NewtblHallBookingRow() {
                return ((tblHallBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblHallBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblHallBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblHallBookingRowChanged != null)) {
                    this.tblHallBookingRowChanged(this, new tblHallBookingRowChangeEvent(((tblHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblHallBookingRowChanging != null)) {
                    this.tblHallBookingRowChanging(this, new tblHallBookingRowChangeEvent(((tblHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblHallBookingRowDeleted != null)) {
                    this.tblHallBookingRowDeleted(this, new tblHallBookingRowChangeEvent(((tblHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblHallBookingRowDeleting != null)) {
                    this.tblHallBookingRowDeleting(this, new tblHallBookingRowChangeEvent(((tblHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblHallBookingRow(tblHallBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataset ds = new dataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblHallBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fnHallBookingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnMr;
            
            private global::System.Data.DataColumn columnHall1;
            
            private global::System.Data.DataColumn columnHall2;
            
            private global::System.Data.DataColumn columnHall3;
            
            private global::System.Data.DataColumn columnHall4;
            
            private global::System.Data.DataColumn columnDated;
            
            private global::System.Data.DataColumn columnDay;
            
            private global::System.Data.DataColumn columnFromTime;
            
            private global::System.Data.DataColumn columnToTime;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnReasonCancel;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnAccount;
            
            private global::System.Data.DataColumn columnEvents;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnGroupName;
            
            private global::System.Data.DataColumn columnHall5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public fnHallBookingDataTable() {
                this.TableName = "fnHallBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal fnHallBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected fnHallBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MrColumn {
                get {
                    return this.columnMr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall1Column {
                get {
                    return this.columnHall1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall2Column {
                get {
                    return this.columnHall2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall3Column {
                get {
                    return this.columnHall3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall4Column {
                get {
                    return this.columnHall4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatedColumn {
                get {
                    return this.columnDated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayColumn {
                get {
                    return this.columnDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonCancelColumn {
                get {
                    return this.columnReasonCancel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountColumn {
                get {
                    return this.columnAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventsColumn {
                get {
                    return this.columnEvents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupNameColumn {
                get {
                    return this.columnGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall5Column {
                get {
                    return this.columnHall5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public fnHallBookingRow this[int index] {
                get {
                    return ((fnHallBookingRow)(this.Rows[index]));
                }
            }
            
            public event fnHallBookingRowChangeEventHandler fnHallBookingRowChanging;
            
            public event fnHallBookingRowChangeEventHandler fnHallBookingRowChanged;
            
            public event fnHallBookingRowChangeEventHandler fnHallBookingRowDeleting;
            
            public event fnHallBookingRowChangeEventHandler fnHallBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddfnHallBookingRow(fnHallBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public fnHallBookingRow AddfnHallBookingRow(
                        int ID, 
                        int SerialNo, 
                        System.DateTime Date, 
                        string Mr, 
                        bool Hall1, 
                        bool Hall2, 
                        bool Hall3, 
                        bool Hall4, 
                        System.DateTime Dated, 
                        System.DateTime Day, 
                        System.DateTime FromTime, 
                        System.DateTime ToTime, 
                        string Remarks, 
                        string FName, 
                        string Orakh, 
                        string ReasonCancel, 
                        decimal Amount, 
                        int Account, 
                        string Events, 
                        string ContactNo, 
                        string FCardNo, 
                        string GroupName, 
                        bool Hall5) {
                fnHallBookingRow rowfnHallBookingRow = ((fnHallBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        SerialNo,
                        Date,
                        Mr,
                        Hall1,
                        Hall2,
                        Hall3,
                        Hall4,
                        Dated,
                        Day,
                        FromTime,
                        ToTime,
                        Remarks,
                        FName,
                        Orakh,
                        ReasonCancel,
                        Amount,
                        Account,
                        Events,
                        ContactNo,
                        FCardNo,
                        GroupName,
                        Hall5};
                rowfnHallBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfnHallBookingRow);
                return rowfnHallBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public fnHallBookingRow FindByID(int ID) {
                return ((fnHallBookingRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                fnHallBookingDataTable cln = ((fnHallBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fnHallBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnDate = base.Columns["Date"];
                this.columnMr = base.Columns["Mr"];
                this.columnHall1 = base.Columns["Hall1"];
                this.columnHall2 = base.Columns["Hall2"];
                this.columnHall3 = base.Columns["Hall3"];
                this.columnHall4 = base.Columns["Hall4"];
                this.columnDated = base.Columns["Dated"];
                this.columnDay = base.Columns["Day"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToTime = base.Columns["ToTime"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnFName = base.Columns["FName"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnReasonCancel = base.Columns["ReasonCancel"];
                this.columnAmount = base.Columns["Amount"];
                this.columnAccount = base.Columns["Account"];
                this.columnEvents = base.Columns["Events"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnGroupName = base.Columns["GroupName"];
                this.columnHall5 = base.Columns["Hall5"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnMr = new global::System.Data.DataColumn("Mr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMr);
                this.columnHall1 = new global::System.Data.DataColumn("Hall1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall1);
                this.columnHall2 = new global::System.Data.DataColumn("Hall2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall2);
                this.columnHall3 = new global::System.Data.DataColumn("Hall3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall3);
                this.columnHall4 = new global::System.Data.DataColumn("Hall4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall4);
                this.columnDated = new global::System.Data.DataColumn("Dated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDated);
                this.columnDay = new global::System.Data.DataColumn("Day", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay);
                this.columnFromTime = new global::System.Data.DataColumn("FromTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnReasonCancel = new global::System.Data.DataColumn("ReasonCancel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonCancel);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnAccount = new global::System.Data.DataColumn("Account", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount);
                this.columnEvents = new global::System.Data.DataColumn("Events", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvents);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnGroupName = new global::System.Data.DataColumn("GroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupName);
                this.columnHall5 = new global::System.Data.DataColumn("Hall5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall5);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnMr.MaxLength = 100;
                this.columnRemarks.MaxLength = 100;
                this.columnFName.MaxLength = 50;
                this.columnOrakh.MaxLength = 50;
                this.columnReasonCancel.MaxLength = 100;
                this.columnEvents.MaxLength = 50;
                this.columnContactNo.MaxLength = 50;
                this.columnFCardNo.MaxLength = 5;
                this.columnGroupName.AllowDBNull = false;
                this.columnGroupName.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public fnHallBookingRow NewfnHallBookingRow() {
                return ((fnHallBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fnHallBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(fnHallBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fnHallBookingRowChanged != null)) {
                    this.fnHallBookingRowChanged(this, new fnHallBookingRowChangeEvent(((fnHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fnHallBookingRowChanging != null)) {
                    this.fnHallBookingRowChanging(this, new fnHallBookingRowChangeEvent(((fnHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fnHallBookingRowDeleted != null)) {
                    this.fnHallBookingRowDeleted(this, new fnHallBookingRowChangeEvent(((fnHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fnHallBookingRowDeleting != null)) {
                    this.fnHallBookingRowDeleting(this, new fnHallBookingRowChangeEvent(((fnHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovefnHallBookingRow(fnHallBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataset ds = new dataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fnHallBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblNICRow : global::System.Data.DataRow {
            
            private tblNICDataTable tabletblNIC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblNICRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblNIC = ((tblNICDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblNIC.IDColumn]));
                }
                set {
                    this[this.tabletblNIC.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MemberID {
                get {
                    return ((int)(this[this.tabletblNIC.MemberIDColumn]));
                }
                set {
                    this[this.tabletblNIC.MemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Image {
                get {
                    try {
                        return ((byte[])(this[this.tabletblNIC.ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Image\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NIC {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.NICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NIC\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.NICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] MemberSign {
                get {
                    try {
                        return ((byte[])(this[this.tabletblNIC.MemberSignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberSign\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.MemberSignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SecretarySign {
                get {
                    try {
                        return ((byte[])(this[this.tabletblNIC.SecretarySignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecretarySign\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.SecretarySignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime IssueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblNIC.IssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueDate\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.IssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ValidDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblNIC.ValidDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidDate\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.ValidDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GrandFatherName {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.GrandFatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandFatherName\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.GrandFatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nukh {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.NukhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nukh\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.NukhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberName {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.MemberNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberName\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.MemberNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodGroup {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.BloodGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodGroup\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.BloodGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNIC {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.CNICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNIC\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.CNICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Duplicate {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.DuplicateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duplicate\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.DuplicateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Occupation {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.OccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Occupation\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.OccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SNo {
                get {
                    try {
                        return ((long)(this[this.tabletblNIC.SNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SNo\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.SNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNicPrinted {
                get {
                    try {
                        return ((bool)(this[this.tabletblNIC.IsNicPrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNicPrinted\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.IsNicPrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberNameU {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.MemberNameUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberNameU\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.MemberNameUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FatherNameU {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.FatherNameUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherNameU\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.FatherNameUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HusbandNameU {
                get {
                    try {
                        return ((string)(this[this.tabletblNIC.HusbandNameUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HusbandNameU\' in table \'tblNIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblNIC.HusbandNameUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImageNull() {
                return this.IsNull(this.tabletblNIC.ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImageNull() {
                this[this.tabletblNIC.ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNICNull() {
                return this.IsNull(this.tabletblNIC.NICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNICNull() {
                this[this.tabletblNIC.NICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberSignNull() {
                return this.IsNull(this.tabletblNIC.MemberSignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberSignNull() {
                this[this.tabletblNIC.MemberSignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecretarySignNull() {
                return this.IsNull(this.tabletblNIC.SecretarySignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecretarySignNull() {
                this[this.tabletblNIC.SecretarySignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueDateNull() {
                return this.IsNull(this.tabletblNIC.IssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueDateNull() {
                this[this.tabletblNIC.IssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidDateNull() {
                return this.IsNull(this.tabletblNIC.ValidDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidDateNull() {
                this[this.tabletblNIC.ValidDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tabletblNIC.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tabletblNIC.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrandFatherNameNull() {
                return this.IsNull(this.tabletblNIC.GrandFatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrandFatherNameNull() {
                this[this.tabletblNIC.GrandFatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tabletblNIC.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tabletblNIC.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNukhNull() {
                return this.IsNull(this.tabletblNIC.NukhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNukhNull() {
                this[this.tabletblNIC.NukhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tabletblNIC.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tabletblNIC.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameNull() {
                return this.IsNull(this.tabletblNIC.MemberNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameNull() {
                this[this.tabletblNIC.MemberNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tabletblNIC.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameNull() {
                this[this.tabletblNIC.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tabletblNIC.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tabletblNIC.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodGroupNull() {
                return this.IsNull(this.tabletblNIC.BloodGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodGroupNull() {
                this[this.tabletblNIC.BloodGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNICNull() {
                return this.IsNull(this.tabletblNIC.CNICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNICNull() {
                this[this.tabletblNIC.CNICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tabletblNIC.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tabletblNIC.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDuplicateNull() {
                return this.IsNull(this.tabletblNIC.DuplicateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDuplicateNull() {
                this[this.tabletblNIC.DuplicateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOccupationNull() {
                return this.IsNull(this.tabletblNIC.OccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOccupationNull() {
                this[this.tabletblNIC.OccupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNoNull() {
                return this.IsNull(this.tabletblNIC.SNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNoNull() {
                this[this.tabletblNIC.SNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNicPrintedNull() {
                return this.IsNull(this.tabletblNIC.IsNicPrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNicPrintedNull() {
                this[this.tabletblNIC.IsNicPrintedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberNameUNull() {
                return this.IsNull(this.tabletblNIC.MemberNameUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberNameUNull() {
                this[this.tabletblNIC.MemberNameUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFatherNameUNull() {
                return this.IsNull(this.tabletblNIC.FatherNameUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFatherNameUNull() {
                this[this.tabletblNIC.FatherNameUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHusbandNameUNull() {
                return this.IsNull(this.tabletblNIC.HusbandNameUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHusbandNameUNull() {
                this[this.tabletblNIC.HusbandNameUColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblHallBookingRow : global::System.Data.DataRow {
            
            private tblHallBookingDataTable tabletblHallBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblHallBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblHallBooking = ((tblHallBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tabletblHallBooking.IDColumn]));
                }
                set {
                    this[this.tabletblHallBooking.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SerialNo {
                get {
                    try {
                        return ((int)(this[this.tabletblHallBooking.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblHallBooking.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mr {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.MrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mr\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.MrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall1 {
                get {
                    try {
                        return ((bool)(this[this.tabletblHallBooking.Hall1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall1\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.Hall1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall2 {
                get {
                    try {
                        return ((bool)(this[this.tabletblHallBooking.Hall2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall2\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.Hall2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall3 {
                get {
                    try {
                        return ((bool)(this[this.tabletblHallBooking.Hall3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall3\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.Hall3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall4 {
                get {
                    try {
                        return ((bool)(this[this.tabletblHallBooking.Hall4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall4\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.Hall4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblHallBooking.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Day {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblHallBooking.DayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblHallBooking.FromTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromTime\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.FromTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblHallBooking.ToTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToTime\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReasonCancel {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.ReasonCancelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonCancel\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.ReasonCancelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletblHallBooking.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Events {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.EventsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Events\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.EventsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tabletblHallBooking.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall5 {
                get {
                    try {
                        return ((bool)(this[this.tabletblHallBooking.Hall5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall5\' in table \'tblHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblHallBooking.Hall5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tabletblHallBooking.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tabletblHallBooking.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tabletblHallBooking.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tabletblHallBooking.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMrNull() {
                return this.IsNull(this.tabletblHallBooking.MrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMrNull() {
                this[this.tabletblHallBooking.MrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall1Null() {
                return this.IsNull(this.tabletblHallBooking.Hall1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall1Null() {
                this[this.tabletblHallBooking.Hall1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall2Null() {
                return this.IsNull(this.tabletblHallBooking.Hall2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall2Null() {
                this[this.tabletblHallBooking.Hall2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall3Null() {
                return this.IsNull(this.tabletblHallBooking.Hall3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall3Null() {
                this[this.tabletblHallBooking.Hall3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall4Null() {
                return this.IsNull(this.tabletblHallBooking.Hall4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall4Null() {
                this[this.tabletblHallBooking.Hall4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tabletblHallBooking.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tabletblHallBooking.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNull() {
                return this.IsNull(this.tabletblHallBooking.DayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNull() {
                this[this.tabletblHallBooking.DayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromTimeNull() {
                return this.IsNull(this.tabletblHallBooking.FromTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromTimeNull() {
                this[this.tabletblHallBooking.FromTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToTimeNull() {
                return this.IsNull(this.tabletblHallBooking.ToTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToTimeNull() {
                this[this.tabletblHallBooking.ToTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tabletblHallBooking.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tabletblHallBooking.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tabletblHallBooking.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tabletblHallBooking.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tabletblHallBooking.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tabletblHallBooking.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonCancelNull() {
                return this.IsNull(this.tabletblHallBooking.ReasonCancelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonCancelNull() {
                this[this.tabletblHallBooking.ReasonCancelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tabletblHallBooking.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tabletblHallBooking.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventsNull() {
                return this.IsNull(this.tabletblHallBooking.EventsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventsNull() {
                this[this.tabletblHallBooking.EventsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNoNull() {
                return this.IsNull(this.tabletblHallBooking.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNoNull() {
                this[this.tabletblHallBooking.ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tabletblHallBooking.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tabletblHallBooking.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tabletblHallBooking.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tabletblHallBooking.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall5Null() {
                return this.IsNull(this.tabletblHallBooking.Hall5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall5Null() {
                this[this.tabletblHallBooking.Hall5Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class fnHallBookingRow : global::System.Data.DataRow {
            
            private fnHallBookingDataTable tablefnHallBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal fnHallBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefnHallBooking = ((fnHallBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tablefnHallBooking.IDColumn]));
                }
                set {
                    this[this.tablefnHallBooking.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SerialNo {
                get {
                    try {
                        return ((int)(this[this.tablefnHallBooking.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefnHallBooking.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mr {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.MrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mr\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.MrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall1 {
                get {
                    try {
                        return ((bool)(this[this.tablefnHallBooking.Hall1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall1\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.Hall1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall2 {
                get {
                    try {
                        return ((bool)(this[this.tablefnHallBooking.Hall2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall2\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.Hall2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall3 {
                get {
                    try {
                        return ((bool)(this[this.tablefnHallBooking.Hall3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall3\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.Hall3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall4 {
                get {
                    try {
                        return ((bool)(this[this.tablefnHallBooking.Hall4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall4\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.Hall4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Dated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefnHallBooking.DatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dated\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.DatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Day {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefnHallBooking.DayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefnHallBooking.FromTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromTime\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.FromTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefnHallBooking.ToTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToTime\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FName\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReasonCancel {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.ReasonCancelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonCancel\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.ReasonCancelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablefnHallBooking.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Account {
                get {
                    try {
                        return ((int)(this[this.tablefnHallBooking.AccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Account\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.AccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Events {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.EventsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Events\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.EventsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tablefnHallBooking.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupName {
                get {
                    return ((string)(this[this.tablefnHallBooking.GroupNameColumn]));
                }
                set {
                    this[this.tablefnHallBooking.GroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall5 {
                get {
                    try {
                        return ((bool)(this[this.tablefnHallBooking.Hall5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall5\' in table \'fnHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefnHallBooking.Hall5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tablefnHallBooking.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialNoNull() {
                this[this.tablefnHallBooking.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tablefnHallBooking.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tablefnHallBooking.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMrNull() {
                return this.IsNull(this.tablefnHallBooking.MrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMrNull() {
                this[this.tablefnHallBooking.MrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall1Null() {
                return this.IsNull(this.tablefnHallBooking.Hall1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall1Null() {
                this[this.tablefnHallBooking.Hall1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall2Null() {
                return this.IsNull(this.tablefnHallBooking.Hall2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall2Null() {
                this[this.tablefnHallBooking.Hall2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall3Null() {
                return this.IsNull(this.tablefnHallBooking.Hall3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall3Null() {
                this[this.tablefnHallBooking.Hall3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall4Null() {
                return this.IsNull(this.tablefnHallBooking.Hall4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall4Null() {
                this[this.tablefnHallBooking.Hall4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatedNull() {
                return this.IsNull(this.tablefnHallBooking.DatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatedNull() {
                this[this.tablefnHallBooking.DatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNull() {
                return this.IsNull(this.tablefnHallBooking.DayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNull() {
                this[this.tablefnHallBooking.DayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromTimeNull() {
                return this.IsNull(this.tablefnHallBooking.FromTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromTimeNull() {
                this[this.tablefnHallBooking.FromTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToTimeNull() {
                return this.IsNull(this.tablefnHallBooking.ToTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToTimeNull() {
                this[this.tablefnHallBooking.ToTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablefnHallBooking.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tablefnHallBooking.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNameNull() {
                return this.IsNull(this.tablefnHallBooking.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNameNull() {
                this[this.tablefnHallBooking.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tablefnHallBooking.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tablefnHallBooking.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonCancelNull() {
                return this.IsNull(this.tablefnHallBooking.ReasonCancelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonCancelNull() {
                this[this.tablefnHallBooking.ReasonCancelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablefnHallBooking.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablefnHallBooking.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNull() {
                return this.IsNull(this.tablefnHallBooking.AccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNull() {
                this[this.tablefnHallBooking.AccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventsNull() {
                return this.IsNull(this.tablefnHallBooking.EventsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventsNull() {
                this[this.tablefnHallBooking.EventsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNoNull() {
                return this.IsNull(this.tablefnHallBooking.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNoNull() {
                this[this.tablefnHallBooking.ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tablefnHallBooking.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tablefnHallBooking.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall5Null() {
                return this.IsNull(this.tablefnHallBooking.Hall5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall5Null() {
                this[this.tablefnHallBooking.Hall5Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblNICRowChangeEvent : global::System.EventArgs {
            
            private tblNICRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICRowChangeEvent(tblNICRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblNICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblHallBookingRowChangeEvent : global::System.EventArgs {
            
            private tblHallBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHallBookingRowChangeEvent(tblHallBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblHallBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class fnHallBookingRowChangeEvent : global::System.EventArgs {
            
            private fnHallBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public fnHallBookingRowChangeEvent(fnHallBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public fnHallBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MCKJ.datasetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblNICTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblNICTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblNIC";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("MemberID", "MemberID");
            tableMapping.ColumnMappings.Add("Image", "Image");
            tableMapping.ColumnMappings.Add("NIC", "NIC");
            tableMapping.ColumnMappings.Add("MemberSign", "MemberSign");
            tableMapping.ColumnMappings.Add("SecretarySign", "SecretarySign");
            tableMapping.ColumnMappings.Add("IssueDate", "IssueDate");
            tableMapping.ColumnMappings.Add("ValidDate", "ValidDate");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("GrandFatherName", "GrandFatherName");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("Nukh", "Nukh");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("MemberName", "MemberName");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup");
            tableMapping.ColumnMappings.Add("CNIC", "CNIC");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("Duplicate", "Duplicate");
            tableMapping.ColumnMappings.Add("Occupation", "Occupation");
            tableMapping.ColumnMappings.Add("SNo", "SNo");
            tableMapping.ColumnMappings.Add("IsNicPrinted", "IsNicPrinted");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[7];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetNicTableData";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.usp_CHK_IsNICAlreadyGenerated";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommunityIDCard", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.usp_CHK_IsNICAlreadyGeneratedWithID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommunityIDCard", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RecordID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"INSERT INTO tblNIC
                         (MemberID, Image, NIC, MemberSign, SecretarySign, IssueDate, ValidDate, FCardNo, GrandFatherName, Orakh, Nukh, Address, Duplicate, Occupation, IsNicPrinted)
VALUES        (@MemberID,@Image,@NIC,@MemberSign,@SecretarySign,@IssueDate,@ValidDate,@FCardNo,@GrandFatherName,@Orakh,@Nukh,@Address,@Duplicate,@Occupation,@IsNicPrinted)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MemberID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image", global::System.Data.SqlDbType.Image, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "Image", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberSign", global::System.Data.SqlDbType.Image, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "MemberSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecretarySign", global::System.Data.SqlDbType.Image, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "SecretarySign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ValidDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrandFatherName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "GrandFatherName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Nukh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 89, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duplicate", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Duplicate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Occupation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Occupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNicPrinted", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsNicPrinted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "DELETE FROM tblNIC WHERE ID = @ID";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.GetNicTableDataById";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.VarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"UPDATE       tblNIC
SET                MemberID = @MemberID, Image = @Image, NIC = @NIC, MemberSign = @MemberSign, SecretarySign = @SecretarySign, IssueDate = @IssueDate, 
                         ValidDate = @ValidDate, FCardNo = @FCardNo, GrandFatherName = @GrandFatherName, Nukh = @Nukh, Orakh = @Orakh, Address = @Address, 
                         Duplicate = @Duplicate, Occupation = @Occupation, IsNicPrinted = @IsNicPrinted
WHERE        (ID = @ID)";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MemberID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Image", global::System.Data.SqlDbType.Image, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "Image", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIC", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MemberSign", global::System.Data.SqlDbType.Image, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "MemberSign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecretarySign", global::System.Data.SqlDbType.Image, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "SecretarySign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ValidDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCardNo", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FCardNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrandFatherName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "GrandFatherName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nukh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Nukh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Orakh", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Orakh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 89, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duplicate", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Duplicate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Occupation", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Occupation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNicPrinted", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IsNicPrinted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dataset.tblNICDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dataset.tblNICDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dataset.tblNICDataTable dataTable = new dataset.tblNICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dataset.tblNICDataTable CheckIFCMICAlreadyGenerated(string CommunityIDCard) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CommunityIDCard == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(CommunityIDCard));
            }
            dataset.tblNICDataTable dataTable = new dataset.tblNICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dataset.tblNICDataTable CheckIfCMICAlreadyGeneratedWithID(string CommunityIDCard, global::System.Nullable<long> RecordID) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((CommunityIDCard == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(CommunityIDCard));
            }
            if ((RecordID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(RecordID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            dataset.tblNICDataTable dataTable = new dataset.tblNICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int GetNICById(dataset.tblNICDataTable dataTable, string NIC) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((NIC == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(NIC));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dataset.tblNICDataTable GetNICDataById(string NIC) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((NIC == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(NIC));
            }
            dataset.tblNICDataTable dataTable = new dataset.tblNICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object CreateNIC(int MemberID, byte[] Image, string NIC, byte[] MemberSign, byte[] SecretarySign, global::System.Nullable<global::System.DateTime> IssueDate, global::System.Nullable<global::System.DateTime> ValidDate, string FCardNo, string GrandFatherName, string Orakh, string Nukh, string Address, string Duplicate, string Occupation, byte IsNicPrinted) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((int)(MemberID));
            if ((Image == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((byte[])(Image));
            }
            if ((NIC == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(NIC));
            }
            if ((MemberSign == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((byte[])(MemberSign));
            }
            if ((SecretarySign == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((byte[])(SecretarySign));
            }
            if ((IssueDate.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(IssueDate.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ValidDate.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(ValidDate.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(FCardNo));
            }
            if ((GrandFatherName == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(GrandFatherName));
            }
            if ((Orakh == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Orakh));
            }
            if ((Nukh == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Nukh));
            }
            if ((Address == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Address));
            }
            if ((Duplicate == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Duplicate));
            }
            if ((Occupation == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(Occupation));
            }
            command.Parameters[14].Value = ((byte)(IsNicPrinted));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteNIC(int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[4];
            command.Parameters[0].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UpdateNIC(
                    int MemberID, 
                    byte[] Image, 
                    string NIC, 
                    byte[] MemberSign, 
                    byte[] SecretarySign, 
                    global::System.Nullable<global::System.DateTime> IssueDate, 
                    global::System.Nullable<global::System.DateTime> ValidDate, 
                    string FCardNo, 
                    string GrandFatherName, 
                    string Nukh, 
                    string Orakh, 
                    string Address, 
                    string Duplicate, 
                    string Occupation, 
                    byte IsNicPrinted, 
                    int ID) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            command.Parameters[0].Value = ((int)(MemberID));
            if ((Image == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((byte[])(Image));
            }
            if ((NIC == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(NIC));
            }
            if ((MemberSign == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((byte[])(MemberSign));
            }
            if ((SecretarySign == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((byte[])(SecretarySign));
            }
            if ((IssueDate.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(IssueDate.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ValidDate.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(ValidDate.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((FCardNo == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(FCardNo));
            }
            if ((GrandFatherName == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(GrandFatherName));
            }
            if ((Nukh == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Nukh));
            }
            if ((Orakh == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Orakh));
            }
            if ((Address == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Address));
            }
            if ((Duplicate == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Duplicate));
            }
            if ((Occupation == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(Occupation));
            }
            command.Parameters[14].Value = ((byte)(IsNicPrinted));
            command.Parameters[15].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblHallBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblHallBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblHallBooking";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Mr", "Mr");
            tableMapping.ColumnMappings.Add("Hall1", "Hall1");
            tableMapping.ColumnMappings.Add("Hall2", "Hall2");
            tableMapping.ColumnMappings.Add("Hall3", "Hall3");
            tableMapping.ColumnMappings.Add("Hall4", "Hall4");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("Day", "Day");
            tableMapping.ColumnMappings.Add("FromTime", "FromTime");
            tableMapping.ColumnMappings.Add("ToTime", "ToTime");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("ReasonCancel", "ReasonCancel");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("Events", "Events");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Hall5", "Hall5");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     tblHallBooking.ID, tblHallBooking.SerialNo, tblHallBooking.Date, tblHallBooking.Mr, tblHallBooking.Hall1, tblHallBooking.Hall2, tblHallBooking.Hall3, 
                      tblHallBooking.Hall4, tblHallBooking.Hall5, tblHallBooking.Dated, tblHallBooking.Day, tblHallBooking.FromTime, tblHallBooking.ToTime, tblHallBooking.Remarks, 
                      tblHallBooking.FName, tblHallBooking.Orakh, tblHallBooking.ReasonCancel, tblHallBooking.Amount, tblEvents.Events, tblHallBooking.ContactNo, 
                      tblAccounts.AccountName
FROM         tblHallBooking INNER JOIN
                      tblEvents ON tblHallBooking.Event = tblEvents.ID INNER JOIN
                      tblAccounts ON tblHallBooking.Account = tblAccounts.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dataset.tblHallBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dataset.tblHallBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dataset.tblHallBookingDataTable dataTable = new dataset.tblHallBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class fnHallBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public fnHallBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "fnHallBooking";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Mr", "Mr");
            tableMapping.ColumnMappings.Add("Hall1", "Hall1");
            tableMapping.ColumnMappings.Add("Hall2", "Hall2");
            tableMapping.ColumnMappings.Add("Hall3", "Hall3");
            tableMapping.ColumnMappings.Add("Hall4", "Hall4");
            tableMapping.ColumnMappings.Add("Dated", "Dated");
            tableMapping.ColumnMappings.Add("Day", "Day");
            tableMapping.ColumnMappings.Add("FromTime", "FromTime");
            tableMapping.ColumnMappings.Add("ToTime", "ToTime");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("ReasonCancel", "ReasonCancel");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("Account", "Account");
            tableMapping.ColumnMappings.Add("Events", "Events");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("GroupName", "GroupName");
            tableMapping.ColumnMappings.Add("Hall5", "Hall5");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Select * from dbo.fnHallBooking(@SerialNo)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillHallBookingForSerialNo(dataset.fnHallBookingDataTable dataTable, int SerialNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(SerialNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dataset.fnHallBookingDataTable GetDataHallBookingForSerialNo(int SerialNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(SerialNo));
            dataset.fnHallBookingDataTable dataTable = new dataset.fnHallBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591