//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MCKJ {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CommunityDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CommunityDataSet : global::System.Data.DataSet {
        
        private usp_GetHallBookingDataTable tableusp_GetHallBooking;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CommunityDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CommunityDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["usp_GetHallBooking"] != null)) {
                    base.Tables.Add(new usp_GetHallBookingDataTable(ds.Tables["usp_GetHallBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usp_GetHallBookingDataTable usp_GetHallBooking {
            get {
                return this.tableusp_GetHallBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CommunityDataSet cln = ((CommunityDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["usp_GetHallBooking"] != null)) {
                    base.Tables.Add(new usp_GetHallBookingDataTable(ds.Tables["usp_GetHallBooking"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableusp_GetHallBooking = ((usp_GetHallBookingDataTable)(base.Tables["usp_GetHallBooking"]));
            if ((initTable == true)) {
                if ((this.tableusp_GetHallBooking != null)) {
                    this.tableusp_GetHallBooking.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CommunityDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CommunityDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableusp_GetHallBooking = new usp_GetHallBookingDataTable();
            base.Tables.Add(this.tableusp_GetHallBooking);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeusp_GetHallBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CommunityDataSet ds = new CommunityDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void usp_GetHallBookingRowChangeEventHandler(object sender, usp_GetHallBookingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usp_GetHallBookingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSerialno;
            
            private global::System.Data.DataColumn columnFCardNo;
            
            private global::System.Data.DataColumn columnMr;
            
            private global::System.Data.DataColumn columnOrakh;
            
            private global::System.Data.DataColumn columnEvent;
            
            private global::System.Data.DataColumn columnEventDate;
            
            private global::System.Data.DataColumn columnDay;
            
            private global::System.Data.DataColumn columnFromTime;
            
            private global::System.Data.DataColumn columnToTime;
            
            private global::System.Data.DataColumn columnHall1;
            
            private global::System.Data.DataColumn columnHall2;
            
            private global::System.Data.DataColumn columnHall3;
            
            private global::System.Data.DataColumn columnHall4;
            
            private global::System.Data.DataColumn columnHall5;
            
            private global::System.Data.DataColumn columnContactNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingDataTable() {
                this.TableName = "usp_GetHallBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_GetHallBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected usp_GetHallBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SerialnoColumn {
                get {
                    return this.columnSerialno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FCardNoColumn {
                get {
                    return this.columnFCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MrColumn {
                get {
                    return this.columnMr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrakhColumn {
                get {
                    return this.columnOrakh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventColumn {
                get {
                    return this.columnEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EventDateColumn {
                get {
                    return this.columnEventDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayColumn {
                get {
                    return this.columnDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall1Column {
                get {
                    return this.columnHall1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall2Column {
                get {
                    return this.columnHall2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall3Column {
                get {
                    return this.columnHall3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall4Column {
                get {
                    return this.columnHall4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Hall5Column {
                get {
                    return this.columnHall5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow this[int index] {
                get {
                    return ((usp_GetHallBookingRow)(this.Rows[index]));
                }
            }
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowChanging;
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowChanged;
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowDeleting;
            
            public event usp_GetHallBookingRowChangeEventHandler usp_GetHallBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addusp_GetHallBookingRow(usp_GetHallBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow Addusp_GetHallBookingRow(int Serialno, string FCardNo, string Mr, string Orakh, int Event, System.DateTime EventDate, System.DateTime Day, System.DateTime FromTime, System.DateTime ToTime, bool Hall1, bool Hall2, bool Hall3, bool Hall4, bool Hall5, string ContactNo) {
                usp_GetHallBookingRow rowusp_GetHallBookingRow = ((usp_GetHallBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Serialno,
                        FCardNo,
                        Mr,
                        Orakh,
                        Event,
                        EventDate,
                        Day,
                        FromTime,
                        ToTime,
                        Hall1,
                        Hall2,
                        Hall3,
                        Hall4,
                        Hall5,
                        ContactNo};
                rowusp_GetHallBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusp_GetHallBookingRow);
                return rowusp_GetHallBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                usp_GetHallBookingDataTable cln = ((usp_GetHallBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usp_GetHallBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSerialno = base.Columns["Serialno"];
                this.columnFCardNo = base.Columns["FCardNo"];
                this.columnMr = base.Columns["Mr"];
                this.columnOrakh = base.Columns["Orakh"];
                this.columnEvent = base.Columns["Event"];
                this.columnEventDate = base.Columns["EventDate"];
                this.columnDay = base.Columns["Day"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToTime = base.Columns["ToTime"];
                this.columnHall1 = base.Columns["Hall1"];
                this.columnHall2 = base.Columns["Hall2"];
                this.columnHall3 = base.Columns["Hall3"];
                this.columnHall4 = base.Columns["Hall4"];
                this.columnHall5 = base.Columns["Hall5"];
                this.columnContactNo = base.Columns["ContactNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSerialno = new global::System.Data.DataColumn("Serialno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialno);
                this.columnFCardNo = new global::System.Data.DataColumn("FCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCardNo);
                this.columnMr = new global::System.Data.DataColumn("Mr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMr);
                this.columnOrakh = new global::System.Data.DataColumn("Orakh", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrakh);
                this.columnEvent = new global::System.Data.DataColumn("Event", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvent);
                this.columnEventDate = new global::System.Data.DataColumn("EventDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEventDate);
                this.columnDay = new global::System.Data.DataColumn("Day", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay);
                this.columnFromTime = new global::System.Data.DataColumn("FromTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToTime = new global::System.Data.DataColumn("ToTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.columnHall1 = new global::System.Data.DataColumn("Hall1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall1);
                this.columnHall2 = new global::System.Data.DataColumn("Hall2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall2);
                this.columnHall3 = new global::System.Data.DataColumn("Hall3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall3);
                this.columnHall4 = new global::System.Data.DataColumn("Hall4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall4);
                this.columnHall5 = new global::System.Data.DataColumn("Hall5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall5);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnFCardNo.MaxLength = 5;
                this.columnMr.MaxLength = 100;
                this.columnOrakh.MaxLength = 50;
                this.columnContactNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow Newusp_GetHallBookingRow() {
                return ((usp_GetHallBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usp_GetHallBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(usp_GetHallBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usp_GetHallBookingRowChanged != null)) {
                    this.usp_GetHallBookingRowChanged(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usp_GetHallBookingRowChanging != null)) {
                    this.usp_GetHallBookingRowChanging(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usp_GetHallBookingRowDeleted != null)) {
                    this.usp_GetHallBookingRowDeleted(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usp_GetHallBookingRowDeleting != null)) {
                    this.usp_GetHallBookingRowDeleting(this, new usp_GetHallBookingRowChangeEvent(((usp_GetHallBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeusp_GetHallBookingRow(usp_GetHallBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CommunityDataSet ds = new CommunityDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usp_GetHallBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class usp_GetHallBookingRow : global::System.Data.DataRow {
            
            private usp_GetHallBookingDataTable tableusp_GetHallBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal usp_GetHallBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusp_GetHallBooking = ((usp_GetHallBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Serialno {
                get {
                    try {
                        return ((int)(this[this.tableusp_GetHallBooking.SerialnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Serialno\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.SerialnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FCardNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.FCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCardNo\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.FCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mr {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.MrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mr\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.MrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orakh {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.OrakhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orakh\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.OrakhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Event {
                get {
                    try {
                        return ((int)(this[this.tableusp_GetHallBooking.EventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Event\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.EventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EventDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.EventDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EventDate\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.EventDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Day {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.DayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.FromTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromTime\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.FromTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableusp_GetHallBooking.ToTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToTime\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.ToTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall1 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall1\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall2 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall2\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall3 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall3\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall4 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall4\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Hall5 {
                get {
                    try {
                        return ((bool)(this[this.tableusp_GetHallBooking.Hall5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hall5\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.Hall5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tableusp_GetHallBooking.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'usp_GetHallBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableusp_GetHallBooking.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSerialnoNull() {
                return this.IsNull(this.tableusp_GetHallBooking.SerialnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSerialnoNull() {
                this[this.tableusp_GetHallBooking.SerialnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFCardNoNull() {
                return this.IsNull(this.tableusp_GetHallBooking.FCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFCardNoNull() {
                this[this.tableusp_GetHallBooking.FCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMrNull() {
                return this.IsNull(this.tableusp_GetHallBooking.MrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMrNull() {
                this[this.tableusp_GetHallBooking.MrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrakhNull() {
                return this.IsNull(this.tableusp_GetHallBooking.OrakhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrakhNull() {
                this[this.tableusp_GetHallBooking.OrakhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventNull() {
                return this.IsNull(this.tableusp_GetHallBooking.EventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventNull() {
                this[this.tableusp_GetHallBooking.EventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEventDateNull() {
                return this.IsNull(this.tableusp_GetHallBooking.EventDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEventDateNull() {
                this[this.tableusp_GetHallBooking.EventDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNull() {
                return this.IsNull(this.tableusp_GetHallBooking.DayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNull() {
                this[this.tableusp_GetHallBooking.DayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromTimeNull() {
                return this.IsNull(this.tableusp_GetHallBooking.FromTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromTimeNull() {
                this[this.tableusp_GetHallBooking.FromTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToTimeNull() {
                return this.IsNull(this.tableusp_GetHallBooking.ToTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToTimeNull() {
                this[this.tableusp_GetHallBooking.ToTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall1Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall1Null() {
                this[this.tableusp_GetHallBooking.Hall1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall2Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall2Null() {
                this[this.tableusp_GetHallBooking.Hall2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall3Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall3Null() {
                this[this.tableusp_GetHallBooking.Hall3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall4Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall4Null() {
                this[this.tableusp_GetHallBooking.Hall4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHall5Null() {
                return this.IsNull(this.tableusp_GetHallBooking.Hall5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHall5Null() {
                this[this.tableusp_GetHallBooking.Hall5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNoNull() {
                return this.IsNull(this.tableusp_GetHallBooking.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNoNull() {
                this[this.tableusp_GetHallBooking.ContactNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class usp_GetHallBookingRowChangeEvent : global::System.EventArgs {
            
            private usp_GetHallBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRowChangeEvent(usp_GetHallBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public usp_GetHallBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MCKJ.CommunityDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usp_GetHallBookingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public usp_GetHallBookingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usp_GetHallBooking";
            tableMapping.ColumnMappings.Add("Serialno", "Serialno");
            tableMapping.ColumnMappings.Add("FCardNo", "FCardNo");
            tableMapping.ColumnMappings.Add("Mr", "Mr");
            tableMapping.ColumnMappings.Add("Orakh", "Orakh");
            tableMapping.ColumnMappings.Add("Event", "Event");
            tableMapping.ColumnMappings.Add("EventDate", "EventDate");
            tableMapping.ColumnMappings.Add("Day", "Day");
            tableMapping.ColumnMappings.Add("FromTime", "FromTime");
            tableMapping.ColumnMappings.Add("ToTime", "ToTime");
            tableMapping.ColumnMappings.Add("Hall1", "Hall1");
            tableMapping.ColumnMappings.Add("Hall2", "Hall2");
            tableMapping.ColumnMappings.Add("Hall3", "Hall3");
            tableMapping.ColumnMappings.Add("Hall4", "Hall4");
            tableMapping.ColumnMappings.Add("Hall5", "Hall5");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MCKJ.Properties.Settings.Default.CommunityConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_GetHallBooking";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CommunityDataSet.usp_GetHallBookingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CommunityDataSet.usp_GetHallBookingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CommunityDataSet.usp_GetHallBookingDataTable dataTable = new CommunityDataSet.usp_GetHallBookingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591